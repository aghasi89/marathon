diff --git a/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js b/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js
index ec505db..569e803 100644
--- a/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js
+++ b/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js
@@ -212,7 +212,7 @@ var MessageInputWithContext = function MessageInputWithContext(props) {
     }
   }, [imagesForInput]);
   var MEGA_BYTES_TO_BYTES = 1024 * 1024;
-  var MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;
+  var MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;
   var uploadImagesHandler = function uploadImagesHandler() {
     var imageToUpload = selectedImages.find(function (selectedImage) {
       var uploadedImage = imageUploads.find(function (imageUpload) {
diff --git a/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js.map b/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js.map
index 6579e5f..31dc892 100644
--- a/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js.map
+++ b/node_modules/stream-chat-react-native-core/lib/commonjs/components/MessageInput/MessageInput.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_useCountdown2","_contexts","_AttachmentPickerContext","_ChannelContext","_MessageInputContext","_MessagesContext","_OwnCapabilitiesContext","_SuggestionsContext","_ThemeContext","_ThreadContext","_TranslationContext","_AttachmentSelectionBar","_AutoCompleteInput","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","styles","StyleSheet","create","attachmentSeparator","borderBottomWidth","marginBottom","autoCompleteInputContainer","alignItems","flexDirection","paddingLeft","paddingRight","composerContainer","container","borderTopWidth","padding","inputBoxContainer","borderRadius","borderWidth","flex","optionsContainer","paddingBottom","replyContainer","paddingHorizontal","sendButtonContainer","suggestionsListContainer","elevation","left","position","right","shadowOffset","height","width","shadowOpacity","MessageInputWithContext","props","additionalTextInputProps","asyncIds","asyncUploads","AutoCompleteSuggestionList","closeAttachmentPicker","cooldownEndsAt","CooldownTimer","disabled","editing","FileUploadPreview","fileUploads","giphyActive","ImageUploadPreview","imageUploads","Input","inputBoxRef","InputButtons","InputEditingStateHeader","InputGiphySearch","InputReplyStateHeader","isOnline","isValidMessage","maxNumberOfFiles","members","mentionedUsers","numberOfUploads","quotedMessage","removeFile","removeImage","Reply","resetInput","SendButton","sending","sendMessageAsync","ShowThreadMessageInChannelButton","suggestions","thread","threadList","triggerType","uploadNewFile","uploadNewImage","watchers","_useState","useState","_useState2","_slicedToArray2","setHeight","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","border","grey_whisper","white","white_smoke","_useTheme$theme$messa","messageInput","attachmentSelectionBar","suggestionListContainer","_useAttachmentPickerC","useAttachmentPickerContext","attachmentPickerBottomSheetHeight","attachmentSelectionBarHeight","bottomInset","selectedFiles","selectedImages","selectedPicker","setMaxNumberOfFiles","setSelectedFiles","setSelectedImages","_useCountdown","useCountdown","cooldownRemainingSeconds","seconds","useEffect","_useState3","_useState4","hasResetImages","setHasResetImages","_useState5","_useState6","hasResetFiles","setHasResetFiles","selectedImagesLength","imageUploadsLength","selectedFilesLength","fileUploadsLength","imagesForInput","forEach","image","id","file","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","uploadImagesHandler","imageToUpload","find","selectedImage","uploadedImage","imageUpload","uri","url","Number","fileSize","Alert","alert","filter","removeImagesHandler","imagesToRemove","fileToUpload","selectedFile","uploadedFile","fileUpload","size","filesToRemove","updatedSelectedImages","map","source","Boolean","updatedSelectedFiles","duration","mimeType","editingExists","current","focus","asyncIdsString","join","asyncUploadsString","values","_ref","state","keys","getMembers","result","member","user","push","getUsers","users","concat","_toConsumableArray2","getWatchers","uniqueUsers","_iterator","_step","usersArray","apply","additionalTextInputContainerProps","_extends2","editable","undefined","createElement","Fragment","View","onLayout","_ref2","newHeight","nativeEvent","layout","style","backgroundColor","borderColor","__self","__source","fileName","lineNumber","columnNumber","paddingVertical","quoted_message","borderBottomColor","marginHorizontal","AutoCompleteInput","cooldownActive","bottom","active","data","onSelect","queryText","AttachmentSelectionBar","areEqual","prevProps","nextProps","prevAdditionalTextInputProps","prevAsyncUploads","prevDisabled","prevEditing","prevFileUploads","prevGiphyActive","prevImageUploads","prevIsOnline","prevIsValidMessage","prevMentionedUsers","prevQuotedMessage","prevSending","prevShowMoreOptions","showMoreOptions","prevSuggestions","prevT","t","prevThread","prevThreadList","nextAdditionalTextInputProps","nextAsyncUploads","nextDisabled","nextEditing","nextFileUploads","nextGiphyActive","nextImageUploads","nextIsOnline","nextIsValidMessage","nextMentionedUsers","nextQuotedMessage","nextSending","nextShowMoreOptions","nextSuggestions","nextT","nextThread","nextThreadList","tEqual","additionalTextInputPropsEven","disabledEqual","editingEqual","imageUploadsEqual","giphyActiveEqual","quotedMessageEqual","sendingEqual","showMoreOptionsEqual","isOnlineEqual","isValidMessageEqual","asyncUploadsEqual","every","fileUploadsEqual","mentionedUsersEqual","suggestionsEqual","_ref3","index","threadEqual","text","reply_count","threadListEqual","MemoizedMessageInput","React","memo","MessageInput","_useChatContext","useChatContext","ownCapabilities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","_useChannelContext$di","_useMessageInputConte","useMessageInputContext","clearEditingState","clearQuotedMessageState","SendMessageDisallowedIndicator","setGiphyActive","setShowMoreOptions","_useMessagesContext","useMessagesContext","_useSuggestionsContex","useSuggestionsContext","AutoCompleteSuggestionHeader","AutoCompleteSuggestionItem","_useThreadContext","useThreadContext","_useTranslationContex","useTranslationContext","sendMessage","exports","displayName"],"sources":["MessageInput.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Alert, StyleSheet, View } from 'react-native';\n\nimport type { UserResponse } from 'stream-chat';\n\nimport { useCountdown } from './hooks/useCountdown';\n\nimport { ChatContextValue, useChatContext } from '../../contexts';\nimport { useAttachmentPickerContext } from '../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { useOwnCapabilitiesContext } from '../../contexts/ownCapabilitiesContext/OwnCapabilitiesContext';\nimport {\n  SuggestionsContextValue,\n  useSuggestionsContext,\n} from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\n\nimport type { Asset, DefaultStreamChatGenerics } from '../../types/types';\nimport { AttachmentSelectionBar } from '../AttachmentPicker/components/AttachmentSelectionBar';\nimport { AutoCompleteInput } from '../AutoCompleteInput/AutoCompleteInput';\n\nconst styles = StyleSheet.create({\n  attachmentSeparator: {\n    borderBottomWidth: 1,\n    marginBottom: 10,\n  },\n  autoCompleteInputContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  composerContainer: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  container: {\n    borderTopWidth: 1,\n    padding: 10,\n  },\n  inputBoxContainer: {\n    borderRadius: 20,\n    borderWidth: 1,\n    flex: 1,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    paddingBottom: 10,\n    paddingRight: 10,\n  },\n  replyContainer: { paddingBottom: 12, paddingHorizontal: 8 },\n  sendButtonContainer: { paddingBottom: 10, paddingLeft: 10 },\n  suggestionsListContainer: {\n    borderRadius: 10,\n    elevation: 3,\n    left: 8,\n    position: 'absolute',\n    right: 8,\n    shadowOffset: { height: 1, width: 0 },\n    shadowOpacity: 0.15,\n  },\n});\n\ntype MessageInputPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChatContextValue<StreamChatGenerics>, 'isOnline'> &\n  Pick<ChannelContextValue<StreamChatGenerics>, 'disabled' | 'members' | 'watchers'> &\n  Pick<\n    MessageInputContextValue<StreamChatGenerics>,\n    | 'additionalTextInputProps'\n    | 'asyncIds'\n    | 'asyncUploads'\n    | 'cooldownEndsAt'\n    | 'CooldownTimer'\n    | 'clearEditingState'\n    | 'clearQuotedMessageState'\n    | 'closeAttachmentPicker'\n    | 'editing'\n    | 'FileUploadPreview'\n    | 'fileUploads'\n    | 'giphyActive'\n    | 'ImageUploadPreview'\n    | 'imageUploads'\n    | 'Input'\n    | 'inputBoxRef'\n    | 'InputButtons'\n    | 'InputEditingStateHeader'\n    | 'InputGiphySearch'\n    | 'InputReplyStateHeader'\n    | 'isValidMessage'\n    | 'maxNumberOfFiles'\n    | 'mentionedUsers'\n    | 'numberOfUploads'\n    | 'quotedMessage'\n    | 'resetInput'\n    | 'SendButton'\n    | 'sending'\n    | 'sendMessageAsync'\n    | 'setShowMoreOptions'\n    | 'setGiphyActive'\n    | 'showMoreOptions'\n    | 'ShowThreadMessageInChannelButton'\n    | 'removeFile'\n    | 'removeImage'\n    | 'uploadNewFile'\n    | 'uploadNewImage'\n  > &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'Reply'> &\n  Pick<\n    SuggestionsContextValue<StreamChatGenerics>,\n    | 'AutoCompleteSuggestionHeader'\n    | 'AutoCompleteSuggestionItem'\n    | 'AutoCompleteSuggestionList'\n    | 'suggestions'\n    | 'triggerType'\n  > &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'thread'> &\n  Pick<TranslationContextValue, 't'> & {\n    threadList?: boolean;\n  };\n\nconst MessageInputWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    AutoCompleteSuggestionList,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    disabled,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isOnline,\n    isValidMessage,\n    maxNumberOfFiles,\n    members,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    Reply,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    ShowThreadMessageInChannelButton,\n    suggestions,\n    thread,\n    threadList,\n    triggerType,\n    uploadNewFile,\n    uploadNewImage,\n    watchers,\n  } = props;\n\n  const [height, setHeight] = useState(0);\n\n  const {\n    theme: {\n      colors: { border, grey_whisper, white, white_smoke },\n      messageInput: {\n        attachmentSelectionBar,\n        autoCompleteInputContainer,\n        composerContainer,\n        container,\n        inputBoxContainer,\n        optionsContainer,\n        replyContainer,\n        sendButtonContainer,\n        suggestionsListContainer: { container: suggestionListContainer },\n      },\n    },\n  } = useTheme();\n\n  const {\n    attachmentPickerBottomSheetHeight,\n    attachmentSelectionBarHeight,\n    bottomInset,\n    selectedFiles,\n    selectedImages,\n    selectedPicker,\n    setMaxNumberOfFiles,\n    setSelectedFiles,\n    setSelectedImages,\n  } = useAttachmentPickerContext();\n\n  const { seconds: cooldownRemainingSeconds } = useCountdown(cooldownEndsAt);\n\n  /**\n   * Mounting and un-mounting logic are un-related in following useEffect.\n   * While mounting we want to pass maxNumberOfFiles (which is prop on Channel component)\n   * to AttachmentPicker (on OverlayProvider)\n   *\n   * While un-mounting, we want to close the picker e.g., while navigating away.\n   */\n  useEffect(() => {\n    setMaxNumberOfFiles(maxNumberOfFiles ?? 10);\n\n    return closeAttachmentPicker;\n  }, []);\n\n  const [hasResetImages, setHasResetImages] = useState(false);\n  const [hasResetFiles, setHasResetFiles] = useState(false);\n  const selectedImagesLength = hasResetImages ? selectedImages.length : 0;\n  const imageUploadsLength = hasResetImages ? imageUploads.length : 0;\n  const selectedFilesLength = hasResetFiles ? selectedFiles.length : 0;\n  const fileUploadsLength = hasResetFiles ? fileUploads.length : 0;\n  const imagesForInput = (!!thread && !!threadList) || (!thread && !threadList);\n\n  useEffect(() => {\n    setSelectedImages([]);\n    if (imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n    return () => setSelectedImages([]);\n  }, []);\n\n  useEffect(() => {\n    setSelectedFiles([]);\n    if (fileUploads.length) {\n      fileUploads.forEach((file) => removeFile(file.id));\n    }\n    return () => setSelectedFiles([]);\n  }, []);\n\n  useEffect(() => {\n    if (hasResetImages === false && imageUploadsLength === 0 && selectedImagesLength === 0) {\n      setHasResetImages(true);\n    }\n  }, [imageUploadsLength, selectedImagesLength]);\n\n  useEffect(() => {\n    if (hasResetFiles === false && fileUploadsLength === 0 && selectedFilesLength === 0) {\n      setHasResetFiles(true);\n    }\n  }, [fileUploadsLength, selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput === false && imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n  }, [imagesForInput]);\n\n  const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n  const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;\n\n  const uploadImagesHandler = () => {\n    const imageToUpload = selectedImages.find((selectedImage) => {\n      const uploadedImage = imageUploads.find(\n        (imageUpload) =>\n          imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n      );\n      return !uploadedImage;\n    });\n    // Check if the file size of the image exceeds the threshold of 100MB\n    if (\n      imageToUpload &&\n      Number(imageToUpload.fileSize) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n    ) {\n      Alert.alert(\n        `Maximum file size upload limit reached, please upload an image below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n      );\n      setSelectedImages(\n        selectedImages.filter((selectedImage) => selectedImage.uri !== imageToUpload.uri),\n      );\n    } else {\n      if (imageToUpload) uploadNewImage(imageToUpload);\n    }\n  };\n\n  const removeImagesHandler = () => {\n    const imagesToRemove = imageUploads.filter(\n      (imageUpload) =>\n        !selectedImages.find(\n          (selectedImage) =>\n            selectedImage.uri === imageUpload.file.uri || selectedImage.uri === imageUpload.url,\n        ),\n    );\n    imagesToRemove.forEach((image) => removeImage(image.id));\n  };\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (selectedImagesLength > imageUploadsLength) {\n        /** User selected an image in bottom sheet attachment picker */\n        uploadImagesHandler();\n      } else {\n        /** User de-selected an image in bottom sheet attachment picker */\n        removeImagesHandler();\n      }\n    }\n  }, [selectedImagesLength]);\n\n  useEffect(() => {\n    if (selectedFilesLength > fileUploadsLength) {\n      /** User selected a video in bottom sheet attachment picker */\n      const fileToUpload = selectedFiles.find((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return !uploadedFile;\n      });\n      // Check if the file size exceeds the threshold of 100MB\n      if (\n        fileToUpload &&\n        Number(fileToUpload.size) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n      ) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload a file below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n        setSelectedFiles(\n          selectedFiles.filter((selectedFile) => selectedFile.uri !== fileToUpload.uri),\n        );\n      } else {\n        if (fileToUpload) uploadNewFile(fileToUpload);\n      }\n    } else {\n      /** User de-selected a video in bottom sheet attachment picker */\n      const filesToRemove = fileUploads.filter(\n        (fileUpload) =>\n          !selectedFiles.find(\n            (selectedFile) =>\n              selectedFile.uri === fileUpload.file.uri || selectedFile.uri === fileUpload.url,\n          ),\n      );\n      filesToRemove.forEach((file) => removeFile(file.id));\n    }\n  }, [selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (imageUploadsLength < selectedImagesLength) {\n        /** User removed some image from seleted images within ImageUploadPreview. */\n        const updatedSelectedImages = selectedImages.filter((selectedImage) => {\n          const uploadedImage = imageUploads.find(\n            (imageUpload) =>\n              imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n          );\n          return uploadedImage;\n        });\n        setSelectedImages(updatedSelectedImages);\n      } else if (imageUploadsLength > selectedImagesLength) {\n        /**\n         * User is editing some message which contains image attachments OR\n         * image attachment is added from custom image picker (other than the default bottomsheet image picker)\n         * using `uploadNewImage` function from `MessageInputContext`.\n         **/\n        setSelectedImages(\n          imageUploads\n            .map((imageUpload) => ({\n              height: imageUpload.file.height,\n              source: imageUpload.file.source,\n              uri: imageUpload.url || imageUpload.file.uri,\n              width: imageUpload.file.width,\n            }))\n            .filter(Boolean) as Asset[],\n        );\n      }\n    }\n  }, [imageUploadsLength]);\n\n  useEffect(() => {\n    if (fileUploadsLength < selectedFilesLength) {\n      /** User removed some video from seleted files within ImageUploadPreview. */\n      const updatedSelectedFiles = selectedFiles.filter((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return uploadedFile;\n      });\n      setSelectedFiles(updatedSelectedFiles);\n    } else if (fileUploadsLength > selectedFilesLength) {\n      /**\n       * User is editing some message which contains video attachments OR\n       * video attachment is added from custom image picker (other than the default bottom-sheet image picker)\n       * using `uploadNewFile` function from `MessageInputContext`.\n       **/\n      setSelectedFiles(\n        fileUploads.map((fileUpload) => ({\n          duration: fileUpload.file.duration,\n          mimeType: fileUpload.file.mimeType,\n          name: fileUpload.file.name,\n          size: fileUpload.file.size,\n          uri: fileUpload.file.uri,\n        })),\n      );\n    }\n  }, [fileUploadsLength]);\n\n  const editingExists = !!editing;\n  useEffect(() => {\n    if (editing && inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n\n    /**\n     * Make sure to test `initialValue` functionality, if you are modifying following condition.\n     *\n     * We have the following condition, to make sure - when user comes out of \"editing message\" state,\n     * we wipe out all the state around message input such as text, mentioned users, image uploads etc.\n     * But it also means, this condition will be fired up on first render, which may result in clearing\n     * the initial value set on input box, through the prop - `initialValue`.\n     * This prop generally gets used for the case of draft message functionality.\n     */\n    if (\n      !editing &&\n      (giphyActive ||\n        fileUploads.length > 0 ||\n        mentionedUsers.length > 0 ||\n        imageUploads.length > 0 ||\n        numberOfUploads > 0)\n    ) {\n      resetInput();\n    }\n  }, [editingExists]);\n\n  const asyncIdsString = asyncIds.join();\n  const asyncUploadsString = Object.values(asyncUploads)\n    .map(({ state, url }) => `${state}${url}`)\n    .join();\n  useEffect(() => {\n    if (Object.keys(asyncUploads).length) {\n      /**\n       * When successful image upload response occurs after hitting send,\n       * send a follow up message with the image\n       */\n      sending.current = true;\n      asyncIds.forEach((id) => sendMessageAsync(id));\n      sending.current = false;\n    }\n  }, [asyncIdsString, asyncUploadsString, sendMessageAsync]);\n\n  const getMembers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (members && Object.values(members).length) {\n      Object.values(members).forEach((member) => {\n        if (member.user) {\n          result.push(member.user);\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const getUsers = () => {\n    const users = [...getMembers(), ...getWatchers()];\n\n    // make sure we don't list users twice\n    const uniqueUsers: { [key: string]: UserResponse<StreamChatGenerics> } = {};\n    for (const user of users) {\n      if (user && !uniqueUsers[user.id]) {\n        uniqueUsers[user.id] = user;\n      }\n    }\n    const usersArray = Object.values(uniqueUsers);\n\n    return usersArray;\n  };\n\n  const getWatchers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (watchers && Object.values(watchers).length) {\n      result.push(...Object.values(watchers));\n    }\n\n    return result;\n  };\n\n  const additionalTextInputContainerProps = {\n    editable: disabled ? false : undefined,\n    ...additionalTextInputProps,\n  };\n\n  return (\n    <>\n      <View\n        onLayout={({\n          nativeEvent: {\n            layout: { height: newHeight },\n          },\n        }) => setHeight(newHeight)}\n        style={[styles.container, { backgroundColor: white, borderColor: border }, container]}\n      >\n        {editing && <InputEditingStateHeader />}\n        {quotedMessage && <InputReplyStateHeader />}\n        <View style={[styles.composerContainer, composerContainer]}>\n          {Input ? (\n            <Input\n              additionalTextInputProps={additionalTextInputContainerProps}\n              getUsers={getUsers}\n            />\n          ) : (\n            <>\n              <View style={[styles.optionsContainer, optionsContainer]}>\n                {InputButtons && <InputButtons />}\n              </View>\n              <View\n                style={[\n                  styles.inputBoxContainer,\n                  {\n                    borderColor: grey_whisper,\n                    paddingVertical: giphyActive ? 8 : 12,\n                  },\n                  inputBoxContainer,\n                ]}\n              >\n                {((typeof editing !== 'boolean' && editing?.quoted_message) || quotedMessage) && (\n                  <View style={[styles.replyContainer, replyContainer]}>\n                    <Reply />\n                  </View>\n                )}\n                {imageUploads.length ? <ImageUploadPreview /> : null}\n                {imageUploads.length && fileUploads.length ? (\n                  <View\n                    style={[\n                      styles.attachmentSeparator,\n                      {\n                        borderBottomColor: grey_whisper,\n                        marginHorizontal: giphyActive ? 8 : 12,\n                      },\n                    ]}\n                  />\n                ) : null}\n                {fileUploads.length ? <FileUploadPreview /> : null}\n                {giphyActive ? (\n                  <InputGiphySearch disabled={!isOnline} />\n                ) : (\n                  <View style={[styles.autoCompleteInputContainer, autoCompleteInputContainer]}>\n                    <AutoCompleteInput<StreamChatGenerics>\n                      additionalTextInputProps={additionalTextInputProps}\n                      cooldownActive={!!cooldownRemainingSeconds}\n                    />\n                  </View>\n                )}\n              </View>\n              <View style={[styles.sendButtonContainer, sendButtonContainer]}>\n                {cooldownRemainingSeconds ? (\n                  <CooldownTimer seconds={cooldownRemainingSeconds} />\n                ) : (\n                  <SendButton\n                    disabled={\n                      disabled || sending.current || !isValidMessage() || (giphyActive && !isOnline)\n                    }\n                  />\n                )}\n              </View>\n            </>\n          )}\n        </View>\n        <ShowThreadMessageInChannelButton threadList={threadList} />\n      </View>\n\n      {triggerType && suggestions ? (\n        <View\n          style={[\n            suggestionListContainer,\n            styles.suggestionsListContainer,\n            { backgroundColor: white, bottom: height },\n          ]}\n        >\n          <AutoCompleteSuggestionList\n            active={!!suggestions}\n            data={suggestions.data}\n            onSelect={suggestions.onSelect}\n            queryText={suggestions.queryText}\n            triggerType={triggerType}\n          />\n        </View>\n      ) : null}\n      {selectedPicker && (\n        <View\n          style={[\n            {\n              backgroundColor: white_smoke,\n              height:\n                (attachmentPickerBottomSheetHeight\n                  ? attachmentPickerBottomSheetHeight + (attachmentSelectionBarHeight ?? 52)\n                  : 360) - bottomInset,\n            },\n            attachmentSelectionBar,\n          ]}\n        >\n          <AttachmentSelectionBar />\n        </View>\n      )}\n    </>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageInputPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps: prevAdditionalTextInputProps,\n    asyncUploads: prevAsyncUploads,\n    disabled: prevDisabled,\n    editing: prevEditing,\n    fileUploads: prevFileUploads,\n    giphyActive: prevGiphyActive,\n    imageUploads: prevImageUploads,\n    isOnline: prevIsOnline,\n    isValidMessage: prevIsValidMessage,\n    mentionedUsers: prevMentionedUsers,\n    quotedMessage: prevQuotedMessage,\n    sending: prevSending,\n    showMoreOptions: prevShowMoreOptions,\n    suggestions: prevSuggestions,\n    t: prevT,\n    thread: prevThread,\n    threadList: prevThreadList,\n  } = prevProps;\n  const {\n    additionalTextInputProps: nextAdditionalTextInputProps,\n    asyncUploads: nextAsyncUploads,\n    disabled: nextDisabled,\n    editing: nextEditing,\n    fileUploads: nextFileUploads,\n    giphyActive: nextGiphyActive,\n    imageUploads: nextImageUploads,\n    isOnline: nextIsOnline,\n    isValidMessage: nextIsValidMessage,\n    mentionedUsers: nextMentionedUsers,\n    quotedMessage: nextQuotedMessage,\n    sending: nextSending,\n    showMoreOptions: nextShowMoreOptions,\n    suggestions: nextSuggestions,\n    t: nextT,\n    thread: nextThread,\n    threadList: nextThreadList,\n  } = nextProps;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const additionalTextInputPropsEven =\n    prevAdditionalTextInputProps === nextAdditionalTextInputProps;\n  if (!additionalTextInputPropsEven) return false;\n\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  const editingEqual = !!prevEditing === !!nextEditing;\n  if (!editingEqual) return false;\n\n  const imageUploadsEqual = prevImageUploads.length === nextImageUploads.length;\n  if (!imageUploadsEqual) return false;\n\n  const giphyActiveEqual = prevGiphyActive === nextGiphyActive;\n  if (!giphyActiveEqual) return false;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n  if (!quotedMessageEqual) return false;\n\n  const sendingEqual = prevSending.current === nextSending.current;\n  if (!sendingEqual) return false;\n\n  const showMoreOptionsEqual = prevShowMoreOptions === nextShowMoreOptions;\n  if (!showMoreOptionsEqual) return false;\n\n  const isOnlineEqual = prevIsOnline === nextIsOnline;\n  if (!isOnlineEqual) return false;\n\n  const isValidMessageEqual = prevIsValidMessage() === nextIsValidMessage();\n  if (!isValidMessageEqual) return false;\n\n  const asyncUploadsEqual = Object.keys(prevAsyncUploads).every(\n    (key) =>\n      prevAsyncUploads[key].state === nextAsyncUploads[key].state &&\n      prevAsyncUploads[key].url === nextAsyncUploads[key].url,\n  );\n  if (!asyncUploadsEqual) return false;\n\n  const fileUploadsEqual = prevFileUploads.length === nextFileUploads.length;\n  if (!fileUploadsEqual) return false;\n\n  const mentionedUsersEqual = prevMentionedUsers.length === nextMentionedUsers.length;\n  if (!mentionedUsersEqual) return false;\n\n  const suggestionsEqual =\n    !!prevSuggestions?.data && !!nextSuggestions?.data\n      ? prevSuggestions.data.length === nextSuggestions.data.length &&\n        prevSuggestions.data.every(({ name }, index) => name === nextSuggestions.data[index].name)\n      : !!prevSuggestions === !!nextSuggestions;\n  if (!suggestionsEqual) return false;\n\n  const threadEqual =\n    prevThread?.id === nextThread?.id &&\n    prevThread?.text === nextThread?.text &&\n    prevThread?.reply_count === nextThread?.reply_count;\n  if (!threadEqual) return false;\n\n  const threadListEqual = prevThreadList === nextThreadList;\n  if (!threadListEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageInput = React.memo(\n  MessageInputWithContext,\n  areEqual,\n) as typeof MessageInputWithContext;\n\nexport type MessageInputProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageInputPropsWithContext<StreamChatGenerics>>;\n\n/**\n * UI Component for message input\n * It's a consumer of\n * [Channel Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/channel-context/),\n * [Chat Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/chat-context/),\n * [MessageInput Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/message-input-context/),\n * [Suggestions Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/suggestions-context/), and\n * [Translation Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/translation-context/)\n */\nexport const MessageInput = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputProps<StreamChatGenerics>,\n) => {\n  const { isOnline } = useChatContext();\n  const ownCapabilities = useOwnCapabilitiesContext();\n\n  const { disabled = false, members, watchers } = useChannelContext<StreamChatGenerics>();\n\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    clearEditingState,\n    clearQuotedMessageState,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isValidMessage,\n    maxNumberOfFiles,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    SendMessageDisallowedIndicator,\n    setGiphyActive,\n    setShowMoreOptions,\n    showMoreOptions,\n    ShowThreadMessageInChannelButton,\n    uploadNewFile,\n    uploadNewImage,\n  } = useMessageInputContext<StreamChatGenerics>();\n\n  const { Reply } = useMessagesContext<StreamChatGenerics>();\n\n  const {\n    AutoCompleteSuggestionHeader,\n    AutoCompleteSuggestionItem,\n    AutoCompleteSuggestionList,\n    suggestions,\n    triggerType,\n  } = useSuggestionsContext<StreamChatGenerics>();\n\n  const { thread } = useThreadContext<StreamChatGenerics>();\n\n  const { t } = useTranslationContext();\n\n  if (!ownCapabilities.sendMessage && SendMessageDisallowedIndicator) {\n    return <SendMessageDisallowedIndicator />;\n  }\n\n  return (\n    <MemoizedMessageInput\n      {...{\n        additionalTextInputProps,\n        asyncIds,\n        asyncUploads,\n        AutoCompleteSuggestionHeader,\n        AutoCompleteSuggestionItem,\n        AutoCompleteSuggestionList,\n        clearEditingState,\n        clearQuotedMessageState,\n        closeAttachmentPicker,\n        cooldownEndsAt,\n        CooldownTimer,\n        disabled,\n        editing,\n        FileUploadPreview,\n        fileUploads,\n        giphyActive,\n        ImageUploadPreview,\n        imageUploads,\n        Input,\n        inputBoxRef,\n        InputButtons,\n        InputEditingStateHeader,\n        InputGiphySearch,\n        InputReplyStateHeader,\n        isOnline,\n        isValidMessage,\n        maxNumberOfFiles,\n        members,\n        mentionedUsers,\n        numberOfUploads,\n        quotedMessage,\n        removeFile,\n        removeImage,\n        Reply,\n        resetInput,\n        SendButton,\n        sending,\n        sendMessageAsync,\n        setGiphyActive,\n        setShowMoreOptions,\n        showMoreOptions,\n        ShowThreadMessageInChannelButton,\n        suggestions,\n        t,\n        thread,\n        triggerType,\n        uploadNewFile,\n        uploadNewImage,\n        watchers,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageInput.displayName = 'MessageInput{messageInput}';\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_useCountdown2","_contexts","_AttachmentPickerContext","_ChannelContext","_MessageInputContext","_MessagesContext","_OwnCapabilitiesContext","_SuggestionsContext","_ThemeContext","_ThreadContext","_TranslationContext","_AttachmentSelectionBar","_AutoCompleteInput","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","styles","StyleSheet","create","attachmentSeparator","borderBottomWidth","marginBottom","autoCompleteInputContainer","alignItems","flexDirection","paddingLeft","paddingRight","composerContainer","container","borderTopWidth","padding","inputBoxContainer","borderRadius","borderWidth","flex","optionsContainer","paddingBottom","replyContainer","paddingHorizontal","sendButtonContainer","suggestionsListContainer","elevation","left","position","right","shadowOffset","height","width","shadowOpacity","MessageInputWithContext","props","additionalTextInputProps","asyncIds","asyncUploads","AutoCompleteSuggestionList","closeAttachmentPicker","cooldownEndsAt","CooldownTimer","disabled","editing","FileUploadPreview","fileUploads","giphyActive","ImageUploadPreview","imageUploads","Input","inputBoxRef","InputButtons","InputEditingStateHeader","InputGiphySearch","InputReplyStateHeader","isOnline","isValidMessage","maxNumberOfFiles","members","mentionedUsers","numberOfUploads","quotedMessage","removeFile","removeImage","Reply","resetInput","SendButton","sending","sendMessageAsync","ShowThreadMessageInChannelButton","suggestions","thread","threadList","triggerType","uploadNewFile","uploadNewImage","watchers","_useState","useState","_useState2","_slicedToArray2","setHeight","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","border","grey_whisper","white","white_smoke","_useTheme$theme$messa","messageInput","attachmentSelectionBar","suggestionListContainer","_useAttachmentPickerC","useAttachmentPickerContext","attachmentPickerBottomSheetHeight","attachmentSelectionBarHeight","bottomInset","selectedFiles","selectedImages","selectedPicker","setMaxNumberOfFiles","setSelectedFiles","setSelectedImages","_useCountdown","useCountdown","cooldownRemainingSeconds","seconds","useEffect","_useState3","_useState4","hasResetImages","setHasResetImages","_useState5","_useState6","hasResetFiles","setHasResetFiles","selectedImagesLength","imageUploadsLength","selectedFilesLength","fileUploadsLength","imagesForInput","forEach","image","id","file","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","uploadImagesHandler","imageToUpload","find","selectedImage","uploadedImage","imageUpload","uri","url","Number","fileSize","Alert","alert","filter","removeImagesHandler","imagesToRemove","fileToUpload","selectedFile","uploadedFile","fileUpload","size","filesToRemove","updatedSelectedImages","map","source","Boolean","updatedSelectedFiles","duration","mimeType","editingExists","current","focus","asyncIdsString","join","asyncUploadsString","values","_ref","state","keys","getMembers","result","member","user","push","getUsers","users","concat","_toConsumableArray2","getWatchers","uniqueUsers","_iterator","_step","usersArray","apply","additionalTextInputContainerProps","_extends2","editable","undefined","createElement","Fragment","View","onLayout","_ref2","newHeight","nativeEvent","layout","style","backgroundColor","borderColor","__self","__source","fileName","lineNumber","columnNumber","paddingVertical","quoted_message","borderBottomColor","marginHorizontal","AutoCompleteInput","cooldownActive","bottom","active","data","onSelect","queryText","AttachmentSelectionBar","areEqual","prevProps","nextProps","prevAdditionalTextInputProps","prevAsyncUploads","prevDisabled","prevEditing","prevFileUploads","prevGiphyActive","prevImageUploads","prevIsOnline","prevIsValidMessage","prevMentionedUsers","prevQuotedMessage","prevSending","prevShowMoreOptions","showMoreOptions","prevSuggestions","prevT","t","prevThread","prevThreadList","nextAdditionalTextInputProps","nextAsyncUploads","nextDisabled","nextEditing","nextFileUploads","nextGiphyActive","nextImageUploads","nextIsOnline","nextIsValidMessage","nextMentionedUsers","nextQuotedMessage","nextSending","nextShowMoreOptions","nextSuggestions","nextT","nextThread","nextThreadList","tEqual","additionalTextInputPropsEven","disabledEqual","editingEqual","imageUploadsEqual","giphyActiveEqual","quotedMessageEqual","sendingEqual","showMoreOptionsEqual","isOnlineEqual","isValidMessageEqual","asyncUploadsEqual","every","fileUploadsEqual","mentionedUsersEqual","suggestionsEqual","_ref3","index","threadEqual","text","reply_count","threadListEqual","MemoizedMessageInput","React","memo","MessageInput","_useChatContext","useChatContext","ownCapabilities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","_useChannelContext$di","_useMessageInputConte","useMessageInputContext","clearEditingState","clearQuotedMessageState","SendMessageDisallowedIndicator","setGiphyActive","setShowMoreOptions","_useMessagesContext","useMessagesContext","_useSuggestionsContex","useSuggestionsContext","AutoCompleteSuggestionHeader","AutoCompleteSuggestionItem","_useThreadContext","useThreadContext","_useTranslationContex","useTranslationContext","sendMessage","exports","displayName"],"sources":["MessageInput.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Alert, StyleSheet, View } from 'react-native';\n\nimport type { UserResponse } from 'stream-chat';\n\nimport { useCountdown } from './hooks/useCountdown';\n\nimport { ChatContextValue, useChatContext } from '../../contexts';\nimport { useAttachmentPickerContext } from '../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { useOwnCapabilitiesContext } from '../../contexts/ownCapabilitiesContext/OwnCapabilitiesContext';\nimport {\n  SuggestionsContextValue,\n  useSuggestionsContext,\n} from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\n\nimport type { Asset, DefaultStreamChatGenerics } from '../../types/types';\nimport { AttachmentSelectionBar } from '../AttachmentPicker/components/AttachmentSelectionBar';\nimport { AutoCompleteInput } from '../AutoCompleteInput/AutoCompleteInput';\n\nconst styles = StyleSheet.create({\n  attachmentSeparator: {\n    borderBottomWidth: 1,\n    marginBottom: 10,\n  },\n  autoCompleteInputContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  composerContainer: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  container: {\n    borderTopWidth: 1,\n    padding: 10,\n  },\n  inputBoxContainer: {\n    borderRadius: 20,\n    borderWidth: 1,\n    flex: 1,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    paddingBottom: 10,\n    paddingRight: 10,\n  },\n  replyContainer: { paddingBottom: 12, paddingHorizontal: 8 },\n  sendButtonContainer: { paddingBottom: 10, paddingLeft: 10 },\n  suggestionsListContainer: {\n    borderRadius: 10,\n    elevation: 3,\n    left: 8,\n    position: 'absolute',\n    right: 8,\n    shadowOffset: { height: 1, width: 0 },\n    shadowOpacity: 0.15,\n  },\n});\n\ntype MessageInputPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChatContextValue<StreamChatGenerics>, 'isOnline'> &\n  Pick<ChannelContextValue<StreamChatGenerics>, 'disabled' | 'members' | 'watchers'> &\n  Pick<\n    MessageInputContextValue<StreamChatGenerics>,\n    | 'additionalTextInputProps'\n    | 'asyncIds'\n    | 'asyncUploads'\n    | 'cooldownEndsAt'\n    | 'CooldownTimer'\n    | 'clearEditingState'\n    | 'clearQuotedMessageState'\n    | 'closeAttachmentPicker'\n    | 'editing'\n    | 'FileUploadPreview'\n    | 'fileUploads'\n    | 'giphyActive'\n    | 'ImageUploadPreview'\n    | 'imageUploads'\n    | 'Input'\n    | 'inputBoxRef'\n    | 'InputButtons'\n    | 'InputEditingStateHeader'\n    | 'InputGiphySearch'\n    | 'InputReplyStateHeader'\n    | 'isValidMessage'\n    | 'maxNumberOfFiles'\n    | 'mentionedUsers'\n    | 'numberOfUploads'\n    | 'quotedMessage'\n    | 'resetInput'\n    | 'SendButton'\n    | 'sending'\n    | 'sendMessageAsync'\n    | 'setShowMoreOptions'\n    | 'setGiphyActive'\n    | 'showMoreOptions'\n    | 'ShowThreadMessageInChannelButton'\n    | 'removeFile'\n    | 'removeImage'\n    | 'uploadNewFile'\n    | 'uploadNewImage'\n  > &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'Reply'> &\n  Pick<\n    SuggestionsContextValue<StreamChatGenerics>,\n    | 'AutoCompleteSuggestionHeader'\n    | 'AutoCompleteSuggestionItem'\n    | 'AutoCompleteSuggestionList'\n    | 'suggestions'\n    | 'triggerType'\n  > &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'thread'> &\n  Pick<TranslationContextValue, 't'> & {\n    threadList?: boolean;\n  };\n\nconst MessageInputWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    AutoCompleteSuggestionList,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    disabled,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isOnline,\n    isValidMessage,\n    maxNumberOfFiles,\n    members,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    Reply,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    ShowThreadMessageInChannelButton,\n    suggestions,\n    thread,\n    threadList,\n    triggerType,\n    uploadNewFile,\n    uploadNewImage,\n    watchers,\n  } = props;\n\n  const [height, setHeight] = useState(0);\n\n  const {\n    theme: {\n      colors: { border, grey_whisper, white, white_smoke },\n      messageInput: {\n        attachmentSelectionBar,\n        autoCompleteInputContainer,\n        composerContainer,\n        container,\n        inputBoxContainer,\n        optionsContainer,\n        replyContainer,\n        sendButtonContainer,\n        suggestionsListContainer: { container: suggestionListContainer },\n      },\n    },\n  } = useTheme();\n\n  const {\n    attachmentPickerBottomSheetHeight,\n    attachmentSelectionBarHeight,\n    bottomInset,\n    selectedFiles,\n    selectedImages,\n    selectedPicker,\n    setMaxNumberOfFiles,\n    setSelectedFiles,\n    setSelectedImages,\n  } = useAttachmentPickerContext();\n\n  const { seconds: cooldownRemainingSeconds } = useCountdown(cooldownEndsAt);\n\n  /**\n   * Mounting and un-mounting logic are un-related in following useEffect.\n   * While mounting we want to pass maxNumberOfFiles (which is prop on Channel component)\n   * to AttachmentPicker (on OverlayProvider)\n   *\n   * While un-mounting, we want to close the picker e.g., while navigating away.\n   */\n  useEffect(() => {\n    setMaxNumberOfFiles(maxNumberOfFiles ?? 10);\n\n    return closeAttachmentPicker;\n  }, []);\n\n  const [hasResetImages, setHasResetImages] = useState(false);\n  const [hasResetFiles, setHasResetFiles] = useState(false);\n  const selectedImagesLength = hasResetImages ? selectedImages.length : 0;\n  const imageUploadsLength = hasResetImages ? imageUploads.length : 0;\n  const selectedFilesLength = hasResetFiles ? selectedFiles.length : 0;\n  const fileUploadsLength = hasResetFiles ? fileUploads.length : 0;\n  const imagesForInput = (!!thread && !!threadList) || (!thread && !threadList);\n\n  useEffect(() => {\n    setSelectedImages([]);\n    if (imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n    return () => setSelectedImages([]);\n  }, []);\n\n  useEffect(() => {\n    setSelectedFiles([]);\n    if (fileUploads.length) {\n      fileUploads.forEach((file) => removeFile(file.id));\n    }\n    return () => setSelectedFiles([]);\n  }, []);\n\n  useEffect(() => {\n    if (hasResetImages === false && imageUploadsLength === 0 && selectedImagesLength === 0) {\n      setHasResetImages(true);\n    }\n  }, [imageUploadsLength, selectedImagesLength]);\n\n  useEffect(() => {\n    if (hasResetFiles === false && fileUploadsLength === 0 && selectedFilesLength === 0) {\n      setHasResetFiles(true);\n    }\n  }, [fileUploadsLength, selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput === false && imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n  }, [imagesForInput]);\n\n  const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n  const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;\n\n  const uploadImagesHandler = () => {\n    const imageToUpload = selectedImages.find((selectedImage) => {\n      const uploadedImage = imageUploads.find(\n        (imageUpload) =>\n          imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n      );\n      return !uploadedImage;\n    });\n    // Check if the file size of the image exceeds the threshold of 100MB\n    if (\n      imageToUpload &&\n      Number(imageToUpload.fileSize) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n    ) {\n      Alert.alert(\n        `Maximum file size upload limit reached, please upload an image below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n      );\n      setSelectedImages(\n        selectedImages.filter((selectedImage) => selectedImage.uri !== imageToUpload.uri),\n      );\n    } else {\n      if (imageToUpload) uploadNewImage(imageToUpload);\n    }\n  };\n\n  const removeImagesHandler = () => {\n    const imagesToRemove = imageUploads.filter(\n      (imageUpload) =>\n        !selectedImages.find(\n          (selectedImage) =>\n            selectedImage.uri === imageUpload.file.uri || selectedImage.uri === imageUpload.url,\n        ),\n    );\n    imagesToRemove.forEach((image) => removeImage(image.id));\n  };\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (selectedImagesLength > imageUploadsLength) {\n        /** User selected an image in bottom sheet attachment picker */\n        uploadImagesHandler();\n      } else {\n        /** User de-selected an image in bottom sheet attachment picker */\n        removeImagesHandler();\n      }\n    }\n  }, [selectedImagesLength]);\n\n  useEffect(() => {\n    if (selectedFilesLength > fileUploadsLength) {\n      /** User selected a video in bottom sheet attachment picker */\n      const fileToUpload = selectedFiles.find((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return !uploadedFile;\n      });\n      // Check if the file size exceeds the threshold of 100MB\n      if (\n        fileToUpload &&\n        Number(fileToUpload.size) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n      ) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload a file below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n        setSelectedFiles(\n          selectedFiles.filter((selectedFile) => selectedFile.uri !== fileToUpload.uri),\n        );\n      } else {\n        if (fileToUpload) uploadNewFile(fileToUpload);\n      }\n    } else {\n      /** User de-selected a video in bottom sheet attachment picker */\n      const filesToRemove = fileUploads.filter(\n        (fileUpload) =>\n          !selectedFiles.find(\n            (selectedFile) =>\n              selectedFile.uri === fileUpload.file.uri || selectedFile.uri === fileUpload.url,\n          ),\n      );\n      filesToRemove.forEach((file) => removeFile(file.id));\n    }\n  }, [selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (imageUploadsLength < selectedImagesLength) {\n        /** User removed some image from seleted images within ImageUploadPreview. */\n        const updatedSelectedImages = selectedImages.filter((selectedImage) => {\n          const uploadedImage = imageUploads.find(\n            (imageUpload) =>\n              imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n          );\n          return uploadedImage;\n        });\n        setSelectedImages(updatedSelectedImages);\n      } else if (imageUploadsLength > selectedImagesLength) {\n        /**\n         * User is editing some message which contains image attachments OR\n         * image attachment is added from custom image picker (other than the default bottomsheet image picker)\n         * using `uploadNewImage` function from `MessageInputContext`.\n         **/\n        setSelectedImages(\n          imageUploads\n            .map((imageUpload) => ({\n              height: imageUpload.file.height,\n              source: imageUpload.file.source,\n              uri: imageUpload.url || imageUpload.file.uri,\n              width: imageUpload.file.width,\n            }))\n            .filter(Boolean) as Asset[],\n        );\n      }\n    }\n  }, [imageUploadsLength]);\n\n  useEffect(() => {\n    if (fileUploadsLength < selectedFilesLength) {\n      /** User removed some video from seleted files within ImageUploadPreview. */\n      const updatedSelectedFiles = selectedFiles.filter((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return uploadedFile;\n      });\n      setSelectedFiles(updatedSelectedFiles);\n    } else if (fileUploadsLength > selectedFilesLength) {\n      /**\n       * User is editing some message which contains video attachments OR\n       * video attachment is added from custom image picker (other than the default bottom-sheet image picker)\n       * using `uploadNewFile` function from `MessageInputContext`.\n       **/\n      setSelectedFiles(\n        fileUploads.map((fileUpload) => ({\n          duration: fileUpload.file.duration,\n          mimeType: fileUpload.file.mimeType,\n          name: fileUpload.file.name,\n          size: fileUpload.file.size,\n          uri: fileUpload.file.uri,\n        })),\n      );\n    }\n  }, [fileUploadsLength]);\n\n  const editingExists = !!editing;\n  useEffect(() => {\n    if (editing && inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n\n    /**\n     * Make sure to test `initialValue` functionality, if you are modifying following condition.\n     *\n     * We have the following condition, to make sure - when user comes out of \"editing message\" state,\n     * we wipe out all the state around message input such as text, mentioned users, image uploads etc.\n     * But it also means, this condition will be fired up on first render, which may result in clearing\n     * the initial value set on input box, through the prop - `initialValue`.\n     * This prop generally gets used for the case of draft message functionality.\n     */\n    if (\n      !editing &&\n      (giphyActive ||\n        fileUploads.length > 0 ||\n        mentionedUsers.length > 0 ||\n        imageUploads.length > 0 ||\n        numberOfUploads > 0)\n    ) {\n      resetInput();\n    }\n  }, [editingExists]);\n\n  const asyncIdsString = asyncIds.join();\n  const asyncUploadsString = Object.values(asyncUploads)\n    .map(({ state, url }) => `${state}${url}`)\n    .join();\n  useEffect(() => {\n    if (Object.keys(asyncUploads).length) {\n      /**\n       * When successful image upload response occurs after hitting send,\n       * send a follow up message with the image\n       */\n      sending.current = true;\n      asyncIds.forEach((id) => sendMessageAsync(id));\n      sending.current = false;\n    }\n  }, [asyncIdsString, asyncUploadsString, sendMessageAsync]);\n\n  const getMembers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (members && Object.values(members).length) {\n      Object.values(members).forEach((member) => {\n        if (member.user) {\n          result.push(member.user);\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const getUsers = () => {\n    const users = [...getMembers(), ...getWatchers()];\n\n    // make sure we don't list users twice\n    const uniqueUsers: { [key: string]: UserResponse<StreamChatGenerics> } = {};\n    for (const user of users) {\n      if (user && !uniqueUsers[user.id]) {\n        uniqueUsers[user.id] = user;\n      }\n    }\n    const usersArray = Object.values(uniqueUsers);\n\n    return usersArray;\n  };\n\n  const getWatchers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (watchers && Object.values(watchers).length) {\n      result.push(...Object.values(watchers));\n    }\n\n    return result;\n  };\n\n  const additionalTextInputContainerProps = {\n    editable: disabled ? false : undefined,\n    ...additionalTextInputProps,\n  };\n\n  return (\n    <>\n      <View\n        onLayout={({\n          nativeEvent: {\n            layout: { height: newHeight },\n          },\n        }) => setHeight(newHeight)}\n        style={[styles.container, { backgroundColor: white, borderColor: border }, container]}\n      >\n        {editing && <InputEditingStateHeader />}\n        {quotedMessage && <InputReplyStateHeader />}\n        <View style={[styles.composerContainer, composerContainer]}>\n          {Input ? (\n            <Input\n              additionalTextInputProps={additionalTextInputContainerProps}\n              getUsers={getUsers}\n            />\n          ) : (\n            <>\n              <View style={[styles.optionsContainer, optionsContainer]}>\n                {InputButtons && <InputButtons />}\n              </View>\n              <View\n                style={[\n                  styles.inputBoxContainer,\n                  {\n                    borderColor: grey_whisper,\n                    paddingVertical: giphyActive ? 8 : 12,\n                  },\n                  inputBoxContainer,\n                ]}\n              >\n                {((typeof editing !== 'boolean' && editing?.quoted_message) || quotedMessage) && (\n                  <View style={[styles.replyContainer, replyContainer]}>\n                    <Reply />\n                  </View>\n                )}\n                {imageUploads.length ? <ImageUploadPreview /> : null}\n                {imageUploads.length && fileUploads.length ? (\n                  <View\n                    style={[\n                      styles.attachmentSeparator,\n                      {\n                        borderBottomColor: grey_whisper,\n                        marginHorizontal: giphyActive ? 8 : 12,\n                      },\n                    ]}\n                  />\n                ) : null}\n                {fileUploads.length ? <FileUploadPreview /> : null}\n                {giphyActive ? (\n                  <InputGiphySearch disabled={!isOnline} />\n                ) : (\n                  <View style={[styles.autoCompleteInputContainer, autoCompleteInputContainer]}>\n                    <AutoCompleteInput<StreamChatGenerics>\n                      additionalTextInputProps={additionalTextInputProps}\n                      cooldownActive={!!cooldownRemainingSeconds}\n                    />\n                  </View>\n                )}\n              </View>\n              <View style={[styles.sendButtonContainer, sendButtonContainer]}>\n                {cooldownRemainingSeconds ? (\n                  <CooldownTimer seconds={cooldownRemainingSeconds} />\n                ) : (\n                  <SendButton\n                    disabled={\n                      disabled || sending.current || !isValidMessage() || (giphyActive && !isOnline)\n                    }\n                  />\n                )}\n              </View>\n            </>\n          )}\n        </View>\n        <ShowThreadMessageInChannelButton threadList={threadList} />\n      </View>\n\n      {triggerType && suggestions ? (\n        <View\n          style={[\n            suggestionListContainer,\n            styles.suggestionsListContainer,\n            { backgroundColor: white, bottom: height },\n          ]}\n        >\n          <AutoCompleteSuggestionList\n            active={!!suggestions}\n            data={suggestions.data}\n            onSelect={suggestions.onSelect}\n            queryText={suggestions.queryText}\n            triggerType={triggerType}\n          />\n        </View>\n      ) : null}\n      {selectedPicker && (\n        <View\n          style={[\n            {\n              backgroundColor: white_smoke,\n              height:\n                (attachmentPickerBottomSheetHeight\n                  ? attachmentPickerBottomSheetHeight + (attachmentSelectionBarHeight ?? 52)\n                  : 360) - bottomInset,\n            },\n            attachmentSelectionBar,\n          ]}\n        >\n          <AttachmentSelectionBar />\n        </View>\n      )}\n    </>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageInputPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps: prevAdditionalTextInputProps,\n    asyncUploads: prevAsyncUploads,\n    disabled: prevDisabled,\n    editing: prevEditing,\n    fileUploads: prevFileUploads,\n    giphyActive: prevGiphyActive,\n    imageUploads: prevImageUploads,\n    isOnline: prevIsOnline,\n    isValidMessage: prevIsValidMessage,\n    mentionedUsers: prevMentionedUsers,\n    quotedMessage: prevQuotedMessage,\n    sending: prevSending,\n    showMoreOptions: prevShowMoreOptions,\n    suggestions: prevSuggestions,\n    t: prevT,\n    thread: prevThread,\n    threadList: prevThreadList,\n  } = prevProps;\n  const {\n    additionalTextInputProps: nextAdditionalTextInputProps,\n    asyncUploads: nextAsyncUploads,\n    disabled: nextDisabled,\n    editing: nextEditing,\n    fileUploads: nextFileUploads,\n    giphyActive: nextGiphyActive,\n    imageUploads: nextImageUploads,\n    isOnline: nextIsOnline,\n    isValidMessage: nextIsValidMessage,\n    mentionedUsers: nextMentionedUsers,\n    quotedMessage: nextQuotedMessage,\n    sending: nextSending,\n    showMoreOptions: nextShowMoreOptions,\n    suggestions: nextSuggestions,\n    t: nextT,\n    thread: nextThread,\n    threadList: nextThreadList,\n  } = nextProps;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const additionalTextInputPropsEven =\n    prevAdditionalTextInputProps === nextAdditionalTextInputProps;\n  if (!additionalTextInputPropsEven) return false;\n\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  const editingEqual = !!prevEditing === !!nextEditing;\n  if (!editingEqual) return false;\n\n  const imageUploadsEqual = prevImageUploads.length === nextImageUploads.length;\n  if (!imageUploadsEqual) return false;\n\n  const giphyActiveEqual = prevGiphyActive === nextGiphyActive;\n  if (!giphyActiveEqual) return false;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n  if (!quotedMessageEqual) return false;\n\n  const sendingEqual = prevSending.current === nextSending.current;\n  if (!sendingEqual) return false;\n\n  const showMoreOptionsEqual = prevShowMoreOptions === nextShowMoreOptions;\n  if (!showMoreOptionsEqual) return false;\n\n  const isOnlineEqual = prevIsOnline === nextIsOnline;\n  if (!isOnlineEqual) return false;\n\n  const isValidMessageEqual = prevIsValidMessage() === nextIsValidMessage();\n  if (!isValidMessageEqual) return false;\n\n  const asyncUploadsEqual = Object.keys(prevAsyncUploads).every(\n    (key) =>\n      prevAsyncUploads[key].state === nextAsyncUploads[key].state &&\n      prevAsyncUploads[key].url === nextAsyncUploads[key].url,\n  );\n  if (!asyncUploadsEqual) return false;\n\n  const fileUploadsEqual = prevFileUploads.length === nextFileUploads.length;\n  if (!fileUploadsEqual) return false;\n\n  const mentionedUsersEqual = prevMentionedUsers.length === nextMentionedUsers.length;\n  if (!mentionedUsersEqual) return false;\n\n  const suggestionsEqual =\n    !!prevSuggestions?.data && !!nextSuggestions?.data\n      ? prevSuggestions.data.length === nextSuggestions.data.length &&\n        prevSuggestions.data.every(({ name }, index) => name === nextSuggestions.data[index].name)\n      : !!prevSuggestions === !!nextSuggestions;\n  if (!suggestionsEqual) return false;\n\n  const threadEqual =\n    prevThread?.id === nextThread?.id &&\n    prevThread?.text === nextThread?.text &&\n    prevThread?.reply_count === nextThread?.reply_count;\n  if (!threadEqual) return false;\n\n  const threadListEqual = prevThreadList === nextThreadList;\n  if (!threadListEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageInput = React.memo(\n  MessageInputWithContext,\n  areEqual,\n) as typeof MessageInputWithContext;\n\nexport type MessageInputProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageInputPropsWithContext<StreamChatGenerics>>;\n\n/**\n * UI Component for message input\n * It's a consumer of\n * [Channel Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/channel-context/),\n * [Chat Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/chat-context/),\n * [MessageInput Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/message-input-context/),\n * [Suggestions Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/suggestions-context/), and\n * [Translation Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/translation-context/)\n */\nexport const MessageInput = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputProps<StreamChatGenerics>,\n) => {\n  const { isOnline } = useChatContext();\n  const ownCapabilities = useOwnCapabilitiesContext();\n\n  const { disabled = false, members, watchers } = useChannelContext<StreamChatGenerics>();\n\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    clearEditingState,\n    clearQuotedMessageState,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isValidMessage,\n    maxNumberOfFiles,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    SendMessageDisallowedIndicator,\n    setGiphyActive,\n    setShowMoreOptions,\n    showMoreOptions,\n    ShowThreadMessageInChannelButton,\n    uploadNewFile,\n    uploadNewImage,\n  } = useMessageInputContext<StreamChatGenerics>();\n\n  const { Reply } = useMessagesContext<StreamChatGenerics>();\n\n  const {\n    AutoCompleteSuggestionHeader,\n    AutoCompleteSuggestionItem,\n    AutoCompleteSuggestionList,\n    suggestions,\n    triggerType,\n  } = useSuggestionsContext<StreamChatGenerics>();\n\n  const { thread } = useThreadContext<StreamChatGenerics>();\n\n  const { t } = useTranslationContext();\n\n  if (!ownCapabilities.sendMessage && SendMessageDisallowedIndicator) {\n    return <SendMessageDisallowedIndicator />;\n  }\n\n  return (\n    <MemoizedMessageInput\n      {...{\n        additionalTextInputProps,\n        asyncIds,\n        asyncUploads,\n        AutoCompleteSuggestionHeader,\n        AutoCompleteSuggestionItem,\n        AutoCompleteSuggestionList,\n        clearEditingState,\n        clearQuotedMessageState,\n        closeAttachmentPicker,\n        cooldownEndsAt,\n        CooldownTimer,\n        disabled,\n        editing,\n        FileUploadPreview,\n        fileUploads,\n        giphyActive,\n        ImageUploadPreview,\n        imageUploads,\n        Input,\n        inputBoxRef,\n        InputButtons,\n        InputEditingStateHeader,\n        InputGiphySearch,\n        InputReplyStateHeader,\n        isOnline,\n        isValidMessage,\n        maxNumberOfFiles,\n        members,\n        mentionedUsers,\n        numberOfUploads,\n        quotedMessage,\n        removeFile,\n        removeImage,\n        Reply,\n        resetInput,\n        SendButton,\n        sending,\n        sendMessageAsync,\n        setGiphyActive,\n        setShowMoreOptions,\n        showMoreOptions,\n        ShowThreadMessageInChannelButton,\n        suggestions,\n        t,\n        thread,\n        triggerType,\n        uploadNewFile,\n        uploadNewImage,\n        watchers,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageInput.displayName = 'MessageInput{messageInput}';\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js b/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js
index 7edc794..be14c38 100644
--- a/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js
+++ b/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js
@@ -231,7 +231,7 @@ var MessageInputProvider = function MessageInputProvider(_ref) {
           case 8:
             result = _context.sent;
             MEGA_BYTES_TO_BYTES = 1024 * 1024;
-            MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;
+            MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;
             if (!result.cancelled && result.assets) {
               totalFileSize = result.assets.reduce(function (acc, asset) {
                 return acc + Number(asset.size);
diff --git a/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js.map b/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js.map
index 597115c..a43ce65 100644
--- a/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js.map
+++ b/node_modules/stream-chat-react-native-core/lib/commonjs/contexts/messageInputContext/MessageInputContext.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_uniq","_interopRequireDefault","_mimeTypes","_streamChat","_useCreateMessageInputContext","_useMessageDetailsForState","_useCooldown2","_native","_removeReservedFields","_utils","_AttachmentPickerContext","_ChannelContext","_ChatContext","_OwnCapabilitiesContext","_ThreadContext","_TranslationContext","_defaultBaseContextValue","_getDisplayName","_isTestEnvironment","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof3","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","MessageInputContext","React","createContext","DEFAULT_BASE_CONTEXT_VALUE","exports","MessageInputProvider","_ref","_getFileUploadConfig","_getFileUploadConfig2","_getImageUploadConfig","_getImageUploadConfig2","children","_useAttachmentPickerC","useAttachmentPickerContext","closePicker","openPicker","selectedPicker","setSelectedPicker","_useChatContext","useChatContext","appSettings","client","enableOfflineSupport","getFileUploadConfig","_appSettings$app","fileConfig","app","file_upload_config","undefined","blockedFileExtensionTypes","blocked_file_extensions","blockedFileMimeTypes","blocked_mime_types","getImageUploadConfig","_appSettings$app2","imageConfig","image_upload_config","blockedImageExtensionTypes","blockedImageMimeTypes","channelCapabities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","channel","giphyEnabled","_useThreadContext","useThreadContext","thread","_useTranslationContex","useTranslationContext","t","inputBoxRef","useRef","sending","_useState","useState","_useState2","_slicedToArray2","asyncIds","setAsyncIds","_useState3","_useState4","asyncUploads","setAsyncUploads","_useState5","_useState6","giphyActive","setGiphyActive","_useState7","_useState8","sendThreadMessageInChannel","setSendThreadMessageInChannel","editing","hasFilePicker","hasImagePicker","initialValue","_useMessageDetailsFor","useMessageDetailsForState","fileUploads","imageUploads","mentionedUsers","numberOfUploads","setFileUploads","setImageUploads","setMentionedUsers","setNumberOfUploads","setShowMoreOptions","setText","showMoreOptions","text","_useCooldown","useCooldown","cooldownEndsAt","endsAt","startCooldown","start","threadId","id","useEffect","appendText","newText","prevText","isValidMessage","trim","imagesAndFiles","concat","_toConsumableArray2","_iterator","_step","file","state","FileState","NOT_SUPPORTED","_iterator2","_step2","UPLOAD_FAILED","UPLOADING","onChange","current","sendTypingEvents","logChatPromiseExecution","keystroke","onChangeText","openCommandsPicker","focus","openMentionsPicker","openAttachmentPicker","Keyboard","dismiss","pickFile","closeAttachmentPicker","toggleAttachmentPicker","onSelectItem","item","prevMentionedUsers","_ref2","_asyncToGenerator2","_regenerator","mark","_callee","result","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","totalFileSize","wrap","_callee$","_context","prev","pickDocument","console","log","abrupt","maxNumberOfFiles","Alert","alert","sent","cancelled","assets","reduce","acc","asset","Number","size","forEach","uploadNewFile","stop","apply","arguments","removeFile","some","prevFileUploads","filter","prevNumberOfUploads","removeImage","image","prevImageUploads","resetInput","pendingAttachments","mapImageUploadToAttachment","mime_type","lookup","filename","fallback","image_url","url","original_height","height","original_width","width","originalFile","type","mapFileUploadToAttachment","_file$file$mimeType","_file$file$mimeType2","_file$file$mimeType3","mimeType","startsWith","asset_url","uri","duration","file_size","title","thumb_url","sendMessage","_ref3","_callee3","attachments","_loop","_iterator3","_step3","_image","_ret","_iterator4","_step4","_file3","updatedMessage","updateMessagePromise","_callee3$","_context3","sendLinks","match","urlRegex","clear","_callee2","_callee2$","_context2","v","push","sendImageAsync","prevAsyncIds","UPLOADED","FINISHED","delegateYield","t0","_typeof2","isEditingBoolean","_extends2","mentioned_users","quoted_message","clearEditingState","editMessage","removeReservedFields","then","uniq","parent_id","quoted_message_id","quotedMessage","show_in_channel","clearQuotedMessageState","_error","setQuotedMessageState","sendMessageAsync","splice","indexOf","prevAsyncUploads","setInputBoxRef","ref","setInputRef","getTriggerSettings","triggerSettings","autoCompleteTriggerSettings","onMentionSelectItem","ACITriggerSettings","updateMessage","_ref4","_callee4","_callee4$","_context4","regexCondition","getUploadSetStateAction","fileState","extraData","prevUploads","map","prevUpload","handleFileOrImageUploadError","error","isImageError","Error","message","uploadFile","_ref6","_callee5","_ref5","newFile","response","_callee5$","_context5","doDocUploadRequest","sendFile","_x","uploadImage","_ref8","_callee6","_ref7","newImage","_ref9","_file$filename","compressedUri","contentType","newImageUploads","_callee6$","_context6","source","compressImageQuality","compressImage","replace","doImageUploadRequest","sendImage","res","includes","keys","_x2","_ref10","_callee7","isBlockedFileExtension","isBlockedFileMimeType","_callee7$","_context7","generateRandomId","fileExtensionType","_file$name","_file$name2","paused","progress","Promise","all","_x3","uploadNewImage","_ref11","_callee8","isBlockedImageMimeType","isBlockedImageExtension","imageState","_callee8$","_context8","_image$uri","imageExtensionType","_image$uri2","_x4","messageInputContext","useCreateMessageInputContext","openFilePicker","createElement","Provider","__self","__source","fileName","lineNumber","columnNumber","useMessageInputContext","contextValue","useContext","isTestEnvironment","withMessageInputContext","Component","WithMessageInputContextComponent","props","displayName","getDisplayName"],"sources":["MessageInputContext.tsx"],"sourcesContent":["import type { LegacyRef } from 'react';\nimport React, { PropsWithChildren, useContext, useEffect, useRef, useState } from 'react';\nimport type { TextInput, TextInputProps } from 'react-native';\nimport { Alert, Keyboard } from 'react-native';\n\nimport uniq from 'lodash/uniq';\nimport { lookup } from 'mime-types';\nimport {\n  Attachment,\n  logChatPromiseExecution,\n  SendFileAPIResponse,\n  StreamChat,\n  Message as StreamMessage,\n  UserFilters,\n  UserOptions,\n  UserResponse,\n  UserSort,\n} from 'stream-chat';\n\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { isEditingBoolean, useMessageDetailsForState } from './hooks/useMessageDetailsForState';\n\nimport type { AttachButtonProps } from '../../components/MessageInput/AttachButton';\nimport type { CommandsButtonProps } from '../../components/MessageInput/CommandsButton';\nimport type { InputEditingStateHeaderProps } from '../../components/MessageInput/components/InputEditingStateHeader';\nimport type { InputGiphySearchProps } from '../../components/MessageInput/components/InputGiphySearch';\nimport type { InputReplyStateHeaderProps } from '../../components/MessageInput/components/InputReplyStateHeader';\nimport type { CooldownTimerProps } from '../../components/MessageInput/CooldownTimer';\nimport type { FileUploadPreviewProps } from '../../components/MessageInput/FileUploadPreview';\nimport { useCooldown } from '../../components/MessageInput/hooks/useCooldown';\nimport type { ImageUploadPreviewProps } from '../../components/MessageInput/ImageUploadPreview';\nimport type { InputButtonsProps } from '../../components/MessageInput/InputButtons';\nimport type { MessageInputProps } from '../../components/MessageInput/MessageInput';\nimport type { MoreOptionsButtonProps } from '../../components/MessageInput/MoreOptionsButton';\nimport type { SendButtonProps } from '../../components/MessageInput/SendButton';\nimport type { UploadProgressIndicatorProps } from '../../components/MessageInput/UploadProgressIndicator';\nimport type { MessageType } from '../../components/MessageList/hooks/useMessageList';\nimport { compressImage, pickDocument } from '../../native';\nimport type { Asset, DefaultStreamChatGenerics, File, UnknownType } from '../../types/types';\nimport { removeReservedFields } from '../../utils/removeReservedFields';\nimport {\n  ACITriggerSettings,\n  ACITriggerSettingsParams,\n  FileState,\n  FileStateValue,\n  generateRandomId,\n  TriggerSettings,\n  urlRegex,\n} from '../../utils/utils';\nimport { useAttachmentPickerContext } from '../attachmentPickerContext/AttachmentPickerContext';\nimport { ChannelContextValue, useChannelContext } from '../channelContext/ChannelContext';\nimport { useChatContext } from '../chatContext/ChatContext';\nimport { useOwnCapabilitiesContext } from '../ownCapabilitiesContext/OwnCapabilitiesContext';\nimport { useThreadContext } from '../threadContext/ThreadContext';\nimport { useTranslationContext } from '../translationContext/TranslationContext';\nimport { DEFAULT_BASE_CONTEXT_VALUE } from '../utils/defaultBaseContextValue';\n\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { isTestEnvironment } from '../utils/isTestEnvironment';\n\nexport type FileUpload = {\n  file: File;\n  id: string;\n  state: FileStateValue;\n  duration?: number;\n  paused?: boolean;\n  progress?: number;\n  thumb_url?: string;\n  url?: string;\n};\n\nexport type ImageUpload = {\n  file: Partial<Asset> & {\n    name?: string;\n  };\n  id: string;\n  state: FileStateValue;\n  height?: number;\n  url?: string;\n  width?: number;\n};\n\nexport type MentionAllAppUsersQuery<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  filters?: UserFilters<StreamChatGenerics>;\n  options?: UserOptions;\n  sort?: UserSort<StreamChatGenerics>;\n};\n\nexport type LocalMessageInputContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  appendText: (newText: string) => void;\n  asyncIds: string[];\n  asyncUploads: {\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  };\n  closeAttachmentPicker: () => void;\n  /** The time at which the active cooldown will end */\n  cooldownEndsAt: Date;\n  /**\n   * An array of file objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  fileUploads: FileUpload[];\n  giphyActive: boolean;\n  /**\n   * An array of image objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  imageUploads: ImageUpload[];\n  inputBoxRef: React.MutableRefObject<TextInput | null>;\n  isValidMessage: () => boolean;\n  mentionedUsers: string[];\n  numberOfUploads: number;\n  onChange: (newText: string) => void;\n  onSelectItem: (item: UserResponse<StreamChatGenerics>) => void;\n  openAttachmentPicker: () => void;\n  openCommandsPicker: () => void;\n  openFilePicker: () => void;\n  openMentionsPicker: () => void;\n  pickFile: () => Promise<void>;\n  /**\n   * Function for removing a file from the upload preview\n   *\n   * @param id string ID of file in `fileUploads` object in state of MessageInput\n   */\n  removeFile: (id: string) => void;\n  /**\n   * Function for removing an image from the upload preview\n   *\n   * @param id string ID of image in `imageUploads` object in state of MessageInput\n   */\n  removeImage: (id: string) => void;\n  resetInput: (pendingAttachments?: Attachment<StreamChatGenerics>[]) => void;\n  selectedPicker: string | undefined;\n  sending: React.MutableRefObject<boolean>;\n  sendMessage: () => Promise<void>;\n  sendMessageAsync: (id: string) => void;\n  sendThreadMessageInChannel: boolean;\n  setAsyncIds: React.Dispatch<React.SetStateAction<string[]>>;\n  setAsyncUploads: React.Dispatch<\n    React.SetStateAction<{\n      [key: string]: {\n        state: string;\n        url: string;\n      };\n    }>\n  >;\n  setFileUploads: React.Dispatch<React.SetStateAction<FileUpload[]>>;\n  setGiphyActive: React.Dispatch<React.SetStateAction<boolean>>;\n  setImageUploads: React.Dispatch<React.SetStateAction<ImageUpload[]>>;\n  /**\n   * Ref callback to set reference on input box\n   */\n  setInputBoxRef: LegacyRef<TextInput> | undefined;\n  setMentionedUsers: React.Dispatch<React.SetStateAction<string[]>>;\n  setNumberOfUploads: React.Dispatch<React.SetStateAction<number>>;\n  setSendThreadMessageInChannel: React.Dispatch<React.SetStateAction<boolean>>;\n  setShowMoreOptions: React.Dispatch<React.SetStateAction<boolean>>;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  showMoreOptions: boolean;\n  /**\n   * Text value of the TextInput\n   */\n  text: string;\n  toggleAttachmentPicker: () => void;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  triggerSettings: TriggerSettings<StreamChatGenerics>;\n  updateMessage: () => Promise<void>;\n  /** Function for attempting to upload a file */\n  uploadFile: ({ newFile }: { newFile: FileUpload }) => Promise<void>;\n  /** Function for attempting to upload an image */\n  uploadImage: ({ newImage }: { newImage: ImageUpload }) => Promise<void>;\n  uploadNewFile: (file: File) => Promise<void>;\n  uploadNewImage: (image: Partial<Asset>) => Promise<void>;\n};\n\nexport type InputMessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  /**\n   * Custom UI component for attach button.\n   *\n   * Defaults to and accepts same props as: [AttachButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/attach-button/)\n   */\n  AttachButton: React.ComponentType<AttachButtonProps<StreamChatGenerics>>;\n\n  clearEditingState: () => void;\n  clearQuotedMessageState: () => void;\n  /**\n   * Custom UI component for commands button.\n   *\n   * Defaults to and accepts same props as: [CommandsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/commands-button/)\n   */\n  CommandsButton: React.ComponentType<CommandsButtonProps<StreamChatGenerics>>;\n  /**\n   * Custom UI component to display the remaining cooldown a user will have to wait before\n   * being allowed to send another message. This component is displayed in place of the\n   * send button for the MessageInput component.\n   *\n   * **default** [CooldownTimer](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/CooldownTimer.tsx)\n   */\n  CooldownTimer: React.ComponentType<CooldownTimerProps>;\n  editing: boolean | MessageType<StreamChatGenerics>;\n  editMessage: StreamChat<StreamChatGenerics>['updateMessage'];\n\n  /**\n   * Custom UI component for FileUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/FileUploadPreview.tsx\n   */\n  FileUploadPreview: React.ComponentType<FileUploadPreviewProps<StreamChatGenerics>>;\n\n  /** When false, CommandsButton will be hidden */\n  hasCommands: boolean;\n  /** When false, FileSelectorIcon will be hidden */\n  hasFilePicker: boolean;\n  /** When false, ImageSelectorIcon will be hidden */\n  hasImagePicker: boolean;\n  /**\n   * Custom UI component for ImageUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/ImageUploadPreview.tsx\n   */\n  ImageUploadPreview: React.ComponentType<ImageUploadPreviewProps<StreamChatGenerics>>;\n  InputEditingStateHeader: React.ComponentType<InputEditingStateHeaderProps<StreamChatGenerics>>;\n  InputGiphySearch: React.ComponentType<InputGiphySearchProps<StreamChatGenerics>>;\n  InputReplyStateHeader: React.ComponentType<InputReplyStateHeaderProps<StreamChatGenerics>>;\n  /** Limit on allowed number of files to attach at a time. */\n  maxNumberOfFiles: number;\n  /**\n   * Custom UI component for more options button.\n   *\n   * Defaults to and accepts same props as: [MoreOptionsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/more-options-button/)\n   */\n  MoreOptionsButton: React.ComponentType<MoreOptionsButtonProps<StreamChatGenerics>>;\n  /** Limit on the number of lines in the text input before scrolling */\n  numberOfLines: number;\n  quotedMessage: boolean | MessageType<StreamChatGenerics>;\n  /**\n   * Custom UI component for send button.\n   *\n   * Defaults to and accepts same props as: [SendButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/send-button/)\n   */\n  SendButton: React.ComponentType<SendButtonProps<StreamChatGenerics>>;\n  sendImageAsync: boolean;\n  sendMessage: (message: Partial<StreamMessage<StreamChatGenerics>>) => Promise<void>;\n  setQuotedMessageState: (message: MessageType<StreamChatGenerics>) => void;\n  /**\n   * Custom UI component to render checkbox with text (\"Also send to channel\") in Thread's input box.\n   * When ticked, message will also be sent in parent channel.\n   */\n  ShowThreadMessageInChannelButton: React.ComponentType<{\n    threadList?: boolean;\n  }>;\n  /**\n   * Custom UI component to render upload progress indicator on attachment preview.\n   *\n   * **Default** [UploadProgressIndicator](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/UploadProgressIndicator.tsx)\n   */\n  UploadProgressIndicator: React.ComponentType<UploadProgressIndicatorProps>;\n  /**\n   * Additional props for underlying TextInput component. These props will be forwarded as it is to TextInput component.\n   *\n   * @see See https://reactnative.dev/docs/textinput#reference\n   */\n  additionalTextInputProps?: TextInputProps;\n  /** Max number of suggestions to display in autocomplete list. Defaults to 10. */\n  autoCompleteSuggestionsLimit?: number;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  autoCompleteTriggerSettings?: (\n    settings: ACITriggerSettingsParams<StreamChatGenerics>,\n  ) => TriggerSettings<StreamChatGenerics>;\n  /**\n   * Compress image with quality (from 0 to 1, where 1 is best quality).\n   * On iOS, values larger than 0.8 don't produce a noticeable quality increase in most images,\n   * while a value of 0.8 will reduce the file size by about half or less compared to a value of 1.\n   * Image picker defaults to 0.8 for iOS and 1 for Android\n   */\n  compressImageQuality?: number;\n  /**\n   * Override file upload request\n   *\n   * @param file    File object - { uri: '', name: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doDocUploadRequest?: (\n    file: File,\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n  /**\n   * Override image upload request\n   *\n   * @param file    File object - { uri: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doImageUploadRequest?: (\n    file: {\n      name?: string;\n      uri?: string;\n    },\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n\n  /** Initial value to set on input */\n  initialValue?: string;\n  /**\n   * Custom UI component for AutoCompleteInput.\n   * Has access to all of [MessageInputContext](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/contexts/messageInputContext/MessageInputContext.tsx)\n   */\n  Input?: React.ComponentType<\n    Omit<MessageInputProps<StreamChatGenerics>, 'Input'> &\n      InputButtonsProps<StreamChatGenerics> & {\n        getUsers: () => UserResponse<StreamChatGenerics>[];\n      }\n  >;\n  /**\n   * Custom UI component to override buttons on left side of input box\n   * Defaults to [InputButtons](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/InputButtons.tsx),\n   * which contain following components/buttons:\n   *\n   *  - AttachButton\n   *  - CommandsButtom\n   *\n   * You have access to following prop functions:\n   *\n   * - closeAttachmentPicker\n   * - openAttachmentPicker\n   * - openCommandsPicker\n   * - toggleAttachmentPicker\n   */\n  InputButtons?: React.ComponentType<InputButtonsProps<StreamChatGenerics>>;\n  maxMessageLength?: number;\n  mentionAllAppUsersEnabled?: boolean;\n  /** Object containing filters/sort/options overrides for an @mention user query */\n  mentionAllAppUsersQuery?: MentionAllAppUsersQuery<StreamChatGenerics>;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as a single string argument to the callback handler.\n   */\n  onChangeText?: (newText: string) => void;\n  SendMessageDisallowedIndicator?: React.ComponentType;\n  /**\n   * ref for input setter function\n   *\n   * @param ref [Ref object](https://reactjs.org/docs/refs-and-the-dom.html) for underling `TextInput` component.\n   *\n   * @overrideType Function\n   */\n  setInputRef?: (ref: TextInput | null) => void;\n};\n\nexport type MessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = LocalMessageInputContext<StreamChatGenerics> &\n  Omit<InputMessageInputContextValue<StreamChatGenerics>, 'sendMessage'>;\n\nexport const MessageInputContext = React.createContext(\n  DEFAULT_BASE_CONTEXT_VALUE as MessageInputContextValue,\n);\n\nexport const MessageInputProvider = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  children,\n  value,\n}: PropsWithChildren<{\n  value: InputMessageInputContextValue<StreamChatGenerics>;\n}>) => {\n  const { closePicker, openPicker, selectedPicker, setSelectedPicker } =\n    useAttachmentPickerContext();\n  const { appSettings, client, enableOfflineSupport } = useChatContext<StreamChatGenerics>();\n\n  const getFileUploadConfig = () => {\n    const fileConfig = appSettings?.app?.file_upload_config;\n    if (fileConfig !== null || fileConfig !== undefined) {\n      return fileConfig;\n    } else {\n      return {};\n    }\n  };\n\n  const blockedFileExtensionTypes = getFileUploadConfig()?.blocked_file_extensions;\n  const blockedFileMimeTypes = getFileUploadConfig()?.blocked_mime_types;\n\n  const getImageUploadConfig = () => {\n    const imageConfig = appSettings?.app?.image_upload_config;\n    if (imageConfig !== null || imageConfig !== undefined) {\n      return imageConfig;\n    }\n    return {};\n  };\n\n  const blockedImageExtensionTypes = getImageUploadConfig()?.blocked_file_extensions;\n  const blockedImageMimeTypes = getImageUploadConfig()?.blocked_mime_types;\n\n  const channelCapabities = useOwnCapabilitiesContext();\n\n  const { channel, giphyEnabled } = useChannelContext<StreamChatGenerics>();\n  const { thread } = useThreadContext<StreamChatGenerics>();\n  const { t } = useTranslationContext();\n  const inputBoxRef = useRef<TextInput | null>(null);\n  const sending = useRef(false);\n\n  const [asyncIds, setAsyncIds] = useState<string[]>([]);\n  const [asyncUploads, setAsyncUploads] = useState<{\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  }>({});\n  const [giphyActive, setGiphyActive] = useState(false);\n  const [sendThreadMessageInChannel, setSendThreadMessageInChannel] = useState(false);\n  const { editing, hasFilePicker, hasImagePicker, initialValue } = value;\n  const {\n    fileUploads,\n    imageUploads,\n    mentionedUsers,\n    numberOfUploads,\n    setFileUploads,\n    setImageUploads,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n  } = useMessageDetailsForState<StreamChatGenerics>(editing, initialValue);\n  const { endsAt: cooldownEndsAt, start: startCooldown } = useCooldown<StreamChatGenerics>();\n\n  const threadId = thread?.id;\n  useEffect(() => {\n    setSendThreadMessageInChannel(false);\n  }, [threadId]);\n\n  const appendText = (newText: string) => {\n    setText((prevText) => `${prevText}${newText}`);\n  };\n\n  /** Checks if the message is valid or not. Accordingly we can enable/disable send button */\n  const isValidMessage = () => {\n    if (text && text.trim()) {\n      return true;\n    }\n\n    const imagesAndFiles = [...imageUploads, ...fileUploads];\n    if (imagesAndFiles.length === 0) return false;\n\n    if (enableOfflineSupport) {\n      // Allow only if none of the attachments have unsupported status\n      for (const file of imagesAndFiles) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    for (const file of imagesAndFiles) {\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  const onChange = (newText: string) => {\n    if (sending.current) {\n      return;\n    }\n    setText(newText);\n\n    if (newText && channel && channelCapabities.sendTypingEvents) {\n      logChatPromiseExecution(channel.keystroke(thread?.id), 'start typing event');\n    }\n\n    if (value.onChangeText) {\n      value.onChangeText(newText);\n    }\n  };\n\n  const openCommandsPicker = () => {\n    appendText('/');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openMentionsPicker = () => {\n    appendText('@');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openAttachmentPicker = () => {\n    if (hasImagePicker) {\n      Keyboard.dismiss();\n      setSelectedPicker('images');\n      openPicker();\n    } else if (hasFilePicker) {\n      pickFile();\n    }\n  };\n\n  const closeAttachmentPicker = () => {\n    setSelectedPicker(undefined);\n    closePicker();\n  };\n\n  const toggleAttachmentPicker = () => {\n    if (selectedPicker) {\n      closeAttachmentPicker();\n    } else {\n      openAttachmentPicker();\n    }\n  };\n\n  const onSelectItem = (item: UserResponse<StreamChatGenerics>) => {\n    setMentionedUsers((prevMentionedUsers) => [...prevMentionedUsers, item.id]);\n  };\n\n  const pickFile = async () => {\n    if (pickDocument === null) {\n      console.log(\n        'The file picker is not installed. Check our Getting Started documentation to install it.',\n      );\n      return;\n    }\n\n    if (numberOfUploads >= value.maxNumberOfFiles) {\n      Alert.alert('Maximum number of files reached');\n      return;\n    }\n\n    const result = await pickDocument({\n      maxNumberOfFiles: value.maxNumberOfFiles - numberOfUploads,\n    });\n\n    const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n    const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;\n\n    if (!result.cancelled && result.assets) {\n      const totalFileSize = result.assets.reduce((acc, asset) => acc + Number(asset.size), 0);\n      if (totalFileSize / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload files below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n      } else {\n        result.assets.forEach((asset) => {\n          /**\n           * TODO: The current tight coupling of images to the image\n           * picker does not allow images picked from the file picker\n           * to be rendered in a preview via the uploadNewImage call.\n           * This should be updated alongside allowing image a file\n           * uploads together.\n           */\n          uploadNewFile(asset);\n        });\n      }\n    }\n  };\n\n  const removeFile = (id: string) => {\n    if (fileUploads.some((file) => file.id === id)) {\n      setFileUploads((prevFileUploads) => prevFileUploads.filter((file) => file.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const removeImage = (id: string) => {\n    if (imageUploads.some((image) => image.id === id)) {\n      setImageUploads((prevImageUploads) => prevImageUploads.filter((image) => image.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const resetInput = (pendingAttachments: Attachment<StreamChatGenerics>[] = []) => {\n    setFileUploads([]);\n    setGiphyActive(false);\n    setShowMoreOptions(true);\n    setImageUploads([]);\n    setMentionedUsers([]);\n    setNumberOfUploads(\n      (prevNumberOfUploads) => prevNumberOfUploads - (pendingAttachments?.length || 0),\n    );\n    setText('');\n  };\n\n  const mapImageUploadToAttachment = (image: ImageUpload) => {\n    const mime_type: string | boolean = lookup(image.file.filename as string);\n    return {\n      fallback: image.file.name,\n      image_url: image.url,\n      mime_type: mime_type ? mime_type : undefined,\n      original_height: image.height,\n      original_width: image.width,\n      originalFile: image.file,\n      type: 'image',\n    } as Attachment;\n  };\n\n  const mapFileUploadToAttachment = (file: FileUpload) => {\n    if (file.file.mimeType?.startsWith('image/')) {\n      return {\n        fallback: file.file.name,\n        image_url: file.url,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        type: 'image',\n      };\n    } else if (file.file.mimeType?.startsWith('audio/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'audio',\n      };\n    } else if (file.file.mimeType?.startsWith('video/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        thumb_url: file.thumb_url,\n        title: file.file.name,\n        type: 'video',\n      };\n    } else {\n      return {\n        asset_url: file.url || file.file.uri,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'file',\n      };\n    }\n  };\n\n  // TODO: Figure out why this is async, as it doesn't await any promise.\n  // eslint-disable-next-line require-await\n  const sendMessage = async () => {\n    if (sending.current) {\n      return;\n    }\n\n    if (!channelCapabities.sendLinks && !!text.match(urlRegex)) {\n      Alert.alert(t('Links are disabled'), t('Sending links is not allowed in this conversation'));\n\n      return;\n    }\n\n    sending.current = true;\n\n    startCooldown();\n\n    const prevText = giphyEnabled && giphyActive ? `/giphy ${text}` : text;\n    setText('');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.clear();\n    }\n\n    const attachments = [] as Attachment<StreamChatGenerics>[];\n    for (const image of imageUploads) {\n      if (enableOfflineSupport) {\n        if (image.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapImageUploadToAttachment(image));\n        continue;\n      }\n\n      if ((!image || image.state === FileState.UPLOAD_FAILED) && !enableOfflineSupport) {\n        continue;\n      }\n\n      if (image.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        if (value.sendImageAsync) {\n          /**\n           * If user hit send before image uploaded, push ID into a queue to later\n           * be matched with the successful CDN response\n           */\n          setAsyncIds((prevAsyncIds) => [...prevAsyncIds, image.id]);\n        } else {\n          sending.current = false;\n          return setText(prevText);\n        }\n      }\n\n      // To get the mime type of the image from the file name and send it as an response for an image\n      if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n        attachments.push(mapImageUploadToAttachment(image));\n      }\n    }\n\n    for (const file of fileUploads) {\n      if (enableOfflineSupport) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapFileUploadToAttachment(file));\n        continue;\n      }\n\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        sending.current = false;\n        return;\n      }\n\n      if (file.state === FileState.UPLOADED || file.state === FileState.FINISHED) {\n        attachments.push(mapFileUploadToAttachment(file));\n      }\n    }\n\n    // Disallow sending message if its empty.\n    if (!prevText && attachments.length === 0) {\n      sending.current = false;\n      return;\n    }\n\n    if (value.editing && !isEditingBoolean(value.editing)) {\n      const updatedMessage = {\n        ...value.editing,\n        attachments,\n        mentioned_users: mentionedUsers,\n        quoted_message: undefined,\n        text: prevText,\n      } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0];\n\n      // TODO: Remove this line and show an error when submit fails\n      value.clearEditingState();\n\n      const updateMessagePromise = value\n        .editMessage(\n          // @ts-ignore\n          removeReservedFields(updatedMessage),\n        )\n        .then(value.clearEditingState);\n      resetInput(attachments);\n      logChatPromiseExecution(updateMessagePromise, 'update message');\n\n      sending.current = false;\n    } else {\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: uniq(mentionedUsers),\n          /** Parent message id - in case of thread */\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: prevText,\n        } as unknown as StreamMessage<StreamChatGenerics>);\n\n        value.clearQuotedMessageState();\n        sending.current = false;\n        resetInput(attachments);\n      } catch (_error) {\n        sending.current = false;\n        if (value.quotedMessage && typeof value.quotedMessage !== 'boolean') {\n          value.setQuotedMessageState(value.quotedMessage);\n        }\n        setText(prevText.slice(giphyEnabled && giphyActive ? 7 : 0)); // 7 because of '/giphy ' length\n        console.log('Failed to send message');\n      }\n    }\n  };\n\n  const sendMessageAsync = (id: string) => {\n    const image = asyncUploads[id];\n    if (!image || image.state === FileState.UPLOAD_FAILED) {\n      return;\n    }\n\n    if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n      const attachments = [\n        {\n          image_url: image.url,\n          type: 'image',\n        },\n      ] as StreamMessage<StreamChatGenerics>['attachments'];\n\n      startCooldown();\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: [],\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: '',\n        } as unknown as Partial<StreamMessage<StreamChatGenerics>>);\n\n        setAsyncIds((prevAsyncIds) => prevAsyncIds.splice(prevAsyncIds.indexOf(id), 1));\n        setAsyncUploads((prevAsyncUploads) => {\n          delete prevAsyncUploads[id];\n          return prevAsyncUploads;\n        });\n\n        setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      } catch (_error) {\n        console.log('Failed');\n      }\n    }\n  };\n\n  const setInputBoxRef = (ref: TextInput | null) => {\n    inputBoxRef.current = ref;\n    if (value.setInputRef) {\n      value.setInputRef(ref);\n    }\n  };\n\n  const getTriggerSettings = () => {\n    let triggerSettings: TriggerSettings<StreamChatGenerics> = {};\n    if (channel) {\n      if (value.autoCompleteTriggerSettings) {\n        triggerSettings = value.autoCompleteTriggerSettings({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      } else {\n        triggerSettings = ACITriggerSettings<StreamChatGenerics>({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      }\n    }\n    return triggerSettings;\n  };\n\n  const triggerSettings = getTriggerSettings();\n\n  const updateMessage = async () => {\n    try {\n      if (!isEditingBoolean(value.editing)) {\n        await client.updateMessage({\n          ...value.editing,\n          quoted_message: undefined,\n          text: giphyEnabled && giphyActive ? `/giphy ${text}` : text,\n        } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0]);\n      }\n\n      resetInput();\n      value.clearEditingState();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const regexCondition = /File (extension \\.\\w{2,4}|type \\S+) is not supported/;\n\n  const getUploadSetStateAction =\n    <UploadType extends ImageUpload | FileUpload>(\n      id: string,\n      fileState: FileStateValue,\n      extraData: Partial<UploadType> = {},\n    ): React.SetStateAction<UploadType[]> =>\n    (prevUploads: UploadType[]) =>\n      prevUploads.map((prevUpload) => {\n        if (prevUpload.id === id) {\n          return {\n            ...prevUpload,\n            ...extraData,\n            state: fileState,\n          };\n        }\n        return prevUpload;\n      });\n\n  const handleFileOrImageUploadError = (error: unknown, isImageError: boolean, id: string) => {\n    if (isImageError) {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setImageUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n\n        return setImageUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    } else {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setFileUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n        return setFileUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    }\n  };\n\n  const uploadFile = async ({ newFile }: { newFile: FileUpload }) => {\n    const { file, id } = newFile;\n\n    setFileUploads(getUploadSetStateAction(id, FileState.UPLOADING));\n\n    let response: Partial<SendFileAPIResponse> = {};\n    try {\n      if (value.doDocUploadRequest) {\n        response = await value.doDocUploadRequest(file, channel);\n      } else if (channel && file.uri) {\n        response = await channel.sendFile(file.uri, file.name, file.mimeType);\n      }\n      const extraData: Partial<FileUpload> = { thumb_url: response.thumb_url, url: response.file };\n      setFileUploads(getUploadSetStateAction(id, FileState.UPLOADED, extraData));\n    } catch (error: unknown) {\n      handleFileOrImageUploadError(error, false, id);\n    }\n  };\n\n  const uploadImage = async ({ newImage }: { newImage: ImageUpload }) => {\n    const { file, id } = newImage || {};\n\n    if (!file) {\n      return;\n    }\n\n    let response = {} as SendFileAPIResponse;\n\n    try {\n      const uri = file.uri || '';\n      /**\n       * We skip compression if:\n       * - the file is from the camera as that should already be compressed\n       * - the file has no height/width value to maintain for compression\n       * - the compressImageQuality number is not present or is 1 (meaning no compression)\n       */\n      const compressedUri = await (file.source === 'camera' ||\n      !file.height ||\n      !file.width ||\n      typeof value.compressImageQuality !== 'number' ||\n      value.compressImageQuality === 1\n        ? uri\n        : compressImage({\n            compressImageQuality: value.compressImageQuality,\n            height: file.height,\n            uri,\n            width: file.width,\n          }));\n      const filename = file.filename ?? uri.replace(/^(file:\\/\\/|content:\\/\\/)/, '');\n      const contentType = lookup(filename) || 'multipart/form-data';\n      if (value.doImageUploadRequest) {\n        response = await value.doImageUploadRequest(file, channel);\n      } else if (compressedUri && channel) {\n        if (value.sendImageAsync) {\n          channel.sendImage(compressedUri, filename, contentType).then((res) => {\n            if (asyncIds.includes(id)) {\n              // Evaluates to true if user hit send before image successfully uploaded\n              setAsyncUploads((prevAsyncUploads) => {\n                prevAsyncUploads[id] = {\n                  ...prevAsyncUploads[id],\n                  state: FileState.UPLOADED,\n                  url: res.file,\n                };\n                return prevAsyncUploads;\n              });\n            } else {\n              const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n                url: res.file,\n              });\n              setImageUploads(newImageUploads);\n            }\n          });\n        } else {\n          response = await channel.sendImage(compressedUri, filename, contentType);\n        }\n      }\n\n      if (Object.keys(response).length) {\n        const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n          height: file.height,\n          url: response.file,\n          width: file.width,\n        });\n        setImageUploads(newImageUploads);\n      }\n    } catch (error) {\n      handleFileOrImageUploadError(error, true, id);\n    }\n  };\n\n  const uploadNewFile = async (file: File) => {\n    const id: string = generateRandomId();\n\n    const isBlockedFileExtension: boolean | undefined = blockedFileExtensionTypes?.some(\n      (fileExtensionType: string) => file.name?.includes(fileExtensionType),\n    );\n    const isBlockedFileMimeType: boolean | undefined = blockedFileMimeTypes?.some(\n      (mimeType: string) => file.name?.includes(mimeType),\n    );\n\n    const fileState =\n      isBlockedFileExtension || isBlockedFileMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newFile: FileUpload = {\n      duration: 0,\n      file,\n      id: file.id || id,\n      paused: true,\n      progress: 0,\n      state: fileState,\n    };\n\n    await Promise.all([\n      setFileUploads((prevFileUploads) => prevFileUploads.concat([newFile])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedFileExtension) {\n      uploadFile({ newFile });\n    }\n  };\n\n  const uploadNewImage = async (image: Partial<Asset>) => {\n    const id = generateRandomId();\n\n    const isBlockedImageMimeType = blockedImageMimeTypes?.some((mimeType: string) =>\n      image.uri?.includes(mimeType),\n    );\n\n    const isBlockedImageExtension = blockedImageExtensionTypes?.some((imageExtensionType: string) =>\n      image.uri?.includes(imageExtensionType),\n    );\n\n    const imageState =\n      isBlockedImageExtension || isBlockedImageMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newImage: ImageUpload = {\n      file: image,\n      height: image.height,\n      id,\n      state: imageState,\n      url: image.uri,\n      width: image.width,\n    };\n\n    await Promise.all([\n      setImageUploads((prevImageUploads) => prevImageUploads.concat([newImage])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedImageExtension) {\n      uploadImage({ newImage });\n    }\n  };\n\n  const messageInputContext = useCreateMessageInputContext({\n    appendText,\n    asyncIds,\n    asyncUploads,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    fileUploads,\n    giphyActive,\n    imageUploads,\n    inputBoxRef,\n    isValidMessage,\n    mentionedUsers,\n    numberOfUploads,\n    onChange,\n    onSelectItem,\n    openAttachmentPicker,\n    openCommandsPicker,\n    openFilePicker: pickFile,\n    openMentionsPicker,\n    pickFile,\n    removeFile,\n    removeImage,\n    resetInput,\n    selectedPicker,\n    sending,\n    sendMessageAsync,\n    sendThreadMessageInChannel,\n    setAsyncIds,\n    setAsyncUploads,\n    setFileUploads,\n    setGiphyActive,\n    setImageUploads,\n    setInputBoxRef,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setSendThreadMessageInChannel,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n    thread,\n    toggleAttachmentPicker,\n    triggerSettings,\n    updateMessage,\n    uploadFile,\n    uploadImage,\n    uploadNewFile,\n    uploadNewImage,\n    ...value,\n    sendMessage, // overriding the originally passed in sendMessage\n  });\n\n  return (\n    <MessageInputContext.Provider\n      value={messageInputContext as unknown as MessageInputContextValue}\n    >\n      {children}\n    </MessageInputContext.Provider>\n  );\n};\n\nexport const useMessageInputContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const contextValue = useContext(\n    MessageInputContext,\n  ) as unknown as MessageInputContextValue<StreamChatGenerics>;\n\n  if (contextValue === DEFAULT_BASE_CONTEXT_VALUE && !isTestEnvironment()) {\n    throw new Error(\n      `The useMessageInputContext hook was called outside of the MessageInputContext provider. Make sure you have configured Channel component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#channel`,\n    );\n  }\n\n  return contextValue;\n};\n\n/**\n * Typescript currently does not support partial inference so if MessageInputContext\n * typing is desired while using the HOC withMessageInputContext the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withMessageInputContext = <\n  P extends UnknownType,\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>> => {\n  const WithMessageInputContextComponent = (\n    props: Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>,\n  ) => {\n    const messageInputContext = useMessageInputContext<StreamChatGenerics>();\n\n    return <Component {...(props as P)} {...messageInputContext} />;\n  };\n  WithMessageInputContextComponent.displayName = `WithMessageInputContext${getDisplayName(\n    Component,\n  )}`;\n  return WithMessageInputContextComponent;\n};\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_uniq","_interopRequireDefault","_mimeTypes","_streamChat","_useCreateMessageInputContext","_useMessageDetailsForState","_useCooldown2","_native","_removeReservedFields","_utils","_AttachmentPickerContext","_ChannelContext","_ChatContext","_OwnCapabilitiesContext","_ThreadContext","_TranslationContext","_defaultBaseContextValue","_getDisplayName","_isTestEnvironment","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof3","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","MessageInputContext","React","createContext","DEFAULT_BASE_CONTEXT_VALUE","exports","MessageInputProvider","_ref","_getFileUploadConfig","_getFileUploadConfig2","_getImageUploadConfig","_getImageUploadConfig2","children","_useAttachmentPickerC","useAttachmentPickerContext","closePicker","openPicker","selectedPicker","setSelectedPicker","_useChatContext","useChatContext","appSettings","client","enableOfflineSupport","getFileUploadConfig","_appSettings$app","fileConfig","app","file_upload_config","undefined","blockedFileExtensionTypes","blocked_file_extensions","blockedFileMimeTypes","blocked_mime_types","getImageUploadConfig","_appSettings$app2","imageConfig","image_upload_config","blockedImageExtensionTypes","blockedImageMimeTypes","channelCapabities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","channel","giphyEnabled","_useThreadContext","useThreadContext","thread","_useTranslationContex","useTranslationContext","t","inputBoxRef","useRef","sending","_useState","useState","_useState2","_slicedToArray2","asyncIds","setAsyncIds","_useState3","_useState4","asyncUploads","setAsyncUploads","_useState5","_useState6","giphyActive","setGiphyActive","_useState7","_useState8","sendThreadMessageInChannel","setSendThreadMessageInChannel","editing","hasFilePicker","hasImagePicker","initialValue","_useMessageDetailsFor","useMessageDetailsForState","fileUploads","imageUploads","mentionedUsers","numberOfUploads","setFileUploads","setImageUploads","setMentionedUsers","setNumberOfUploads","setShowMoreOptions","setText","showMoreOptions","text","_useCooldown","useCooldown","cooldownEndsAt","endsAt","startCooldown","start","threadId","id","useEffect","appendText","newText","prevText","isValidMessage","trim","imagesAndFiles","concat","_toConsumableArray2","_iterator","_step","file","state","FileState","NOT_SUPPORTED","_iterator2","_step2","UPLOAD_FAILED","UPLOADING","onChange","current","sendTypingEvents","logChatPromiseExecution","keystroke","onChangeText","openCommandsPicker","focus","openMentionsPicker","openAttachmentPicker","Keyboard","dismiss","pickFile","closeAttachmentPicker","toggleAttachmentPicker","onSelectItem","item","prevMentionedUsers","_ref2","_asyncToGenerator2","_regenerator","mark","_callee","result","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","totalFileSize","wrap","_callee$","_context","prev","pickDocument","console","log","abrupt","maxNumberOfFiles","Alert","alert","sent","cancelled","assets","reduce","acc","asset","Number","size","forEach","uploadNewFile","stop","apply","arguments","removeFile","some","prevFileUploads","filter","prevNumberOfUploads","removeImage","image","prevImageUploads","resetInput","pendingAttachments","mapImageUploadToAttachment","mime_type","lookup","filename","fallback","image_url","url","original_height","height","original_width","width","originalFile","type","mapFileUploadToAttachment","_file$file$mimeType","_file$file$mimeType2","_file$file$mimeType3","mimeType","startsWith","asset_url","uri","duration","file_size","title","thumb_url","sendMessage","_ref3","_callee3","attachments","_loop","_iterator3","_step3","_image","_ret","_iterator4","_step4","_file3","updatedMessage","updateMessagePromise","_callee3$","_context3","sendLinks","match","urlRegex","clear","_callee2","_callee2$","_context2","v","push","sendImageAsync","prevAsyncIds","UPLOADED","FINISHED","delegateYield","t0","_typeof2","isEditingBoolean","_extends2","mentioned_users","quoted_message","clearEditingState","editMessage","removeReservedFields","then","uniq","parent_id","quoted_message_id","quotedMessage","show_in_channel","clearQuotedMessageState","_error","setQuotedMessageState","sendMessageAsync","splice","indexOf","prevAsyncUploads","setInputBoxRef","ref","setInputRef","getTriggerSettings","triggerSettings","autoCompleteTriggerSettings","onMentionSelectItem","ACITriggerSettings","updateMessage","_ref4","_callee4","_callee4$","_context4","regexCondition","getUploadSetStateAction","fileState","extraData","prevUploads","map","prevUpload","handleFileOrImageUploadError","error","isImageError","Error","message","uploadFile","_ref6","_callee5","_ref5","newFile","response","_callee5$","_context5","doDocUploadRequest","sendFile","_x","uploadImage","_ref8","_callee6","_ref7","newImage","_ref9","_file$filename","compressedUri","contentType","newImageUploads","_callee6$","_context6","source","compressImageQuality","compressImage","replace","doImageUploadRequest","sendImage","res","includes","keys","_x2","_ref10","_callee7","isBlockedFileExtension","isBlockedFileMimeType","_callee7$","_context7","generateRandomId","fileExtensionType","_file$name","_file$name2","paused","progress","Promise","all","_x3","uploadNewImage","_ref11","_callee8","isBlockedImageMimeType","isBlockedImageExtension","imageState","_callee8$","_context8","_image$uri","imageExtensionType","_image$uri2","_x4","messageInputContext","useCreateMessageInputContext","openFilePicker","createElement","Provider","__self","__source","fileName","lineNumber","columnNumber","useMessageInputContext","contextValue","useContext","isTestEnvironment","withMessageInputContext","Component","WithMessageInputContextComponent","props","displayName","getDisplayName"],"sources":["MessageInputContext.tsx"],"sourcesContent":["import type { LegacyRef } from 'react';\nimport React, { PropsWithChildren, useContext, useEffect, useRef, useState } from 'react';\nimport type { TextInput, TextInputProps } from 'react-native';\nimport { Alert, Keyboard } from 'react-native';\n\nimport uniq from 'lodash/uniq';\nimport { lookup } from 'mime-types';\nimport {\n  Attachment,\n  logChatPromiseExecution,\n  SendFileAPIResponse,\n  StreamChat,\n  Message as StreamMessage,\n  UserFilters,\n  UserOptions,\n  UserResponse,\n  UserSort,\n} from 'stream-chat';\n\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { isEditingBoolean, useMessageDetailsForState } from './hooks/useMessageDetailsForState';\n\nimport type { AttachButtonProps } from '../../components/MessageInput/AttachButton';\nimport type { CommandsButtonProps } from '../../components/MessageInput/CommandsButton';\nimport type { InputEditingStateHeaderProps } from '../../components/MessageInput/components/InputEditingStateHeader';\nimport type { InputGiphySearchProps } from '../../components/MessageInput/components/InputGiphySearch';\nimport type { InputReplyStateHeaderProps } from '../../components/MessageInput/components/InputReplyStateHeader';\nimport type { CooldownTimerProps } from '../../components/MessageInput/CooldownTimer';\nimport type { FileUploadPreviewProps } from '../../components/MessageInput/FileUploadPreview';\nimport { useCooldown } from '../../components/MessageInput/hooks/useCooldown';\nimport type { ImageUploadPreviewProps } from '../../components/MessageInput/ImageUploadPreview';\nimport type { InputButtonsProps } from '../../components/MessageInput/InputButtons';\nimport type { MessageInputProps } from '../../components/MessageInput/MessageInput';\nimport type { MoreOptionsButtonProps } from '../../components/MessageInput/MoreOptionsButton';\nimport type { SendButtonProps } from '../../components/MessageInput/SendButton';\nimport type { UploadProgressIndicatorProps } from '../../components/MessageInput/UploadProgressIndicator';\nimport type { MessageType } from '../../components/MessageList/hooks/useMessageList';\nimport { compressImage, pickDocument } from '../../native';\nimport type { Asset, DefaultStreamChatGenerics, File, UnknownType } from '../../types/types';\nimport { removeReservedFields } from '../../utils/removeReservedFields';\nimport {\n  ACITriggerSettings,\n  ACITriggerSettingsParams,\n  FileState,\n  FileStateValue,\n  generateRandomId,\n  TriggerSettings,\n  urlRegex,\n} from '../../utils/utils';\nimport { useAttachmentPickerContext } from '../attachmentPickerContext/AttachmentPickerContext';\nimport { ChannelContextValue, useChannelContext } from '../channelContext/ChannelContext';\nimport { useChatContext } from '../chatContext/ChatContext';\nimport { useOwnCapabilitiesContext } from '../ownCapabilitiesContext/OwnCapabilitiesContext';\nimport { useThreadContext } from '../threadContext/ThreadContext';\nimport { useTranslationContext } from '../translationContext/TranslationContext';\nimport { DEFAULT_BASE_CONTEXT_VALUE } from '../utils/defaultBaseContextValue';\n\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { isTestEnvironment } from '../utils/isTestEnvironment';\n\nexport type FileUpload = {\n  file: File;\n  id: string;\n  state: FileStateValue;\n  duration?: number;\n  paused?: boolean;\n  progress?: number;\n  thumb_url?: string;\n  url?: string;\n};\n\nexport type ImageUpload = {\n  file: Partial<Asset> & {\n    name?: string;\n  };\n  id: string;\n  state: FileStateValue;\n  height?: number;\n  url?: string;\n  width?: number;\n};\n\nexport type MentionAllAppUsersQuery<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  filters?: UserFilters<StreamChatGenerics>;\n  options?: UserOptions;\n  sort?: UserSort<StreamChatGenerics>;\n};\n\nexport type LocalMessageInputContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  appendText: (newText: string) => void;\n  asyncIds: string[];\n  asyncUploads: {\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  };\n  closeAttachmentPicker: () => void;\n  /** The time at which the active cooldown will end */\n  cooldownEndsAt: Date;\n  /**\n   * An array of file objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  fileUploads: FileUpload[];\n  giphyActive: boolean;\n  /**\n   * An array of image objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  imageUploads: ImageUpload[];\n  inputBoxRef: React.MutableRefObject<TextInput | null>;\n  isValidMessage: () => boolean;\n  mentionedUsers: string[];\n  numberOfUploads: number;\n  onChange: (newText: string) => void;\n  onSelectItem: (item: UserResponse<StreamChatGenerics>) => void;\n  openAttachmentPicker: () => void;\n  openCommandsPicker: () => void;\n  openFilePicker: () => void;\n  openMentionsPicker: () => void;\n  pickFile: () => Promise<void>;\n  /**\n   * Function for removing a file from the upload preview\n   *\n   * @param id string ID of file in `fileUploads` object in state of MessageInput\n   */\n  removeFile: (id: string) => void;\n  /**\n   * Function for removing an image from the upload preview\n   *\n   * @param id string ID of image in `imageUploads` object in state of MessageInput\n   */\n  removeImage: (id: string) => void;\n  resetInput: (pendingAttachments?: Attachment<StreamChatGenerics>[]) => void;\n  selectedPicker: string | undefined;\n  sending: React.MutableRefObject<boolean>;\n  sendMessage: () => Promise<void>;\n  sendMessageAsync: (id: string) => void;\n  sendThreadMessageInChannel: boolean;\n  setAsyncIds: React.Dispatch<React.SetStateAction<string[]>>;\n  setAsyncUploads: React.Dispatch<\n    React.SetStateAction<{\n      [key: string]: {\n        state: string;\n        url: string;\n      };\n    }>\n  >;\n  setFileUploads: React.Dispatch<React.SetStateAction<FileUpload[]>>;\n  setGiphyActive: React.Dispatch<React.SetStateAction<boolean>>;\n  setImageUploads: React.Dispatch<React.SetStateAction<ImageUpload[]>>;\n  /**\n   * Ref callback to set reference on input box\n   */\n  setInputBoxRef: LegacyRef<TextInput> | undefined;\n  setMentionedUsers: React.Dispatch<React.SetStateAction<string[]>>;\n  setNumberOfUploads: React.Dispatch<React.SetStateAction<number>>;\n  setSendThreadMessageInChannel: React.Dispatch<React.SetStateAction<boolean>>;\n  setShowMoreOptions: React.Dispatch<React.SetStateAction<boolean>>;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  showMoreOptions: boolean;\n  /**\n   * Text value of the TextInput\n   */\n  text: string;\n  toggleAttachmentPicker: () => void;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  triggerSettings: TriggerSettings<StreamChatGenerics>;\n  updateMessage: () => Promise<void>;\n  /** Function for attempting to upload a file */\n  uploadFile: ({ newFile }: { newFile: FileUpload }) => Promise<void>;\n  /** Function for attempting to upload an image */\n  uploadImage: ({ newImage }: { newImage: ImageUpload }) => Promise<void>;\n  uploadNewFile: (file: File) => Promise<void>;\n  uploadNewImage: (image: Partial<Asset>) => Promise<void>;\n};\n\nexport type InputMessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  /**\n   * Custom UI component for attach button.\n   *\n   * Defaults to and accepts same props as: [AttachButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/attach-button/)\n   */\n  AttachButton: React.ComponentType<AttachButtonProps<StreamChatGenerics>>;\n\n  clearEditingState: () => void;\n  clearQuotedMessageState: () => void;\n  /**\n   * Custom UI component for commands button.\n   *\n   * Defaults to and accepts same props as: [CommandsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/commands-button/)\n   */\n  CommandsButton: React.ComponentType<CommandsButtonProps<StreamChatGenerics>>;\n  /**\n   * Custom UI component to display the remaining cooldown a user will have to wait before\n   * being allowed to send another message. This component is displayed in place of the\n   * send button for the MessageInput component.\n   *\n   * **default** [CooldownTimer](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/CooldownTimer.tsx)\n   */\n  CooldownTimer: React.ComponentType<CooldownTimerProps>;\n  editing: boolean | MessageType<StreamChatGenerics>;\n  editMessage: StreamChat<StreamChatGenerics>['updateMessage'];\n\n  /**\n   * Custom UI component for FileUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/FileUploadPreview.tsx\n   */\n  FileUploadPreview: React.ComponentType<FileUploadPreviewProps<StreamChatGenerics>>;\n\n  /** When false, CommandsButton will be hidden */\n  hasCommands: boolean;\n  /** When false, FileSelectorIcon will be hidden */\n  hasFilePicker: boolean;\n  /** When false, ImageSelectorIcon will be hidden */\n  hasImagePicker: boolean;\n  /**\n   * Custom UI component for ImageUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/ImageUploadPreview.tsx\n   */\n  ImageUploadPreview: React.ComponentType<ImageUploadPreviewProps<StreamChatGenerics>>;\n  InputEditingStateHeader: React.ComponentType<InputEditingStateHeaderProps<StreamChatGenerics>>;\n  InputGiphySearch: React.ComponentType<InputGiphySearchProps<StreamChatGenerics>>;\n  InputReplyStateHeader: React.ComponentType<InputReplyStateHeaderProps<StreamChatGenerics>>;\n  /** Limit on allowed number of files to attach at a time. */\n  maxNumberOfFiles: number;\n  /**\n   * Custom UI component for more options button.\n   *\n   * Defaults to and accepts same props as: [MoreOptionsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/more-options-button/)\n   */\n  MoreOptionsButton: React.ComponentType<MoreOptionsButtonProps<StreamChatGenerics>>;\n  /** Limit on the number of lines in the text input before scrolling */\n  numberOfLines: number;\n  quotedMessage: boolean | MessageType<StreamChatGenerics>;\n  /**\n   * Custom UI component for send button.\n   *\n   * Defaults to and accepts same props as: [SendButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/send-button/)\n   */\n  SendButton: React.ComponentType<SendButtonProps<StreamChatGenerics>>;\n  sendImageAsync: boolean;\n  sendMessage: (message: Partial<StreamMessage<StreamChatGenerics>>) => Promise<void>;\n  setQuotedMessageState: (message: MessageType<StreamChatGenerics>) => void;\n  /**\n   * Custom UI component to render checkbox with text (\"Also send to channel\") in Thread's input box.\n   * When ticked, message will also be sent in parent channel.\n   */\n  ShowThreadMessageInChannelButton: React.ComponentType<{\n    threadList?: boolean;\n  }>;\n  /**\n   * Custom UI component to render upload progress indicator on attachment preview.\n   *\n   * **Default** [UploadProgressIndicator](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/UploadProgressIndicator.tsx)\n   */\n  UploadProgressIndicator: React.ComponentType<UploadProgressIndicatorProps>;\n  /**\n   * Additional props for underlying TextInput component. These props will be forwarded as it is to TextInput component.\n   *\n   * @see See https://reactnative.dev/docs/textinput#reference\n   */\n  additionalTextInputProps?: TextInputProps;\n  /** Max number of suggestions to display in autocomplete list. Defaults to 10. */\n  autoCompleteSuggestionsLimit?: number;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  autoCompleteTriggerSettings?: (\n    settings: ACITriggerSettingsParams<StreamChatGenerics>,\n  ) => TriggerSettings<StreamChatGenerics>;\n  /**\n   * Compress image with quality (from 0 to 1, where 1 is best quality).\n   * On iOS, values larger than 0.8 don't produce a noticeable quality increase in most images,\n   * while a value of 0.8 will reduce the file size by about half or less compared to a value of 1.\n   * Image picker defaults to 0.8 for iOS and 1 for Android\n   */\n  compressImageQuality?: number;\n  /**\n   * Override file upload request\n   *\n   * @param file    File object - { uri: '', name: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doDocUploadRequest?: (\n    file: File,\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n  /**\n   * Override image upload request\n   *\n   * @param file    File object - { uri: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doImageUploadRequest?: (\n    file: {\n      name?: string;\n      uri?: string;\n    },\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n\n  /** Initial value to set on input */\n  initialValue?: string;\n  /**\n   * Custom UI component for AutoCompleteInput.\n   * Has access to all of [MessageInputContext](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/contexts/messageInputContext/MessageInputContext.tsx)\n   */\n  Input?: React.ComponentType<\n    Omit<MessageInputProps<StreamChatGenerics>, 'Input'> &\n      InputButtonsProps<StreamChatGenerics> & {\n        getUsers: () => UserResponse<StreamChatGenerics>[];\n      }\n  >;\n  /**\n   * Custom UI component to override buttons on left side of input box\n   * Defaults to [InputButtons](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/InputButtons.tsx),\n   * which contain following components/buttons:\n   *\n   *  - AttachButton\n   *  - CommandsButtom\n   *\n   * You have access to following prop functions:\n   *\n   * - closeAttachmentPicker\n   * - openAttachmentPicker\n   * - openCommandsPicker\n   * - toggleAttachmentPicker\n   */\n  InputButtons?: React.ComponentType<InputButtonsProps<StreamChatGenerics>>;\n  maxMessageLength?: number;\n  mentionAllAppUsersEnabled?: boolean;\n  /** Object containing filters/sort/options overrides for an @mention user query */\n  mentionAllAppUsersQuery?: MentionAllAppUsersQuery<StreamChatGenerics>;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as a single string argument to the callback handler.\n   */\n  onChangeText?: (newText: string) => void;\n  SendMessageDisallowedIndicator?: React.ComponentType;\n  /**\n   * ref for input setter function\n   *\n   * @param ref [Ref object](https://reactjs.org/docs/refs-and-the-dom.html) for underling `TextInput` component.\n   *\n   * @overrideType Function\n   */\n  setInputRef?: (ref: TextInput | null) => void;\n};\n\nexport type MessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = LocalMessageInputContext<StreamChatGenerics> &\n  Omit<InputMessageInputContextValue<StreamChatGenerics>, 'sendMessage'>;\n\nexport const MessageInputContext = React.createContext(\n  DEFAULT_BASE_CONTEXT_VALUE as MessageInputContextValue,\n);\n\nexport const MessageInputProvider = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  children,\n  value,\n}: PropsWithChildren<{\n  value: InputMessageInputContextValue<StreamChatGenerics>;\n}>) => {\n  const { closePicker, openPicker, selectedPicker, setSelectedPicker } =\n    useAttachmentPickerContext();\n  const { appSettings, client, enableOfflineSupport } = useChatContext<StreamChatGenerics>();\n\n  const getFileUploadConfig = () => {\n    const fileConfig = appSettings?.app?.file_upload_config;\n    if (fileConfig !== null || fileConfig !== undefined) {\n      return fileConfig;\n    } else {\n      return {};\n    }\n  };\n\n  const blockedFileExtensionTypes = getFileUploadConfig()?.blocked_file_extensions;\n  const blockedFileMimeTypes = getFileUploadConfig()?.blocked_mime_types;\n\n  const getImageUploadConfig = () => {\n    const imageConfig = appSettings?.app?.image_upload_config;\n    if (imageConfig !== null || imageConfig !== undefined) {\n      return imageConfig;\n    }\n    return {};\n  };\n\n  const blockedImageExtensionTypes = getImageUploadConfig()?.blocked_file_extensions;\n  const blockedImageMimeTypes = getImageUploadConfig()?.blocked_mime_types;\n\n  const channelCapabities = useOwnCapabilitiesContext();\n\n  const { channel, giphyEnabled } = useChannelContext<StreamChatGenerics>();\n  const { thread } = useThreadContext<StreamChatGenerics>();\n  const { t } = useTranslationContext();\n  const inputBoxRef = useRef<TextInput | null>(null);\n  const sending = useRef(false);\n\n  const [asyncIds, setAsyncIds] = useState<string[]>([]);\n  const [asyncUploads, setAsyncUploads] = useState<{\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  }>({});\n  const [giphyActive, setGiphyActive] = useState(false);\n  const [sendThreadMessageInChannel, setSendThreadMessageInChannel] = useState(false);\n  const { editing, hasFilePicker, hasImagePicker, initialValue } = value;\n  const {\n    fileUploads,\n    imageUploads,\n    mentionedUsers,\n    numberOfUploads,\n    setFileUploads,\n    setImageUploads,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n  } = useMessageDetailsForState<StreamChatGenerics>(editing, initialValue);\n  const { endsAt: cooldownEndsAt, start: startCooldown } = useCooldown<StreamChatGenerics>();\n\n  const threadId = thread?.id;\n  useEffect(() => {\n    setSendThreadMessageInChannel(false);\n  }, [threadId]);\n\n  const appendText = (newText: string) => {\n    setText((prevText) => `${prevText}${newText}`);\n  };\n\n  /** Checks if the message is valid or not. Accordingly we can enable/disable send button */\n  const isValidMessage = () => {\n    if (text && text.trim()) {\n      return true;\n    }\n\n    const imagesAndFiles = [...imageUploads, ...fileUploads];\n    if (imagesAndFiles.length === 0) return false;\n\n    if (enableOfflineSupport) {\n      // Allow only if none of the attachments have unsupported status\n      for (const file of imagesAndFiles) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    for (const file of imagesAndFiles) {\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  const onChange = (newText: string) => {\n    if (sending.current) {\n      return;\n    }\n    setText(newText);\n\n    if (newText && channel && channelCapabities.sendTypingEvents) {\n      logChatPromiseExecution(channel.keystroke(thread?.id), 'start typing event');\n    }\n\n    if (value.onChangeText) {\n      value.onChangeText(newText);\n    }\n  };\n\n  const openCommandsPicker = () => {\n    appendText('/');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openMentionsPicker = () => {\n    appendText('@');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openAttachmentPicker = () => {\n    if (hasImagePicker) {\n      Keyboard.dismiss();\n      setSelectedPicker('images');\n      openPicker();\n    } else if (hasFilePicker) {\n      pickFile();\n    }\n  };\n\n  const closeAttachmentPicker = () => {\n    setSelectedPicker(undefined);\n    closePicker();\n  };\n\n  const toggleAttachmentPicker = () => {\n    if (selectedPicker) {\n      closeAttachmentPicker();\n    } else {\n      openAttachmentPicker();\n    }\n  };\n\n  const onSelectItem = (item: UserResponse<StreamChatGenerics>) => {\n    setMentionedUsers((prevMentionedUsers) => [...prevMentionedUsers, item.id]);\n  };\n\n  const pickFile = async () => {\n    if (pickDocument === null) {\n      console.log(\n        'The file picker is not installed. Check our Getting Started documentation to install it.',\n      );\n      return;\n    }\n\n    if (numberOfUploads >= value.maxNumberOfFiles) {\n      Alert.alert('Maximum number of files reached');\n      return;\n    }\n\n    const result = await pickDocument({\n      maxNumberOfFiles: value.maxNumberOfFiles - numberOfUploads,\n    });\n\n    const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n    const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;\n\n    if (!result.cancelled && result.assets) {\n      const totalFileSize = result.assets.reduce((acc, asset) => acc + Number(asset.size), 0);\n      if (totalFileSize / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload files below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n      } else {\n        result.assets.forEach((asset) => {\n          /**\n           * TODO: The current tight coupling of images to the image\n           * picker does not allow images picked from the file picker\n           * to be rendered in a preview via the uploadNewImage call.\n           * This should be updated alongside allowing image a file\n           * uploads together.\n           */\n          uploadNewFile(asset);\n        });\n      }\n    }\n  };\n\n  const removeFile = (id: string) => {\n    if (fileUploads.some((file) => file.id === id)) {\n      setFileUploads((prevFileUploads) => prevFileUploads.filter((file) => file.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const removeImage = (id: string) => {\n    if (imageUploads.some((image) => image.id === id)) {\n      setImageUploads((prevImageUploads) => prevImageUploads.filter((image) => image.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const resetInput = (pendingAttachments: Attachment<StreamChatGenerics>[] = []) => {\n    setFileUploads([]);\n    setGiphyActive(false);\n    setShowMoreOptions(true);\n    setImageUploads([]);\n    setMentionedUsers([]);\n    setNumberOfUploads(\n      (prevNumberOfUploads) => prevNumberOfUploads - (pendingAttachments?.length || 0),\n    );\n    setText('');\n  };\n\n  const mapImageUploadToAttachment = (image: ImageUpload) => {\n    const mime_type: string | boolean = lookup(image.file.filename as string);\n    return {\n      fallback: image.file.name,\n      image_url: image.url,\n      mime_type: mime_type ? mime_type : undefined,\n      original_height: image.height,\n      original_width: image.width,\n      originalFile: image.file,\n      type: 'image',\n    } as Attachment;\n  };\n\n  const mapFileUploadToAttachment = (file: FileUpload) => {\n    if (file.file.mimeType?.startsWith('image/')) {\n      return {\n        fallback: file.file.name,\n        image_url: file.url,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        type: 'image',\n      };\n    } else if (file.file.mimeType?.startsWith('audio/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'audio',\n      };\n    } else if (file.file.mimeType?.startsWith('video/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        thumb_url: file.thumb_url,\n        title: file.file.name,\n        type: 'video',\n      };\n    } else {\n      return {\n        asset_url: file.url || file.file.uri,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'file',\n      };\n    }\n  };\n\n  // TODO: Figure out why this is async, as it doesn't await any promise.\n  // eslint-disable-next-line require-await\n  const sendMessage = async () => {\n    if (sending.current) {\n      return;\n    }\n\n    if (!channelCapabities.sendLinks && !!text.match(urlRegex)) {\n      Alert.alert(t('Links are disabled'), t('Sending links is not allowed in this conversation'));\n\n      return;\n    }\n\n    sending.current = true;\n\n    startCooldown();\n\n    const prevText = giphyEnabled && giphyActive ? `/giphy ${text}` : text;\n    setText('');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.clear();\n    }\n\n    const attachments = [] as Attachment<StreamChatGenerics>[];\n    for (const image of imageUploads) {\n      if (enableOfflineSupport) {\n        if (image.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapImageUploadToAttachment(image));\n        continue;\n      }\n\n      if ((!image || image.state === FileState.UPLOAD_FAILED) && !enableOfflineSupport) {\n        continue;\n      }\n\n      if (image.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        if (value.sendImageAsync) {\n          /**\n           * If user hit send before image uploaded, push ID into a queue to later\n           * be matched with the successful CDN response\n           */\n          setAsyncIds((prevAsyncIds) => [...prevAsyncIds, image.id]);\n        } else {\n          sending.current = false;\n          return setText(prevText);\n        }\n      }\n\n      // To get the mime type of the image from the file name and send it as an response for an image\n      if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n        attachments.push(mapImageUploadToAttachment(image));\n      }\n    }\n\n    for (const file of fileUploads) {\n      if (enableOfflineSupport) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapFileUploadToAttachment(file));\n        continue;\n      }\n\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        sending.current = false;\n        return;\n      }\n\n      if (file.state === FileState.UPLOADED || file.state === FileState.FINISHED) {\n        attachments.push(mapFileUploadToAttachment(file));\n      }\n    }\n\n    // Disallow sending message if its empty.\n    if (!prevText && attachments.length === 0) {\n      sending.current = false;\n      return;\n    }\n\n    if (value.editing && !isEditingBoolean(value.editing)) {\n      const updatedMessage = {\n        ...value.editing,\n        attachments,\n        mentioned_users: mentionedUsers,\n        quoted_message: undefined,\n        text: prevText,\n      } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0];\n\n      // TODO: Remove this line and show an error when submit fails\n      value.clearEditingState();\n\n      const updateMessagePromise = value\n        .editMessage(\n          // @ts-ignore\n          removeReservedFields(updatedMessage),\n        )\n        .then(value.clearEditingState);\n      resetInput(attachments);\n      logChatPromiseExecution(updateMessagePromise, 'update message');\n\n      sending.current = false;\n    } else {\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: uniq(mentionedUsers),\n          /** Parent message id - in case of thread */\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: prevText,\n        } as unknown as StreamMessage<StreamChatGenerics>);\n\n        value.clearQuotedMessageState();\n        sending.current = false;\n        resetInput(attachments);\n      } catch (_error) {\n        sending.current = false;\n        if (value.quotedMessage && typeof value.quotedMessage !== 'boolean') {\n          value.setQuotedMessageState(value.quotedMessage);\n        }\n        setText(prevText.slice(giphyEnabled && giphyActive ? 7 : 0)); // 7 because of '/giphy ' length\n        console.log('Failed to send message');\n      }\n    }\n  };\n\n  const sendMessageAsync = (id: string) => {\n    const image = asyncUploads[id];\n    if (!image || image.state === FileState.UPLOAD_FAILED) {\n      return;\n    }\n\n    if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n      const attachments = [\n        {\n          image_url: image.url,\n          type: 'image',\n        },\n      ] as StreamMessage<StreamChatGenerics>['attachments'];\n\n      startCooldown();\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: [],\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: '',\n        } as unknown as Partial<StreamMessage<StreamChatGenerics>>);\n\n        setAsyncIds((prevAsyncIds) => prevAsyncIds.splice(prevAsyncIds.indexOf(id), 1));\n        setAsyncUploads((prevAsyncUploads) => {\n          delete prevAsyncUploads[id];\n          return prevAsyncUploads;\n        });\n\n        setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      } catch (_error) {\n        console.log('Failed');\n      }\n    }\n  };\n\n  const setInputBoxRef = (ref: TextInput | null) => {\n    inputBoxRef.current = ref;\n    if (value.setInputRef) {\n      value.setInputRef(ref);\n    }\n  };\n\n  const getTriggerSettings = () => {\n    let triggerSettings: TriggerSettings<StreamChatGenerics> = {};\n    if (channel) {\n      if (value.autoCompleteTriggerSettings) {\n        triggerSettings = value.autoCompleteTriggerSettings({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      } else {\n        triggerSettings = ACITriggerSettings<StreamChatGenerics>({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      }\n    }\n    return triggerSettings;\n  };\n\n  const triggerSettings = getTriggerSettings();\n\n  const updateMessage = async () => {\n    try {\n      if (!isEditingBoolean(value.editing)) {\n        await client.updateMessage({\n          ...value.editing,\n          quoted_message: undefined,\n          text: giphyEnabled && giphyActive ? `/giphy ${text}` : text,\n        } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0]);\n      }\n\n      resetInput();\n      value.clearEditingState();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const regexCondition = /File (extension \\.\\w{2,4}|type \\S+) is not supported/;\n\n  const getUploadSetStateAction =\n    <UploadType extends ImageUpload | FileUpload>(\n      id: string,\n      fileState: FileStateValue,\n      extraData: Partial<UploadType> = {},\n    ): React.SetStateAction<UploadType[]> =>\n    (prevUploads: UploadType[]) =>\n      prevUploads.map((prevUpload) => {\n        if (prevUpload.id === id) {\n          return {\n            ...prevUpload,\n            ...extraData,\n            state: fileState,\n          };\n        }\n        return prevUpload;\n      });\n\n  const handleFileOrImageUploadError = (error: unknown, isImageError: boolean, id: string) => {\n    if (isImageError) {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setImageUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n\n        return setImageUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    } else {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setFileUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n        return setFileUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    }\n  };\n\n  const uploadFile = async ({ newFile }: { newFile: FileUpload }) => {\n    const { file, id } = newFile;\n\n    setFileUploads(getUploadSetStateAction(id, FileState.UPLOADING));\n\n    let response: Partial<SendFileAPIResponse> = {};\n    try {\n      if (value.doDocUploadRequest) {\n        response = await value.doDocUploadRequest(file, channel);\n      } else if (channel && file.uri) {\n        response = await channel.sendFile(file.uri, file.name, file.mimeType);\n      }\n      const extraData: Partial<FileUpload> = { thumb_url: response.thumb_url, url: response.file };\n      setFileUploads(getUploadSetStateAction(id, FileState.UPLOADED, extraData));\n    } catch (error: unknown) {\n      handleFileOrImageUploadError(error, false, id);\n    }\n  };\n\n  const uploadImage = async ({ newImage }: { newImage: ImageUpload }) => {\n    const { file, id } = newImage || {};\n\n    if (!file) {\n      return;\n    }\n\n    let response = {} as SendFileAPIResponse;\n\n    try {\n      const uri = file.uri || '';\n      /**\n       * We skip compression if:\n       * - the file is from the camera as that should already be compressed\n       * - the file has no height/width value to maintain for compression\n       * - the compressImageQuality number is not present or is 1 (meaning no compression)\n       */\n      const compressedUri = await (file.source === 'camera' ||\n      !file.height ||\n      !file.width ||\n      typeof value.compressImageQuality !== 'number' ||\n      value.compressImageQuality === 1\n        ? uri\n        : compressImage({\n            compressImageQuality: value.compressImageQuality,\n            height: file.height,\n            uri,\n            width: file.width,\n          }));\n      const filename = file.filename ?? uri.replace(/^(file:\\/\\/|content:\\/\\/)/, '');\n      const contentType = lookup(filename) || 'multipart/form-data';\n      if (value.doImageUploadRequest) {\n        response = await value.doImageUploadRequest(file, channel);\n      } else if (compressedUri && channel) {\n        if (value.sendImageAsync) {\n          channel.sendImage(compressedUri, filename, contentType).then((res) => {\n            if (asyncIds.includes(id)) {\n              // Evaluates to true if user hit send before image successfully uploaded\n              setAsyncUploads((prevAsyncUploads) => {\n                prevAsyncUploads[id] = {\n                  ...prevAsyncUploads[id],\n                  state: FileState.UPLOADED,\n                  url: res.file,\n                };\n                return prevAsyncUploads;\n              });\n            } else {\n              const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n                url: res.file,\n              });\n              setImageUploads(newImageUploads);\n            }\n          });\n        } else {\n          response = await channel.sendImage(compressedUri, filename, contentType);\n        }\n      }\n\n      if (Object.keys(response).length) {\n        const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n          height: file.height,\n          url: response.file,\n          width: file.width,\n        });\n        setImageUploads(newImageUploads);\n      }\n    } catch (error) {\n      handleFileOrImageUploadError(error, true, id);\n    }\n  };\n\n  const uploadNewFile = async (file: File) => {\n    const id: string = generateRandomId();\n\n    const isBlockedFileExtension: boolean | undefined = blockedFileExtensionTypes?.some(\n      (fileExtensionType: string) => file.name?.includes(fileExtensionType),\n    );\n    const isBlockedFileMimeType: boolean | undefined = blockedFileMimeTypes?.some(\n      (mimeType: string) => file.name?.includes(mimeType),\n    );\n\n    const fileState =\n      isBlockedFileExtension || isBlockedFileMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newFile: FileUpload = {\n      duration: 0,\n      file,\n      id: file.id || id,\n      paused: true,\n      progress: 0,\n      state: fileState,\n    };\n\n    await Promise.all([\n      setFileUploads((prevFileUploads) => prevFileUploads.concat([newFile])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedFileExtension) {\n      uploadFile({ newFile });\n    }\n  };\n\n  const uploadNewImage = async (image: Partial<Asset>) => {\n    const id = generateRandomId();\n\n    const isBlockedImageMimeType = blockedImageMimeTypes?.some((mimeType: string) =>\n      image.uri?.includes(mimeType),\n    );\n\n    const isBlockedImageExtension = blockedImageExtensionTypes?.some((imageExtensionType: string) =>\n      image.uri?.includes(imageExtensionType),\n    );\n\n    const imageState =\n      isBlockedImageExtension || isBlockedImageMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newImage: ImageUpload = {\n      file: image,\n      height: image.height,\n      id,\n      state: imageState,\n      url: image.uri,\n      width: image.width,\n    };\n\n    await Promise.all([\n      setImageUploads((prevImageUploads) => prevImageUploads.concat([newImage])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedImageExtension) {\n      uploadImage({ newImage });\n    }\n  };\n\n  const messageInputContext = useCreateMessageInputContext({\n    appendText,\n    asyncIds,\n    asyncUploads,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    fileUploads,\n    giphyActive,\n    imageUploads,\n    inputBoxRef,\n    isValidMessage,\n    mentionedUsers,\n    numberOfUploads,\n    onChange,\n    onSelectItem,\n    openAttachmentPicker,\n    openCommandsPicker,\n    openFilePicker: pickFile,\n    openMentionsPicker,\n    pickFile,\n    removeFile,\n    removeImage,\n    resetInput,\n    selectedPicker,\n    sending,\n    sendMessageAsync,\n    sendThreadMessageInChannel,\n    setAsyncIds,\n    setAsyncUploads,\n    setFileUploads,\n    setGiphyActive,\n    setImageUploads,\n    setInputBoxRef,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setSendThreadMessageInChannel,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n    thread,\n    toggleAttachmentPicker,\n    triggerSettings,\n    updateMessage,\n    uploadFile,\n    uploadImage,\n    uploadNewFile,\n    uploadNewImage,\n    ...value,\n    sendMessage, // overriding the originally passed in sendMessage\n  });\n\n  return (\n    <MessageInputContext.Provider\n      value={messageInputContext as unknown as MessageInputContextValue}\n    >\n      {children}\n    </MessageInputContext.Provider>\n  );\n};\n\nexport const useMessageInputContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const contextValue = useContext(\n    MessageInputContext,\n  ) as unknown as MessageInputContextValue<StreamChatGenerics>;\n\n  if (contextValue === DEFAULT_BASE_CONTEXT_VALUE && !isTestEnvironment()) {\n    throw new Error(\n      `The useMessageInputContext hook was called outside of the MessageInputContext provider. Make sure you have configured Channel component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#channel`,\n    );\n  }\n\n  return contextValue;\n};\n\n/**\n * Typescript currently does not support partial inference so if MessageInputContext\n * typing is desired while using the HOC withMessageInputContext the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withMessageInputContext = <\n  P extends UnknownType,\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>> => {\n  const WithMessageInputContextComponent = (\n    props: Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>,\n  ) => {\n    const messageInputContext = useMessageInputContext<StreamChatGenerics>();\n\n    return <Component {...(props as P)} {...messageInputContext} />;\n  };\n  WithMessageInputContextComponent.displayName = `WithMessageInputContext${getDisplayName(\n    Component,\n  )}`;\n  return WithMessageInputContextComponent;\n};\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js b/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js
index ec505db..569e803 100644
--- a/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js
+++ b/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js
@@ -212,7 +212,7 @@ var MessageInputWithContext = function MessageInputWithContext(props) {
     }
   }, [imagesForInput]);
   var MEGA_BYTES_TO_BYTES = 1024 * 1024;
-  var MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;
+  var MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;
   var uploadImagesHandler = function uploadImagesHandler() {
     var imageToUpload = selectedImages.find(function (selectedImage) {
       var uploadedImage = imageUploads.find(function (imageUpload) {
diff --git a/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js.map b/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js.map
index 6579e5f..31dc892 100644
--- a/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js.map
+++ b/node_modules/stream-chat-react-native-core/lib/module/components/MessageInput/MessageInput.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_useCountdown2","_contexts","_AttachmentPickerContext","_ChannelContext","_MessageInputContext","_MessagesContext","_OwnCapabilitiesContext","_SuggestionsContext","_ThemeContext","_ThreadContext","_TranslationContext","_AttachmentSelectionBar","_AutoCompleteInput","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","styles","StyleSheet","create","attachmentSeparator","borderBottomWidth","marginBottom","autoCompleteInputContainer","alignItems","flexDirection","paddingLeft","paddingRight","composerContainer","container","borderTopWidth","padding","inputBoxContainer","borderRadius","borderWidth","flex","optionsContainer","paddingBottom","replyContainer","paddingHorizontal","sendButtonContainer","suggestionsListContainer","elevation","left","position","right","shadowOffset","height","width","shadowOpacity","MessageInputWithContext","props","additionalTextInputProps","asyncIds","asyncUploads","AutoCompleteSuggestionList","closeAttachmentPicker","cooldownEndsAt","CooldownTimer","disabled","editing","FileUploadPreview","fileUploads","giphyActive","ImageUploadPreview","imageUploads","Input","inputBoxRef","InputButtons","InputEditingStateHeader","InputGiphySearch","InputReplyStateHeader","isOnline","isValidMessage","maxNumberOfFiles","members","mentionedUsers","numberOfUploads","quotedMessage","removeFile","removeImage","Reply","resetInput","SendButton","sending","sendMessageAsync","ShowThreadMessageInChannelButton","suggestions","thread","threadList","triggerType","uploadNewFile","uploadNewImage","watchers","_useState","useState","_useState2","_slicedToArray2","setHeight","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","border","grey_whisper","white","white_smoke","_useTheme$theme$messa","messageInput","attachmentSelectionBar","suggestionListContainer","_useAttachmentPickerC","useAttachmentPickerContext","attachmentPickerBottomSheetHeight","attachmentSelectionBarHeight","bottomInset","selectedFiles","selectedImages","selectedPicker","setMaxNumberOfFiles","setSelectedFiles","setSelectedImages","_useCountdown","useCountdown","cooldownRemainingSeconds","seconds","useEffect","_useState3","_useState4","hasResetImages","setHasResetImages","_useState5","_useState6","hasResetFiles","setHasResetFiles","selectedImagesLength","imageUploadsLength","selectedFilesLength","fileUploadsLength","imagesForInput","forEach","image","id","file","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","uploadImagesHandler","imageToUpload","find","selectedImage","uploadedImage","imageUpload","uri","url","Number","fileSize","Alert","alert","filter","removeImagesHandler","imagesToRemove","fileToUpload","selectedFile","uploadedFile","fileUpload","size","filesToRemove","updatedSelectedImages","map","source","Boolean","updatedSelectedFiles","duration","mimeType","editingExists","current","focus","asyncIdsString","join","asyncUploadsString","values","_ref","state","keys","getMembers","result","member","user","push","getUsers","users","concat","_toConsumableArray2","getWatchers","uniqueUsers","_iterator","_step","usersArray","apply","additionalTextInputContainerProps","_extends2","editable","undefined","createElement","Fragment","View","onLayout","_ref2","newHeight","nativeEvent","layout","style","backgroundColor","borderColor","__self","__source","fileName","lineNumber","columnNumber","paddingVertical","quoted_message","borderBottomColor","marginHorizontal","AutoCompleteInput","cooldownActive","bottom","active","data","onSelect","queryText","AttachmentSelectionBar","areEqual","prevProps","nextProps","prevAdditionalTextInputProps","prevAsyncUploads","prevDisabled","prevEditing","prevFileUploads","prevGiphyActive","prevImageUploads","prevIsOnline","prevIsValidMessage","prevMentionedUsers","prevQuotedMessage","prevSending","prevShowMoreOptions","showMoreOptions","prevSuggestions","prevT","t","prevThread","prevThreadList","nextAdditionalTextInputProps","nextAsyncUploads","nextDisabled","nextEditing","nextFileUploads","nextGiphyActive","nextImageUploads","nextIsOnline","nextIsValidMessage","nextMentionedUsers","nextQuotedMessage","nextSending","nextShowMoreOptions","nextSuggestions","nextT","nextThread","nextThreadList","tEqual","additionalTextInputPropsEven","disabledEqual","editingEqual","imageUploadsEqual","giphyActiveEqual","quotedMessageEqual","sendingEqual","showMoreOptionsEqual","isOnlineEqual","isValidMessageEqual","asyncUploadsEqual","every","fileUploadsEqual","mentionedUsersEqual","suggestionsEqual","_ref3","index","threadEqual","text","reply_count","threadListEqual","MemoizedMessageInput","React","memo","MessageInput","_useChatContext","useChatContext","ownCapabilities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","_useChannelContext$di","_useMessageInputConte","useMessageInputContext","clearEditingState","clearQuotedMessageState","SendMessageDisallowedIndicator","setGiphyActive","setShowMoreOptions","_useMessagesContext","useMessagesContext","_useSuggestionsContex","useSuggestionsContext","AutoCompleteSuggestionHeader","AutoCompleteSuggestionItem","_useThreadContext","useThreadContext","_useTranslationContex","useTranslationContext","sendMessage","exports","displayName"],"sources":["MessageInput.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Alert, StyleSheet, View } from 'react-native';\n\nimport type { UserResponse } from 'stream-chat';\n\nimport { useCountdown } from './hooks/useCountdown';\n\nimport { ChatContextValue, useChatContext } from '../../contexts';\nimport { useAttachmentPickerContext } from '../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { useOwnCapabilitiesContext } from '../../contexts/ownCapabilitiesContext/OwnCapabilitiesContext';\nimport {\n  SuggestionsContextValue,\n  useSuggestionsContext,\n} from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\n\nimport type { Asset, DefaultStreamChatGenerics } from '../../types/types';\nimport { AttachmentSelectionBar } from '../AttachmentPicker/components/AttachmentSelectionBar';\nimport { AutoCompleteInput } from '../AutoCompleteInput/AutoCompleteInput';\n\nconst styles = StyleSheet.create({\n  attachmentSeparator: {\n    borderBottomWidth: 1,\n    marginBottom: 10,\n  },\n  autoCompleteInputContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  composerContainer: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  container: {\n    borderTopWidth: 1,\n    padding: 10,\n  },\n  inputBoxContainer: {\n    borderRadius: 20,\n    borderWidth: 1,\n    flex: 1,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    paddingBottom: 10,\n    paddingRight: 10,\n  },\n  replyContainer: { paddingBottom: 12, paddingHorizontal: 8 },\n  sendButtonContainer: { paddingBottom: 10, paddingLeft: 10 },\n  suggestionsListContainer: {\n    borderRadius: 10,\n    elevation: 3,\n    left: 8,\n    position: 'absolute',\n    right: 8,\n    shadowOffset: { height: 1, width: 0 },\n    shadowOpacity: 0.15,\n  },\n});\n\ntype MessageInputPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChatContextValue<StreamChatGenerics>, 'isOnline'> &\n  Pick<ChannelContextValue<StreamChatGenerics>, 'disabled' | 'members' | 'watchers'> &\n  Pick<\n    MessageInputContextValue<StreamChatGenerics>,\n    | 'additionalTextInputProps'\n    | 'asyncIds'\n    | 'asyncUploads'\n    | 'cooldownEndsAt'\n    | 'CooldownTimer'\n    | 'clearEditingState'\n    | 'clearQuotedMessageState'\n    | 'closeAttachmentPicker'\n    | 'editing'\n    | 'FileUploadPreview'\n    | 'fileUploads'\n    | 'giphyActive'\n    | 'ImageUploadPreview'\n    | 'imageUploads'\n    | 'Input'\n    | 'inputBoxRef'\n    | 'InputButtons'\n    | 'InputEditingStateHeader'\n    | 'InputGiphySearch'\n    | 'InputReplyStateHeader'\n    | 'isValidMessage'\n    | 'maxNumberOfFiles'\n    | 'mentionedUsers'\n    | 'numberOfUploads'\n    | 'quotedMessage'\n    | 'resetInput'\n    | 'SendButton'\n    | 'sending'\n    | 'sendMessageAsync'\n    | 'setShowMoreOptions'\n    | 'setGiphyActive'\n    | 'showMoreOptions'\n    | 'ShowThreadMessageInChannelButton'\n    | 'removeFile'\n    | 'removeImage'\n    | 'uploadNewFile'\n    | 'uploadNewImage'\n  > &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'Reply'> &\n  Pick<\n    SuggestionsContextValue<StreamChatGenerics>,\n    | 'AutoCompleteSuggestionHeader'\n    | 'AutoCompleteSuggestionItem'\n    | 'AutoCompleteSuggestionList'\n    | 'suggestions'\n    | 'triggerType'\n  > &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'thread'> &\n  Pick<TranslationContextValue, 't'> & {\n    threadList?: boolean;\n  };\n\nconst MessageInputWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    AutoCompleteSuggestionList,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    disabled,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isOnline,\n    isValidMessage,\n    maxNumberOfFiles,\n    members,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    Reply,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    ShowThreadMessageInChannelButton,\n    suggestions,\n    thread,\n    threadList,\n    triggerType,\n    uploadNewFile,\n    uploadNewImage,\n    watchers,\n  } = props;\n\n  const [height, setHeight] = useState(0);\n\n  const {\n    theme: {\n      colors: { border, grey_whisper, white, white_smoke },\n      messageInput: {\n        attachmentSelectionBar,\n        autoCompleteInputContainer,\n        composerContainer,\n        container,\n        inputBoxContainer,\n        optionsContainer,\n        replyContainer,\n        sendButtonContainer,\n        suggestionsListContainer: { container: suggestionListContainer },\n      },\n    },\n  } = useTheme();\n\n  const {\n    attachmentPickerBottomSheetHeight,\n    attachmentSelectionBarHeight,\n    bottomInset,\n    selectedFiles,\n    selectedImages,\n    selectedPicker,\n    setMaxNumberOfFiles,\n    setSelectedFiles,\n    setSelectedImages,\n  } = useAttachmentPickerContext();\n\n  const { seconds: cooldownRemainingSeconds } = useCountdown(cooldownEndsAt);\n\n  /**\n   * Mounting and un-mounting logic are un-related in following useEffect.\n   * While mounting we want to pass maxNumberOfFiles (which is prop on Channel component)\n   * to AttachmentPicker (on OverlayProvider)\n   *\n   * While un-mounting, we want to close the picker e.g., while navigating away.\n   */\n  useEffect(() => {\n    setMaxNumberOfFiles(maxNumberOfFiles ?? 10);\n\n    return closeAttachmentPicker;\n  }, []);\n\n  const [hasResetImages, setHasResetImages] = useState(false);\n  const [hasResetFiles, setHasResetFiles] = useState(false);\n  const selectedImagesLength = hasResetImages ? selectedImages.length : 0;\n  const imageUploadsLength = hasResetImages ? imageUploads.length : 0;\n  const selectedFilesLength = hasResetFiles ? selectedFiles.length : 0;\n  const fileUploadsLength = hasResetFiles ? fileUploads.length : 0;\n  const imagesForInput = (!!thread && !!threadList) || (!thread && !threadList);\n\n  useEffect(() => {\n    setSelectedImages([]);\n    if (imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n    return () => setSelectedImages([]);\n  }, []);\n\n  useEffect(() => {\n    setSelectedFiles([]);\n    if (fileUploads.length) {\n      fileUploads.forEach((file) => removeFile(file.id));\n    }\n    return () => setSelectedFiles([]);\n  }, []);\n\n  useEffect(() => {\n    if (hasResetImages === false && imageUploadsLength === 0 && selectedImagesLength === 0) {\n      setHasResetImages(true);\n    }\n  }, [imageUploadsLength, selectedImagesLength]);\n\n  useEffect(() => {\n    if (hasResetFiles === false && fileUploadsLength === 0 && selectedFilesLength === 0) {\n      setHasResetFiles(true);\n    }\n  }, [fileUploadsLength, selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput === false && imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n  }, [imagesForInput]);\n\n  const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n  const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;\n\n  const uploadImagesHandler = () => {\n    const imageToUpload = selectedImages.find((selectedImage) => {\n      const uploadedImage = imageUploads.find(\n        (imageUpload) =>\n          imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n      );\n      return !uploadedImage;\n    });\n    // Check if the file size of the image exceeds the threshold of 100MB\n    if (\n      imageToUpload &&\n      Number(imageToUpload.fileSize) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n    ) {\n      Alert.alert(\n        `Maximum file size upload limit reached, please upload an image below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n      );\n      setSelectedImages(\n        selectedImages.filter((selectedImage) => selectedImage.uri !== imageToUpload.uri),\n      );\n    } else {\n      if (imageToUpload) uploadNewImage(imageToUpload);\n    }\n  };\n\n  const removeImagesHandler = () => {\n    const imagesToRemove = imageUploads.filter(\n      (imageUpload) =>\n        !selectedImages.find(\n          (selectedImage) =>\n            selectedImage.uri === imageUpload.file.uri || selectedImage.uri === imageUpload.url,\n        ),\n    );\n    imagesToRemove.forEach((image) => removeImage(image.id));\n  };\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (selectedImagesLength > imageUploadsLength) {\n        /** User selected an image in bottom sheet attachment picker */\n        uploadImagesHandler();\n      } else {\n        /** User de-selected an image in bottom sheet attachment picker */\n        removeImagesHandler();\n      }\n    }\n  }, [selectedImagesLength]);\n\n  useEffect(() => {\n    if (selectedFilesLength > fileUploadsLength) {\n      /** User selected a video in bottom sheet attachment picker */\n      const fileToUpload = selectedFiles.find((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return !uploadedFile;\n      });\n      // Check if the file size exceeds the threshold of 100MB\n      if (\n        fileToUpload &&\n        Number(fileToUpload.size) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n      ) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload a file below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n        setSelectedFiles(\n          selectedFiles.filter((selectedFile) => selectedFile.uri !== fileToUpload.uri),\n        );\n      } else {\n        if (fileToUpload) uploadNewFile(fileToUpload);\n      }\n    } else {\n      /** User de-selected a video in bottom sheet attachment picker */\n      const filesToRemove = fileUploads.filter(\n        (fileUpload) =>\n          !selectedFiles.find(\n            (selectedFile) =>\n              selectedFile.uri === fileUpload.file.uri || selectedFile.uri === fileUpload.url,\n          ),\n      );\n      filesToRemove.forEach((file) => removeFile(file.id));\n    }\n  }, [selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (imageUploadsLength < selectedImagesLength) {\n        /** User removed some image from seleted images within ImageUploadPreview. */\n        const updatedSelectedImages = selectedImages.filter((selectedImage) => {\n          const uploadedImage = imageUploads.find(\n            (imageUpload) =>\n              imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n          );\n          return uploadedImage;\n        });\n        setSelectedImages(updatedSelectedImages);\n      } else if (imageUploadsLength > selectedImagesLength) {\n        /**\n         * User is editing some message which contains image attachments OR\n         * image attachment is added from custom image picker (other than the default bottomsheet image picker)\n         * using `uploadNewImage` function from `MessageInputContext`.\n         **/\n        setSelectedImages(\n          imageUploads\n            .map((imageUpload) => ({\n              height: imageUpload.file.height,\n              source: imageUpload.file.source,\n              uri: imageUpload.url || imageUpload.file.uri,\n              width: imageUpload.file.width,\n            }))\n            .filter(Boolean) as Asset[],\n        );\n      }\n    }\n  }, [imageUploadsLength]);\n\n  useEffect(() => {\n    if (fileUploadsLength < selectedFilesLength) {\n      /** User removed some video from seleted files within ImageUploadPreview. */\n      const updatedSelectedFiles = selectedFiles.filter((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return uploadedFile;\n      });\n      setSelectedFiles(updatedSelectedFiles);\n    } else if (fileUploadsLength > selectedFilesLength) {\n      /**\n       * User is editing some message which contains video attachments OR\n       * video attachment is added from custom image picker (other than the default bottom-sheet image picker)\n       * using `uploadNewFile` function from `MessageInputContext`.\n       **/\n      setSelectedFiles(\n        fileUploads.map((fileUpload) => ({\n          duration: fileUpload.file.duration,\n          mimeType: fileUpload.file.mimeType,\n          name: fileUpload.file.name,\n          size: fileUpload.file.size,\n          uri: fileUpload.file.uri,\n        })),\n      );\n    }\n  }, [fileUploadsLength]);\n\n  const editingExists = !!editing;\n  useEffect(() => {\n    if (editing && inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n\n    /**\n     * Make sure to test `initialValue` functionality, if you are modifying following condition.\n     *\n     * We have the following condition, to make sure - when user comes out of \"editing message\" state,\n     * we wipe out all the state around message input such as text, mentioned users, image uploads etc.\n     * But it also means, this condition will be fired up on first render, which may result in clearing\n     * the initial value set on input box, through the prop - `initialValue`.\n     * This prop generally gets used for the case of draft message functionality.\n     */\n    if (\n      !editing &&\n      (giphyActive ||\n        fileUploads.length > 0 ||\n        mentionedUsers.length > 0 ||\n        imageUploads.length > 0 ||\n        numberOfUploads > 0)\n    ) {\n      resetInput();\n    }\n  }, [editingExists]);\n\n  const asyncIdsString = asyncIds.join();\n  const asyncUploadsString = Object.values(asyncUploads)\n    .map(({ state, url }) => `${state}${url}`)\n    .join();\n  useEffect(() => {\n    if (Object.keys(asyncUploads).length) {\n      /**\n       * When successful image upload response occurs after hitting send,\n       * send a follow up message with the image\n       */\n      sending.current = true;\n      asyncIds.forEach((id) => sendMessageAsync(id));\n      sending.current = false;\n    }\n  }, [asyncIdsString, asyncUploadsString, sendMessageAsync]);\n\n  const getMembers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (members && Object.values(members).length) {\n      Object.values(members).forEach((member) => {\n        if (member.user) {\n          result.push(member.user);\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const getUsers = () => {\n    const users = [...getMembers(), ...getWatchers()];\n\n    // make sure we don't list users twice\n    const uniqueUsers: { [key: string]: UserResponse<StreamChatGenerics> } = {};\n    for (const user of users) {\n      if (user && !uniqueUsers[user.id]) {\n        uniqueUsers[user.id] = user;\n      }\n    }\n    const usersArray = Object.values(uniqueUsers);\n\n    return usersArray;\n  };\n\n  const getWatchers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (watchers && Object.values(watchers).length) {\n      result.push(...Object.values(watchers));\n    }\n\n    return result;\n  };\n\n  const additionalTextInputContainerProps = {\n    editable: disabled ? false : undefined,\n    ...additionalTextInputProps,\n  };\n\n  return (\n    <>\n      <View\n        onLayout={({\n          nativeEvent: {\n            layout: { height: newHeight },\n          },\n        }) => setHeight(newHeight)}\n        style={[styles.container, { backgroundColor: white, borderColor: border }, container]}\n      >\n        {editing && <InputEditingStateHeader />}\n        {quotedMessage && <InputReplyStateHeader />}\n        <View style={[styles.composerContainer, composerContainer]}>\n          {Input ? (\n            <Input\n              additionalTextInputProps={additionalTextInputContainerProps}\n              getUsers={getUsers}\n            />\n          ) : (\n            <>\n              <View style={[styles.optionsContainer, optionsContainer]}>\n                {InputButtons && <InputButtons />}\n              </View>\n              <View\n                style={[\n                  styles.inputBoxContainer,\n                  {\n                    borderColor: grey_whisper,\n                    paddingVertical: giphyActive ? 8 : 12,\n                  },\n                  inputBoxContainer,\n                ]}\n              >\n                {((typeof editing !== 'boolean' && editing?.quoted_message) || quotedMessage) && (\n                  <View style={[styles.replyContainer, replyContainer]}>\n                    <Reply />\n                  </View>\n                )}\n                {imageUploads.length ? <ImageUploadPreview /> : null}\n                {imageUploads.length && fileUploads.length ? (\n                  <View\n                    style={[\n                      styles.attachmentSeparator,\n                      {\n                        borderBottomColor: grey_whisper,\n                        marginHorizontal: giphyActive ? 8 : 12,\n                      },\n                    ]}\n                  />\n                ) : null}\n                {fileUploads.length ? <FileUploadPreview /> : null}\n                {giphyActive ? (\n                  <InputGiphySearch disabled={!isOnline} />\n                ) : (\n                  <View style={[styles.autoCompleteInputContainer, autoCompleteInputContainer]}>\n                    <AutoCompleteInput<StreamChatGenerics>\n                      additionalTextInputProps={additionalTextInputProps}\n                      cooldownActive={!!cooldownRemainingSeconds}\n                    />\n                  </View>\n                )}\n              </View>\n              <View style={[styles.sendButtonContainer, sendButtonContainer]}>\n                {cooldownRemainingSeconds ? (\n                  <CooldownTimer seconds={cooldownRemainingSeconds} />\n                ) : (\n                  <SendButton\n                    disabled={\n                      disabled || sending.current || !isValidMessage() || (giphyActive && !isOnline)\n                    }\n                  />\n                )}\n              </View>\n            </>\n          )}\n        </View>\n        <ShowThreadMessageInChannelButton threadList={threadList} />\n      </View>\n\n      {triggerType && suggestions ? (\n        <View\n          style={[\n            suggestionListContainer,\n            styles.suggestionsListContainer,\n            { backgroundColor: white, bottom: height },\n          ]}\n        >\n          <AutoCompleteSuggestionList\n            active={!!suggestions}\n            data={suggestions.data}\n            onSelect={suggestions.onSelect}\n            queryText={suggestions.queryText}\n            triggerType={triggerType}\n          />\n        </View>\n      ) : null}\n      {selectedPicker && (\n        <View\n          style={[\n            {\n              backgroundColor: white_smoke,\n              height:\n                (attachmentPickerBottomSheetHeight\n                  ? attachmentPickerBottomSheetHeight + (attachmentSelectionBarHeight ?? 52)\n                  : 360) - bottomInset,\n            },\n            attachmentSelectionBar,\n          ]}\n        >\n          <AttachmentSelectionBar />\n        </View>\n      )}\n    </>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageInputPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps: prevAdditionalTextInputProps,\n    asyncUploads: prevAsyncUploads,\n    disabled: prevDisabled,\n    editing: prevEditing,\n    fileUploads: prevFileUploads,\n    giphyActive: prevGiphyActive,\n    imageUploads: prevImageUploads,\n    isOnline: prevIsOnline,\n    isValidMessage: prevIsValidMessage,\n    mentionedUsers: prevMentionedUsers,\n    quotedMessage: prevQuotedMessage,\n    sending: prevSending,\n    showMoreOptions: prevShowMoreOptions,\n    suggestions: prevSuggestions,\n    t: prevT,\n    thread: prevThread,\n    threadList: prevThreadList,\n  } = prevProps;\n  const {\n    additionalTextInputProps: nextAdditionalTextInputProps,\n    asyncUploads: nextAsyncUploads,\n    disabled: nextDisabled,\n    editing: nextEditing,\n    fileUploads: nextFileUploads,\n    giphyActive: nextGiphyActive,\n    imageUploads: nextImageUploads,\n    isOnline: nextIsOnline,\n    isValidMessage: nextIsValidMessage,\n    mentionedUsers: nextMentionedUsers,\n    quotedMessage: nextQuotedMessage,\n    sending: nextSending,\n    showMoreOptions: nextShowMoreOptions,\n    suggestions: nextSuggestions,\n    t: nextT,\n    thread: nextThread,\n    threadList: nextThreadList,\n  } = nextProps;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const additionalTextInputPropsEven =\n    prevAdditionalTextInputProps === nextAdditionalTextInputProps;\n  if (!additionalTextInputPropsEven) return false;\n\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  const editingEqual = !!prevEditing === !!nextEditing;\n  if (!editingEqual) return false;\n\n  const imageUploadsEqual = prevImageUploads.length === nextImageUploads.length;\n  if (!imageUploadsEqual) return false;\n\n  const giphyActiveEqual = prevGiphyActive === nextGiphyActive;\n  if (!giphyActiveEqual) return false;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n  if (!quotedMessageEqual) return false;\n\n  const sendingEqual = prevSending.current === nextSending.current;\n  if (!sendingEqual) return false;\n\n  const showMoreOptionsEqual = prevShowMoreOptions === nextShowMoreOptions;\n  if (!showMoreOptionsEqual) return false;\n\n  const isOnlineEqual = prevIsOnline === nextIsOnline;\n  if (!isOnlineEqual) return false;\n\n  const isValidMessageEqual = prevIsValidMessage() === nextIsValidMessage();\n  if (!isValidMessageEqual) return false;\n\n  const asyncUploadsEqual = Object.keys(prevAsyncUploads).every(\n    (key) =>\n      prevAsyncUploads[key].state === nextAsyncUploads[key].state &&\n      prevAsyncUploads[key].url === nextAsyncUploads[key].url,\n  );\n  if (!asyncUploadsEqual) return false;\n\n  const fileUploadsEqual = prevFileUploads.length === nextFileUploads.length;\n  if (!fileUploadsEqual) return false;\n\n  const mentionedUsersEqual = prevMentionedUsers.length === nextMentionedUsers.length;\n  if (!mentionedUsersEqual) return false;\n\n  const suggestionsEqual =\n    !!prevSuggestions?.data && !!nextSuggestions?.data\n      ? prevSuggestions.data.length === nextSuggestions.data.length &&\n        prevSuggestions.data.every(({ name }, index) => name === nextSuggestions.data[index].name)\n      : !!prevSuggestions === !!nextSuggestions;\n  if (!suggestionsEqual) return false;\n\n  const threadEqual =\n    prevThread?.id === nextThread?.id &&\n    prevThread?.text === nextThread?.text &&\n    prevThread?.reply_count === nextThread?.reply_count;\n  if (!threadEqual) return false;\n\n  const threadListEqual = prevThreadList === nextThreadList;\n  if (!threadListEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageInput = React.memo(\n  MessageInputWithContext,\n  areEqual,\n) as typeof MessageInputWithContext;\n\nexport type MessageInputProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageInputPropsWithContext<StreamChatGenerics>>;\n\n/**\n * UI Component for message input\n * It's a consumer of\n * [Channel Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/channel-context/),\n * [Chat Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/chat-context/),\n * [MessageInput Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/message-input-context/),\n * [Suggestions Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/suggestions-context/), and\n * [Translation Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/translation-context/)\n */\nexport const MessageInput = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputProps<StreamChatGenerics>,\n) => {\n  const { isOnline } = useChatContext();\n  const ownCapabilities = useOwnCapabilitiesContext();\n\n  const { disabled = false, members, watchers } = useChannelContext<StreamChatGenerics>();\n\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    clearEditingState,\n    clearQuotedMessageState,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isValidMessage,\n    maxNumberOfFiles,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    SendMessageDisallowedIndicator,\n    setGiphyActive,\n    setShowMoreOptions,\n    showMoreOptions,\n    ShowThreadMessageInChannelButton,\n    uploadNewFile,\n    uploadNewImage,\n  } = useMessageInputContext<StreamChatGenerics>();\n\n  const { Reply } = useMessagesContext<StreamChatGenerics>();\n\n  const {\n    AutoCompleteSuggestionHeader,\n    AutoCompleteSuggestionItem,\n    AutoCompleteSuggestionList,\n    suggestions,\n    triggerType,\n  } = useSuggestionsContext<StreamChatGenerics>();\n\n  const { thread } = useThreadContext<StreamChatGenerics>();\n\n  const { t } = useTranslationContext();\n\n  if (!ownCapabilities.sendMessage && SendMessageDisallowedIndicator) {\n    return <SendMessageDisallowedIndicator />;\n  }\n\n  return (\n    <MemoizedMessageInput\n      {...{\n        additionalTextInputProps,\n        asyncIds,\n        asyncUploads,\n        AutoCompleteSuggestionHeader,\n        AutoCompleteSuggestionItem,\n        AutoCompleteSuggestionList,\n        clearEditingState,\n        clearQuotedMessageState,\n        closeAttachmentPicker,\n        cooldownEndsAt,\n        CooldownTimer,\n        disabled,\n        editing,\n        FileUploadPreview,\n        fileUploads,\n        giphyActive,\n        ImageUploadPreview,\n        imageUploads,\n        Input,\n        inputBoxRef,\n        InputButtons,\n        InputEditingStateHeader,\n        InputGiphySearch,\n        InputReplyStateHeader,\n        isOnline,\n        isValidMessage,\n        maxNumberOfFiles,\n        members,\n        mentionedUsers,\n        numberOfUploads,\n        quotedMessage,\n        removeFile,\n        removeImage,\n        Reply,\n        resetInput,\n        SendButton,\n        sending,\n        sendMessageAsync,\n        setGiphyActive,\n        setShowMoreOptions,\n        showMoreOptions,\n        ShowThreadMessageInChannelButton,\n        suggestions,\n        t,\n        thread,\n        triggerType,\n        uploadNewFile,\n        uploadNewImage,\n        watchers,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageInput.displayName = 'MessageInput{messageInput}';\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_useCountdown2","_contexts","_AttachmentPickerContext","_ChannelContext","_MessageInputContext","_MessagesContext","_OwnCapabilitiesContext","_SuggestionsContext","_ThemeContext","_ThreadContext","_TranslationContext","_AttachmentSelectionBar","_AutoCompleteInput","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","styles","StyleSheet","create","attachmentSeparator","borderBottomWidth","marginBottom","autoCompleteInputContainer","alignItems","flexDirection","paddingLeft","paddingRight","composerContainer","container","borderTopWidth","padding","inputBoxContainer","borderRadius","borderWidth","flex","optionsContainer","paddingBottom","replyContainer","paddingHorizontal","sendButtonContainer","suggestionsListContainer","elevation","left","position","right","shadowOffset","height","width","shadowOpacity","MessageInputWithContext","props","additionalTextInputProps","asyncIds","asyncUploads","AutoCompleteSuggestionList","closeAttachmentPicker","cooldownEndsAt","CooldownTimer","disabled","editing","FileUploadPreview","fileUploads","giphyActive","ImageUploadPreview","imageUploads","Input","inputBoxRef","InputButtons","InputEditingStateHeader","InputGiphySearch","InputReplyStateHeader","isOnline","isValidMessage","maxNumberOfFiles","members","mentionedUsers","numberOfUploads","quotedMessage","removeFile","removeImage","Reply","resetInput","SendButton","sending","sendMessageAsync","ShowThreadMessageInChannelButton","suggestions","thread","threadList","triggerType","uploadNewFile","uploadNewImage","watchers","_useState","useState","_useState2","_slicedToArray2","setHeight","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$color","colors","border","grey_whisper","white","white_smoke","_useTheme$theme$messa","messageInput","attachmentSelectionBar","suggestionListContainer","_useAttachmentPickerC","useAttachmentPickerContext","attachmentPickerBottomSheetHeight","attachmentSelectionBarHeight","bottomInset","selectedFiles","selectedImages","selectedPicker","setMaxNumberOfFiles","setSelectedFiles","setSelectedImages","_useCountdown","useCountdown","cooldownRemainingSeconds","seconds","useEffect","_useState3","_useState4","hasResetImages","setHasResetImages","_useState5","_useState6","hasResetFiles","setHasResetFiles","selectedImagesLength","imageUploadsLength","selectedFilesLength","fileUploadsLength","imagesForInput","forEach","image","id","file","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","uploadImagesHandler","imageToUpload","find","selectedImage","uploadedImage","imageUpload","uri","url","Number","fileSize","Alert","alert","filter","removeImagesHandler","imagesToRemove","fileToUpload","selectedFile","uploadedFile","fileUpload","size","filesToRemove","updatedSelectedImages","map","source","Boolean","updatedSelectedFiles","duration","mimeType","editingExists","current","focus","asyncIdsString","join","asyncUploadsString","values","_ref","state","keys","getMembers","result","member","user","push","getUsers","users","concat","_toConsumableArray2","getWatchers","uniqueUsers","_iterator","_step","usersArray","apply","additionalTextInputContainerProps","_extends2","editable","undefined","createElement","Fragment","View","onLayout","_ref2","newHeight","nativeEvent","layout","style","backgroundColor","borderColor","__self","__source","fileName","lineNumber","columnNumber","paddingVertical","quoted_message","borderBottomColor","marginHorizontal","AutoCompleteInput","cooldownActive","bottom","active","data","onSelect","queryText","AttachmentSelectionBar","areEqual","prevProps","nextProps","prevAdditionalTextInputProps","prevAsyncUploads","prevDisabled","prevEditing","prevFileUploads","prevGiphyActive","prevImageUploads","prevIsOnline","prevIsValidMessage","prevMentionedUsers","prevQuotedMessage","prevSending","prevShowMoreOptions","showMoreOptions","prevSuggestions","prevT","t","prevThread","prevThreadList","nextAdditionalTextInputProps","nextAsyncUploads","nextDisabled","nextEditing","nextFileUploads","nextGiphyActive","nextImageUploads","nextIsOnline","nextIsValidMessage","nextMentionedUsers","nextQuotedMessage","nextSending","nextShowMoreOptions","nextSuggestions","nextT","nextThread","nextThreadList","tEqual","additionalTextInputPropsEven","disabledEqual","editingEqual","imageUploadsEqual","giphyActiveEqual","quotedMessageEqual","sendingEqual","showMoreOptionsEqual","isOnlineEqual","isValidMessageEqual","asyncUploadsEqual","every","fileUploadsEqual","mentionedUsersEqual","suggestionsEqual","_ref3","index","threadEqual","text","reply_count","threadListEqual","MemoizedMessageInput","React","memo","MessageInput","_useChatContext","useChatContext","ownCapabilities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","_useChannelContext$di","_useMessageInputConte","useMessageInputContext","clearEditingState","clearQuotedMessageState","SendMessageDisallowedIndicator","setGiphyActive","setShowMoreOptions","_useMessagesContext","useMessagesContext","_useSuggestionsContex","useSuggestionsContext","AutoCompleteSuggestionHeader","AutoCompleteSuggestionItem","_useThreadContext","useThreadContext","_useTranslationContex","useTranslationContext","sendMessage","exports","displayName"],"sources":["MessageInput.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Alert, StyleSheet, View } from 'react-native';\n\nimport type { UserResponse } from 'stream-chat';\n\nimport { useCountdown } from './hooks/useCountdown';\n\nimport { ChatContextValue, useChatContext } from '../../contexts';\nimport { useAttachmentPickerContext } from '../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { useOwnCapabilitiesContext } from '../../contexts/ownCapabilitiesContext/OwnCapabilitiesContext';\nimport {\n  SuggestionsContextValue,\n  useSuggestionsContext,\n} from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\n\nimport type { Asset, DefaultStreamChatGenerics } from '../../types/types';\nimport { AttachmentSelectionBar } from '../AttachmentPicker/components/AttachmentSelectionBar';\nimport { AutoCompleteInput } from '../AutoCompleteInput/AutoCompleteInput';\n\nconst styles = StyleSheet.create({\n  attachmentSeparator: {\n    borderBottomWidth: 1,\n    marginBottom: 10,\n  },\n  autoCompleteInputContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  composerContainer: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  container: {\n    borderTopWidth: 1,\n    padding: 10,\n  },\n  inputBoxContainer: {\n    borderRadius: 20,\n    borderWidth: 1,\n    flex: 1,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    paddingBottom: 10,\n    paddingRight: 10,\n  },\n  replyContainer: { paddingBottom: 12, paddingHorizontal: 8 },\n  sendButtonContainer: { paddingBottom: 10, paddingLeft: 10 },\n  suggestionsListContainer: {\n    borderRadius: 10,\n    elevation: 3,\n    left: 8,\n    position: 'absolute',\n    right: 8,\n    shadowOffset: { height: 1, width: 0 },\n    shadowOpacity: 0.15,\n  },\n});\n\ntype MessageInputPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<ChatContextValue<StreamChatGenerics>, 'isOnline'> &\n  Pick<ChannelContextValue<StreamChatGenerics>, 'disabled' | 'members' | 'watchers'> &\n  Pick<\n    MessageInputContextValue<StreamChatGenerics>,\n    | 'additionalTextInputProps'\n    | 'asyncIds'\n    | 'asyncUploads'\n    | 'cooldownEndsAt'\n    | 'CooldownTimer'\n    | 'clearEditingState'\n    | 'clearQuotedMessageState'\n    | 'closeAttachmentPicker'\n    | 'editing'\n    | 'FileUploadPreview'\n    | 'fileUploads'\n    | 'giphyActive'\n    | 'ImageUploadPreview'\n    | 'imageUploads'\n    | 'Input'\n    | 'inputBoxRef'\n    | 'InputButtons'\n    | 'InputEditingStateHeader'\n    | 'InputGiphySearch'\n    | 'InputReplyStateHeader'\n    | 'isValidMessage'\n    | 'maxNumberOfFiles'\n    | 'mentionedUsers'\n    | 'numberOfUploads'\n    | 'quotedMessage'\n    | 'resetInput'\n    | 'SendButton'\n    | 'sending'\n    | 'sendMessageAsync'\n    | 'setShowMoreOptions'\n    | 'setGiphyActive'\n    | 'showMoreOptions'\n    | 'ShowThreadMessageInChannelButton'\n    | 'removeFile'\n    | 'removeImage'\n    | 'uploadNewFile'\n    | 'uploadNewImage'\n  > &\n  Pick<MessagesContextValue<StreamChatGenerics>, 'Reply'> &\n  Pick<\n    SuggestionsContextValue<StreamChatGenerics>,\n    | 'AutoCompleteSuggestionHeader'\n    | 'AutoCompleteSuggestionItem'\n    | 'AutoCompleteSuggestionList'\n    | 'suggestions'\n    | 'triggerType'\n  > &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'thread'> &\n  Pick<TranslationContextValue, 't'> & {\n    threadList?: boolean;\n  };\n\nconst MessageInputWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    AutoCompleteSuggestionList,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    disabled,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isOnline,\n    isValidMessage,\n    maxNumberOfFiles,\n    members,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    Reply,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    ShowThreadMessageInChannelButton,\n    suggestions,\n    thread,\n    threadList,\n    triggerType,\n    uploadNewFile,\n    uploadNewImage,\n    watchers,\n  } = props;\n\n  const [height, setHeight] = useState(0);\n\n  const {\n    theme: {\n      colors: { border, grey_whisper, white, white_smoke },\n      messageInput: {\n        attachmentSelectionBar,\n        autoCompleteInputContainer,\n        composerContainer,\n        container,\n        inputBoxContainer,\n        optionsContainer,\n        replyContainer,\n        sendButtonContainer,\n        suggestionsListContainer: { container: suggestionListContainer },\n      },\n    },\n  } = useTheme();\n\n  const {\n    attachmentPickerBottomSheetHeight,\n    attachmentSelectionBarHeight,\n    bottomInset,\n    selectedFiles,\n    selectedImages,\n    selectedPicker,\n    setMaxNumberOfFiles,\n    setSelectedFiles,\n    setSelectedImages,\n  } = useAttachmentPickerContext();\n\n  const { seconds: cooldownRemainingSeconds } = useCountdown(cooldownEndsAt);\n\n  /**\n   * Mounting and un-mounting logic are un-related in following useEffect.\n   * While mounting we want to pass maxNumberOfFiles (which is prop on Channel component)\n   * to AttachmentPicker (on OverlayProvider)\n   *\n   * While un-mounting, we want to close the picker e.g., while navigating away.\n   */\n  useEffect(() => {\n    setMaxNumberOfFiles(maxNumberOfFiles ?? 10);\n\n    return closeAttachmentPicker;\n  }, []);\n\n  const [hasResetImages, setHasResetImages] = useState(false);\n  const [hasResetFiles, setHasResetFiles] = useState(false);\n  const selectedImagesLength = hasResetImages ? selectedImages.length : 0;\n  const imageUploadsLength = hasResetImages ? imageUploads.length : 0;\n  const selectedFilesLength = hasResetFiles ? selectedFiles.length : 0;\n  const fileUploadsLength = hasResetFiles ? fileUploads.length : 0;\n  const imagesForInput = (!!thread && !!threadList) || (!thread && !threadList);\n\n  useEffect(() => {\n    setSelectedImages([]);\n    if (imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n    return () => setSelectedImages([]);\n  }, []);\n\n  useEffect(() => {\n    setSelectedFiles([]);\n    if (fileUploads.length) {\n      fileUploads.forEach((file) => removeFile(file.id));\n    }\n    return () => setSelectedFiles([]);\n  }, []);\n\n  useEffect(() => {\n    if (hasResetImages === false && imageUploadsLength === 0 && selectedImagesLength === 0) {\n      setHasResetImages(true);\n    }\n  }, [imageUploadsLength, selectedImagesLength]);\n\n  useEffect(() => {\n    if (hasResetFiles === false && fileUploadsLength === 0 && selectedFilesLength === 0) {\n      setHasResetFiles(true);\n    }\n  }, [fileUploadsLength, selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput === false && imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n  }, [imagesForInput]);\n\n  const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n  const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;\n\n  const uploadImagesHandler = () => {\n    const imageToUpload = selectedImages.find((selectedImage) => {\n      const uploadedImage = imageUploads.find(\n        (imageUpload) =>\n          imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n      );\n      return !uploadedImage;\n    });\n    // Check if the file size of the image exceeds the threshold of 100MB\n    if (\n      imageToUpload &&\n      Number(imageToUpload.fileSize) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n    ) {\n      Alert.alert(\n        `Maximum file size upload limit reached, please upload an image below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n      );\n      setSelectedImages(\n        selectedImages.filter((selectedImage) => selectedImage.uri !== imageToUpload.uri),\n      );\n    } else {\n      if (imageToUpload) uploadNewImage(imageToUpload);\n    }\n  };\n\n  const removeImagesHandler = () => {\n    const imagesToRemove = imageUploads.filter(\n      (imageUpload) =>\n        !selectedImages.find(\n          (selectedImage) =>\n            selectedImage.uri === imageUpload.file.uri || selectedImage.uri === imageUpload.url,\n        ),\n    );\n    imagesToRemove.forEach((image) => removeImage(image.id));\n  };\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (selectedImagesLength > imageUploadsLength) {\n        /** User selected an image in bottom sheet attachment picker */\n        uploadImagesHandler();\n      } else {\n        /** User de-selected an image in bottom sheet attachment picker */\n        removeImagesHandler();\n      }\n    }\n  }, [selectedImagesLength]);\n\n  useEffect(() => {\n    if (selectedFilesLength > fileUploadsLength) {\n      /** User selected a video in bottom sheet attachment picker */\n      const fileToUpload = selectedFiles.find((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return !uploadedFile;\n      });\n      // Check if the file size exceeds the threshold of 100MB\n      if (\n        fileToUpload &&\n        Number(fileToUpload.size) / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB\n      ) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload a file below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n        setSelectedFiles(\n          selectedFiles.filter((selectedFile) => selectedFile.uri !== fileToUpload.uri),\n        );\n      } else {\n        if (fileToUpload) uploadNewFile(fileToUpload);\n      }\n    } else {\n      /** User de-selected a video in bottom sheet attachment picker */\n      const filesToRemove = fileUploads.filter(\n        (fileUpload) =>\n          !selectedFiles.find(\n            (selectedFile) =>\n              selectedFile.uri === fileUpload.file.uri || selectedFile.uri === fileUpload.url,\n          ),\n      );\n      filesToRemove.forEach((file) => removeFile(file.id));\n    }\n  }, [selectedFilesLength]);\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (imageUploadsLength < selectedImagesLength) {\n        /** User removed some image from seleted images within ImageUploadPreview. */\n        const updatedSelectedImages = selectedImages.filter((selectedImage) => {\n          const uploadedImage = imageUploads.find(\n            (imageUpload) =>\n              imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n          );\n          return uploadedImage;\n        });\n        setSelectedImages(updatedSelectedImages);\n      } else if (imageUploadsLength > selectedImagesLength) {\n        /**\n         * User is editing some message which contains image attachments OR\n         * image attachment is added from custom image picker (other than the default bottomsheet image picker)\n         * using `uploadNewImage` function from `MessageInputContext`.\n         **/\n        setSelectedImages(\n          imageUploads\n            .map((imageUpload) => ({\n              height: imageUpload.file.height,\n              source: imageUpload.file.source,\n              uri: imageUpload.url || imageUpload.file.uri,\n              width: imageUpload.file.width,\n            }))\n            .filter(Boolean) as Asset[],\n        );\n      }\n    }\n  }, [imageUploadsLength]);\n\n  useEffect(() => {\n    if (fileUploadsLength < selectedFilesLength) {\n      /** User removed some video from seleted files within ImageUploadPreview. */\n      const updatedSelectedFiles = selectedFiles.filter((selectedFile) => {\n        const uploadedFile = fileUploads.find(\n          (fileUpload) =>\n            fileUpload.file.uri === selectedFile.uri || fileUpload.url === selectedFile.uri,\n        );\n        return uploadedFile;\n      });\n      setSelectedFiles(updatedSelectedFiles);\n    } else if (fileUploadsLength > selectedFilesLength) {\n      /**\n       * User is editing some message which contains video attachments OR\n       * video attachment is added from custom image picker (other than the default bottom-sheet image picker)\n       * using `uploadNewFile` function from `MessageInputContext`.\n       **/\n      setSelectedFiles(\n        fileUploads.map((fileUpload) => ({\n          duration: fileUpload.file.duration,\n          mimeType: fileUpload.file.mimeType,\n          name: fileUpload.file.name,\n          size: fileUpload.file.size,\n          uri: fileUpload.file.uri,\n        })),\n      );\n    }\n  }, [fileUploadsLength]);\n\n  const editingExists = !!editing;\n  useEffect(() => {\n    if (editing && inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n\n    /**\n     * Make sure to test `initialValue` functionality, if you are modifying following condition.\n     *\n     * We have the following condition, to make sure - when user comes out of \"editing message\" state,\n     * we wipe out all the state around message input such as text, mentioned users, image uploads etc.\n     * But it also means, this condition will be fired up on first render, which may result in clearing\n     * the initial value set on input box, through the prop - `initialValue`.\n     * This prop generally gets used for the case of draft message functionality.\n     */\n    if (\n      !editing &&\n      (giphyActive ||\n        fileUploads.length > 0 ||\n        mentionedUsers.length > 0 ||\n        imageUploads.length > 0 ||\n        numberOfUploads > 0)\n    ) {\n      resetInput();\n    }\n  }, [editingExists]);\n\n  const asyncIdsString = asyncIds.join();\n  const asyncUploadsString = Object.values(asyncUploads)\n    .map(({ state, url }) => `${state}${url}`)\n    .join();\n  useEffect(() => {\n    if (Object.keys(asyncUploads).length) {\n      /**\n       * When successful image upload response occurs after hitting send,\n       * send a follow up message with the image\n       */\n      sending.current = true;\n      asyncIds.forEach((id) => sendMessageAsync(id));\n      sending.current = false;\n    }\n  }, [asyncIdsString, asyncUploadsString, sendMessageAsync]);\n\n  const getMembers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (members && Object.values(members).length) {\n      Object.values(members).forEach((member) => {\n        if (member.user) {\n          result.push(member.user);\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const getUsers = () => {\n    const users = [...getMembers(), ...getWatchers()];\n\n    // make sure we don't list users twice\n    const uniqueUsers: { [key: string]: UserResponse<StreamChatGenerics> } = {};\n    for (const user of users) {\n      if (user && !uniqueUsers[user.id]) {\n        uniqueUsers[user.id] = user;\n      }\n    }\n    const usersArray = Object.values(uniqueUsers);\n\n    return usersArray;\n  };\n\n  const getWatchers = () => {\n    const result: UserResponse<StreamChatGenerics>[] = [];\n    if (watchers && Object.values(watchers).length) {\n      result.push(...Object.values(watchers));\n    }\n\n    return result;\n  };\n\n  const additionalTextInputContainerProps = {\n    editable: disabled ? false : undefined,\n    ...additionalTextInputProps,\n  };\n\n  return (\n    <>\n      <View\n        onLayout={({\n          nativeEvent: {\n            layout: { height: newHeight },\n          },\n        }) => setHeight(newHeight)}\n        style={[styles.container, { backgroundColor: white, borderColor: border }, container]}\n      >\n        {editing && <InputEditingStateHeader />}\n        {quotedMessage && <InputReplyStateHeader />}\n        <View style={[styles.composerContainer, composerContainer]}>\n          {Input ? (\n            <Input\n              additionalTextInputProps={additionalTextInputContainerProps}\n              getUsers={getUsers}\n            />\n          ) : (\n            <>\n              <View style={[styles.optionsContainer, optionsContainer]}>\n                {InputButtons && <InputButtons />}\n              </View>\n              <View\n                style={[\n                  styles.inputBoxContainer,\n                  {\n                    borderColor: grey_whisper,\n                    paddingVertical: giphyActive ? 8 : 12,\n                  },\n                  inputBoxContainer,\n                ]}\n              >\n                {((typeof editing !== 'boolean' && editing?.quoted_message) || quotedMessage) && (\n                  <View style={[styles.replyContainer, replyContainer]}>\n                    <Reply />\n                  </View>\n                )}\n                {imageUploads.length ? <ImageUploadPreview /> : null}\n                {imageUploads.length && fileUploads.length ? (\n                  <View\n                    style={[\n                      styles.attachmentSeparator,\n                      {\n                        borderBottomColor: grey_whisper,\n                        marginHorizontal: giphyActive ? 8 : 12,\n                      },\n                    ]}\n                  />\n                ) : null}\n                {fileUploads.length ? <FileUploadPreview /> : null}\n                {giphyActive ? (\n                  <InputGiphySearch disabled={!isOnline} />\n                ) : (\n                  <View style={[styles.autoCompleteInputContainer, autoCompleteInputContainer]}>\n                    <AutoCompleteInput<StreamChatGenerics>\n                      additionalTextInputProps={additionalTextInputProps}\n                      cooldownActive={!!cooldownRemainingSeconds}\n                    />\n                  </View>\n                )}\n              </View>\n              <View style={[styles.sendButtonContainer, sendButtonContainer]}>\n                {cooldownRemainingSeconds ? (\n                  <CooldownTimer seconds={cooldownRemainingSeconds} />\n                ) : (\n                  <SendButton\n                    disabled={\n                      disabled || sending.current || !isValidMessage() || (giphyActive && !isOnline)\n                    }\n                  />\n                )}\n              </View>\n            </>\n          )}\n        </View>\n        <ShowThreadMessageInChannelButton threadList={threadList} />\n      </View>\n\n      {triggerType && suggestions ? (\n        <View\n          style={[\n            suggestionListContainer,\n            styles.suggestionsListContainer,\n            { backgroundColor: white, bottom: height },\n          ]}\n        >\n          <AutoCompleteSuggestionList\n            active={!!suggestions}\n            data={suggestions.data}\n            onSelect={suggestions.onSelect}\n            queryText={suggestions.queryText}\n            triggerType={triggerType}\n          />\n        </View>\n      ) : null}\n      {selectedPicker && (\n        <View\n          style={[\n            {\n              backgroundColor: white_smoke,\n              height:\n                (attachmentPickerBottomSheetHeight\n                  ? attachmentPickerBottomSheetHeight + (attachmentSelectionBarHeight ?? 52)\n                  : 360) - bottomInset,\n            },\n            attachmentSelectionBar,\n          ]}\n        >\n          <AttachmentSelectionBar />\n        </View>\n      )}\n    </>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageInputPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageInputPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    additionalTextInputProps: prevAdditionalTextInputProps,\n    asyncUploads: prevAsyncUploads,\n    disabled: prevDisabled,\n    editing: prevEditing,\n    fileUploads: prevFileUploads,\n    giphyActive: prevGiphyActive,\n    imageUploads: prevImageUploads,\n    isOnline: prevIsOnline,\n    isValidMessage: prevIsValidMessage,\n    mentionedUsers: prevMentionedUsers,\n    quotedMessage: prevQuotedMessage,\n    sending: prevSending,\n    showMoreOptions: prevShowMoreOptions,\n    suggestions: prevSuggestions,\n    t: prevT,\n    thread: prevThread,\n    threadList: prevThreadList,\n  } = prevProps;\n  const {\n    additionalTextInputProps: nextAdditionalTextInputProps,\n    asyncUploads: nextAsyncUploads,\n    disabled: nextDisabled,\n    editing: nextEditing,\n    fileUploads: nextFileUploads,\n    giphyActive: nextGiphyActive,\n    imageUploads: nextImageUploads,\n    isOnline: nextIsOnline,\n    isValidMessage: nextIsValidMessage,\n    mentionedUsers: nextMentionedUsers,\n    quotedMessage: nextQuotedMessage,\n    sending: nextSending,\n    showMoreOptions: nextShowMoreOptions,\n    suggestions: nextSuggestions,\n    t: nextT,\n    thread: nextThread,\n    threadList: nextThreadList,\n  } = nextProps;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const additionalTextInputPropsEven =\n    prevAdditionalTextInputProps === nextAdditionalTextInputProps;\n  if (!additionalTextInputPropsEven) return false;\n\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  const editingEqual = !!prevEditing === !!nextEditing;\n  if (!editingEqual) return false;\n\n  const imageUploadsEqual = prevImageUploads.length === nextImageUploads.length;\n  if (!imageUploadsEqual) return false;\n\n  const giphyActiveEqual = prevGiphyActive === nextGiphyActive;\n  if (!giphyActiveEqual) return false;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n  if (!quotedMessageEqual) return false;\n\n  const sendingEqual = prevSending.current === nextSending.current;\n  if (!sendingEqual) return false;\n\n  const showMoreOptionsEqual = prevShowMoreOptions === nextShowMoreOptions;\n  if (!showMoreOptionsEqual) return false;\n\n  const isOnlineEqual = prevIsOnline === nextIsOnline;\n  if (!isOnlineEqual) return false;\n\n  const isValidMessageEqual = prevIsValidMessage() === nextIsValidMessage();\n  if (!isValidMessageEqual) return false;\n\n  const asyncUploadsEqual = Object.keys(prevAsyncUploads).every(\n    (key) =>\n      prevAsyncUploads[key].state === nextAsyncUploads[key].state &&\n      prevAsyncUploads[key].url === nextAsyncUploads[key].url,\n  );\n  if (!asyncUploadsEqual) return false;\n\n  const fileUploadsEqual = prevFileUploads.length === nextFileUploads.length;\n  if (!fileUploadsEqual) return false;\n\n  const mentionedUsersEqual = prevMentionedUsers.length === nextMentionedUsers.length;\n  if (!mentionedUsersEqual) return false;\n\n  const suggestionsEqual =\n    !!prevSuggestions?.data && !!nextSuggestions?.data\n      ? prevSuggestions.data.length === nextSuggestions.data.length &&\n        prevSuggestions.data.every(({ name }, index) => name === nextSuggestions.data[index].name)\n      : !!prevSuggestions === !!nextSuggestions;\n  if (!suggestionsEqual) return false;\n\n  const threadEqual =\n    prevThread?.id === nextThread?.id &&\n    prevThread?.text === nextThread?.text &&\n    prevThread?.reply_count === nextThread?.reply_count;\n  if (!threadEqual) return false;\n\n  const threadListEqual = prevThreadList === nextThreadList;\n  if (!threadListEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageInput = React.memo(\n  MessageInputWithContext,\n  areEqual,\n) as typeof MessageInputWithContext;\n\nexport type MessageInputProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageInputPropsWithContext<StreamChatGenerics>>;\n\n/**\n * UI Component for message input\n * It's a consumer of\n * [Channel Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/channel-context/),\n * [Chat Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/chat-context/),\n * [MessageInput Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/message-input-context/),\n * [Suggestions Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/suggestions-context/), and\n * [Translation Context](https://getstream.io/chat/docs/sdk/reactnative/contexts/translation-context/)\n */\nexport const MessageInput = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageInputProps<StreamChatGenerics>,\n) => {\n  const { isOnline } = useChatContext();\n  const ownCapabilities = useOwnCapabilitiesContext();\n\n  const { disabled = false, members, watchers } = useChannelContext<StreamChatGenerics>();\n\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    clearEditingState,\n    clearQuotedMessageState,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    CooldownTimer,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    InputEditingStateHeader,\n    InputGiphySearch,\n    InputReplyStateHeader,\n    isValidMessage,\n    maxNumberOfFiles,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeFile,\n    removeImage,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    SendMessageDisallowedIndicator,\n    setGiphyActive,\n    setShowMoreOptions,\n    showMoreOptions,\n    ShowThreadMessageInChannelButton,\n    uploadNewFile,\n    uploadNewImage,\n  } = useMessageInputContext<StreamChatGenerics>();\n\n  const { Reply } = useMessagesContext<StreamChatGenerics>();\n\n  const {\n    AutoCompleteSuggestionHeader,\n    AutoCompleteSuggestionItem,\n    AutoCompleteSuggestionList,\n    suggestions,\n    triggerType,\n  } = useSuggestionsContext<StreamChatGenerics>();\n\n  const { thread } = useThreadContext<StreamChatGenerics>();\n\n  const { t } = useTranslationContext();\n\n  if (!ownCapabilities.sendMessage && SendMessageDisallowedIndicator) {\n    return <SendMessageDisallowedIndicator />;\n  }\n\n  return (\n    <MemoizedMessageInput\n      {...{\n        additionalTextInputProps,\n        asyncIds,\n        asyncUploads,\n        AutoCompleteSuggestionHeader,\n        AutoCompleteSuggestionItem,\n        AutoCompleteSuggestionList,\n        clearEditingState,\n        clearQuotedMessageState,\n        closeAttachmentPicker,\n        cooldownEndsAt,\n        CooldownTimer,\n        disabled,\n        editing,\n        FileUploadPreview,\n        fileUploads,\n        giphyActive,\n        ImageUploadPreview,\n        imageUploads,\n        Input,\n        inputBoxRef,\n        InputButtons,\n        InputEditingStateHeader,\n        InputGiphySearch,\n        InputReplyStateHeader,\n        isOnline,\n        isValidMessage,\n        maxNumberOfFiles,\n        members,\n        mentionedUsers,\n        numberOfUploads,\n        quotedMessage,\n        removeFile,\n        removeImage,\n        Reply,\n        resetInput,\n        SendButton,\n        sending,\n        sendMessageAsync,\n        setGiphyActive,\n        setShowMoreOptions,\n        showMoreOptions,\n        ShowThreadMessageInChannelButton,\n        suggestions,\n        t,\n        thread,\n        triggerType,\n        uploadNewFile,\n        uploadNewImage,\n        watchers,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageInput.displayName = 'MessageInput{messageInput}';\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js b/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js
index 7edc794..be14c38 100644
--- a/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js
+++ b/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js
@@ -231,7 +231,7 @@ var MessageInputProvider = function MessageInputProvider(_ref) {
           case 8:
             result = _context.sent;
             MEGA_BYTES_TO_BYTES = 1024 * 1024;
-            MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;
+            MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;
             if (!result.cancelled && result.assets) {
               totalFileSize = result.assets.reduce(function (acc, asset) {
                 return acc + Number(asset.size);
diff --git a/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js.map b/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js.map
index 597115c..a43ce65 100644
--- a/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js.map
+++ b/node_modules/stream-chat-react-native-core/lib/module/contexts/messageInputContext/MessageInputContext.js.map
@@ -1 +1 @@
-{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_uniq","_interopRequireDefault","_mimeTypes","_streamChat","_useCreateMessageInputContext","_useMessageDetailsForState","_useCooldown2","_native","_removeReservedFields","_utils","_AttachmentPickerContext","_ChannelContext","_ChatContext","_OwnCapabilitiesContext","_ThreadContext","_TranslationContext","_defaultBaseContextValue","_getDisplayName","_isTestEnvironment","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof3","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","MessageInputContext","React","createContext","DEFAULT_BASE_CONTEXT_VALUE","exports","MessageInputProvider","_ref","_getFileUploadConfig","_getFileUploadConfig2","_getImageUploadConfig","_getImageUploadConfig2","children","_useAttachmentPickerC","useAttachmentPickerContext","closePicker","openPicker","selectedPicker","setSelectedPicker","_useChatContext","useChatContext","appSettings","client","enableOfflineSupport","getFileUploadConfig","_appSettings$app","fileConfig","app","file_upload_config","undefined","blockedFileExtensionTypes","blocked_file_extensions","blockedFileMimeTypes","blocked_mime_types","getImageUploadConfig","_appSettings$app2","imageConfig","image_upload_config","blockedImageExtensionTypes","blockedImageMimeTypes","channelCapabities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","channel","giphyEnabled","_useThreadContext","useThreadContext","thread","_useTranslationContex","useTranslationContext","t","inputBoxRef","useRef","sending","_useState","useState","_useState2","_slicedToArray2","asyncIds","setAsyncIds","_useState3","_useState4","asyncUploads","setAsyncUploads","_useState5","_useState6","giphyActive","setGiphyActive","_useState7","_useState8","sendThreadMessageInChannel","setSendThreadMessageInChannel","editing","hasFilePicker","hasImagePicker","initialValue","_useMessageDetailsFor","useMessageDetailsForState","fileUploads","imageUploads","mentionedUsers","numberOfUploads","setFileUploads","setImageUploads","setMentionedUsers","setNumberOfUploads","setShowMoreOptions","setText","showMoreOptions","text","_useCooldown","useCooldown","cooldownEndsAt","endsAt","startCooldown","start","threadId","id","useEffect","appendText","newText","prevText","isValidMessage","trim","imagesAndFiles","concat","_toConsumableArray2","_iterator","_step","file","state","FileState","NOT_SUPPORTED","_iterator2","_step2","UPLOAD_FAILED","UPLOADING","onChange","current","sendTypingEvents","logChatPromiseExecution","keystroke","onChangeText","openCommandsPicker","focus","openMentionsPicker","openAttachmentPicker","Keyboard","dismiss","pickFile","closeAttachmentPicker","toggleAttachmentPicker","onSelectItem","item","prevMentionedUsers","_ref2","_asyncToGenerator2","_regenerator","mark","_callee","result","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","totalFileSize","wrap","_callee$","_context","prev","pickDocument","console","log","abrupt","maxNumberOfFiles","Alert","alert","sent","cancelled","assets","reduce","acc","asset","Number","size","forEach","uploadNewFile","stop","apply","arguments","removeFile","some","prevFileUploads","filter","prevNumberOfUploads","removeImage","image","prevImageUploads","resetInput","pendingAttachments","mapImageUploadToAttachment","mime_type","lookup","filename","fallback","image_url","url","original_height","height","original_width","width","originalFile","type","mapFileUploadToAttachment","_file$file$mimeType","_file$file$mimeType2","_file$file$mimeType3","mimeType","startsWith","asset_url","uri","duration","file_size","title","thumb_url","sendMessage","_ref3","_callee3","attachments","_loop","_iterator3","_step3","_image","_ret","_iterator4","_step4","_file3","updatedMessage","updateMessagePromise","_callee3$","_context3","sendLinks","match","urlRegex","clear","_callee2","_callee2$","_context2","v","push","sendImageAsync","prevAsyncIds","UPLOADED","FINISHED","delegateYield","t0","_typeof2","isEditingBoolean","_extends2","mentioned_users","quoted_message","clearEditingState","editMessage","removeReservedFields","then","uniq","parent_id","quoted_message_id","quotedMessage","show_in_channel","clearQuotedMessageState","_error","setQuotedMessageState","sendMessageAsync","splice","indexOf","prevAsyncUploads","setInputBoxRef","ref","setInputRef","getTriggerSettings","triggerSettings","autoCompleteTriggerSettings","onMentionSelectItem","ACITriggerSettings","updateMessage","_ref4","_callee4","_callee4$","_context4","regexCondition","getUploadSetStateAction","fileState","extraData","prevUploads","map","prevUpload","handleFileOrImageUploadError","error","isImageError","Error","message","uploadFile","_ref6","_callee5","_ref5","newFile","response","_callee5$","_context5","doDocUploadRequest","sendFile","_x","uploadImage","_ref8","_callee6","_ref7","newImage","_ref9","_file$filename","compressedUri","contentType","newImageUploads","_callee6$","_context6","source","compressImageQuality","compressImage","replace","doImageUploadRequest","sendImage","res","includes","keys","_x2","_ref10","_callee7","isBlockedFileExtension","isBlockedFileMimeType","_callee7$","_context7","generateRandomId","fileExtensionType","_file$name","_file$name2","paused","progress","Promise","all","_x3","uploadNewImage","_ref11","_callee8","isBlockedImageMimeType","isBlockedImageExtension","imageState","_callee8$","_context8","_image$uri","imageExtensionType","_image$uri2","_x4","messageInputContext","useCreateMessageInputContext","openFilePicker","createElement","Provider","__self","__source","fileName","lineNumber","columnNumber","useMessageInputContext","contextValue","useContext","isTestEnvironment","withMessageInputContext","Component","WithMessageInputContextComponent","props","displayName","getDisplayName"],"sources":["MessageInputContext.tsx"],"sourcesContent":["import type { LegacyRef } from 'react';\nimport React, { PropsWithChildren, useContext, useEffect, useRef, useState } from 'react';\nimport type { TextInput, TextInputProps } from 'react-native';\nimport { Alert, Keyboard } from 'react-native';\n\nimport uniq from 'lodash/uniq';\nimport { lookup } from 'mime-types';\nimport {\n  Attachment,\n  logChatPromiseExecution,\n  SendFileAPIResponse,\n  StreamChat,\n  Message as StreamMessage,\n  UserFilters,\n  UserOptions,\n  UserResponse,\n  UserSort,\n} from 'stream-chat';\n\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { isEditingBoolean, useMessageDetailsForState } from './hooks/useMessageDetailsForState';\n\nimport type { AttachButtonProps } from '../../components/MessageInput/AttachButton';\nimport type { CommandsButtonProps } from '../../components/MessageInput/CommandsButton';\nimport type { InputEditingStateHeaderProps } from '../../components/MessageInput/components/InputEditingStateHeader';\nimport type { InputGiphySearchProps } from '../../components/MessageInput/components/InputGiphySearch';\nimport type { InputReplyStateHeaderProps } from '../../components/MessageInput/components/InputReplyStateHeader';\nimport type { CooldownTimerProps } from '../../components/MessageInput/CooldownTimer';\nimport type { FileUploadPreviewProps } from '../../components/MessageInput/FileUploadPreview';\nimport { useCooldown } from '../../components/MessageInput/hooks/useCooldown';\nimport type { ImageUploadPreviewProps } from '../../components/MessageInput/ImageUploadPreview';\nimport type { InputButtonsProps } from '../../components/MessageInput/InputButtons';\nimport type { MessageInputProps } from '../../components/MessageInput/MessageInput';\nimport type { MoreOptionsButtonProps } from '../../components/MessageInput/MoreOptionsButton';\nimport type { SendButtonProps } from '../../components/MessageInput/SendButton';\nimport type { UploadProgressIndicatorProps } from '../../components/MessageInput/UploadProgressIndicator';\nimport type { MessageType } from '../../components/MessageList/hooks/useMessageList';\nimport { compressImage, pickDocument } from '../../native';\nimport type { Asset, DefaultStreamChatGenerics, File, UnknownType } from '../../types/types';\nimport { removeReservedFields } from '../../utils/removeReservedFields';\nimport {\n  ACITriggerSettings,\n  ACITriggerSettingsParams,\n  FileState,\n  FileStateValue,\n  generateRandomId,\n  TriggerSettings,\n  urlRegex,\n} from '../../utils/utils';\nimport { useAttachmentPickerContext } from '../attachmentPickerContext/AttachmentPickerContext';\nimport { ChannelContextValue, useChannelContext } from '../channelContext/ChannelContext';\nimport { useChatContext } from '../chatContext/ChatContext';\nimport { useOwnCapabilitiesContext } from '../ownCapabilitiesContext/OwnCapabilitiesContext';\nimport { useThreadContext } from '../threadContext/ThreadContext';\nimport { useTranslationContext } from '../translationContext/TranslationContext';\nimport { DEFAULT_BASE_CONTEXT_VALUE } from '../utils/defaultBaseContextValue';\n\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { isTestEnvironment } from '../utils/isTestEnvironment';\n\nexport type FileUpload = {\n  file: File;\n  id: string;\n  state: FileStateValue;\n  duration?: number;\n  paused?: boolean;\n  progress?: number;\n  thumb_url?: string;\n  url?: string;\n};\n\nexport type ImageUpload = {\n  file: Partial<Asset> & {\n    name?: string;\n  };\n  id: string;\n  state: FileStateValue;\n  height?: number;\n  url?: string;\n  width?: number;\n};\n\nexport type MentionAllAppUsersQuery<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  filters?: UserFilters<StreamChatGenerics>;\n  options?: UserOptions;\n  sort?: UserSort<StreamChatGenerics>;\n};\n\nexport type LocalMessageInputContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  appendText: (newText: string) => void;\n  asyncIds: string[];\n  asyncUploads: {\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  };\n  closeAttachmentPicker: () => void;\n  /** The time at which the active cooldown will end */\n  cooldownEndsAt: Date;\n  /**\n   * An array of file objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  fileUploads: FileUpload[];\n  giphyActive: boolean;\n  /**\n   * An array of image objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  imageUploads: ImageUpload[];\n  inputBoxRef: React.MutableRefObject<TextInput | null>;\n  isValidMessage: () => boolean;\n  mentionedUsers: string[];\n  numberOfUploads: number;\n  onChange: (newText: string) => void;\n  onSelectItem: (item: UserResponse<StreamChatGenerics>) => void;\n  openAttachmentPicker: () => void;\n  openCommandsPicker: () => void;\n  openFilePicker: () => void;\n  openMentionsPicker: () => void;\n  pickFile: () => Promise<void>;\n  /**\n   * Function for removing a file from the upload preview\n   *\n   * @param id string ID of file in `fileUploads` object in state of MessageInput\n   */\n  removeFile: (id: string) => void;\n  /**\n   * Function for removing an image from the upload preview\n   *\n   * @param id string ID of image in `imageUploads` object in state of MessageInput\n   */\n  removeImage: (id: string) => void;\n  resetInput: (pendingAttachments?: Attachment<StreamChatGenerics>[]) => void;\n  selectedPicker: string | undefined;\n  sending: React.MutableRefObject<boolean>;\n  sendMessage: () => Promise<void>;\n  sendMessageAsync: (id: string) => void;\n  sendThreadMessageInChannel: boolean;\n  setAsyncIds: React.Dispatch<React.SetStateAction<string[]>>;\n  setAsyncUploads: React.Dispatch<\n    React.SetStateAction<{\n      [key: string]: {\n        state: string;\n        url: string;\n      };\n    }>\n  >;\n  setFileUploads: React.Dispatch<React.SetStateAction<FileUpload[]>>;\n  setGiphyActive: React.Dispatch<React.SetStateAction<boolean>>;\n  setImageUploads: React.Dispatch<React.SetStateAction<ImageUpload[]>>;\n  /**\n   * Ref callback to set reference on input box\n   */\n  setInputBoxRef: LegacyRef<TextInput> | undefined;\n  setMentionedUsers: React.Dispatch<React.SetStateAction<string[]>>;\n  setNumberOfUploads: React.Dispatch<React.SetStateAction<number>>;\n  setSendThreadMessageInChannel: React.Dispatch<React.SetStateAction<boolean>>;\n  setShowMoreOptions: React.Dispatch<React.SetStateAction<boolean>>;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  showMoreOptions: boolean;\n  /**\n   * Text value of the TextInput\n   */\n  text: string;\n  toggleAttachmentPicker: () => void;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  triggerSettings: TriggerSettings<StreamChatGenerics>;\n  updateMessage: () => Promise<void>;\n  /** Function for attempting to upload a file */\n  uploadFile: ({ newFile }: { newFile: FileUpload }) => Promise<void>;\n  /** Function for attempting to upload an image */\n  uploadImage: ({ newImage }: { newImage: ImageUpload }) => Promise<void>;\n  uploadNewFile: (file: File) => Promise<void>;\n  uploadNewImage: (image: Partial<Asset>) => Promise<void>;\n};\n\nexport type InputMessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  /**\n   * Custom UI component for attach button.\n   *\n   * Defaults to and accepts same props as: [AttachButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/attach-button/)\n   */\n  AttachButton: React.ComponentType<AttachButtonProps<StreamChatGenerics>>;\n\n  clearEditingState: () => void;\n  clearQuotedMessageState: () => void;\n  /**\n   * Custom UI component for commands button.\n   *\n   * Defaults to and accepts same props as: [CommandsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/commands-button/)\n   */\n  CommandsButton: React.ComponentType<CommandsButtonProps<StreamChatGenerics>>;\n  /**\n   * Custom UI component to display the remaining cooldown a user will have to wait before\n   * being allowed to send another message. This component is displayed in place of the\n   * send button for the MessageInput component.\n   *\n   * **default** [CooldownTimer](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/CooldownTimer.tsx)\n   */\n  CooldownTimer: React.ComponentType<CooldownTimerProps>;\n  editing: boolean | MessageType<StreamChatGenerics>;\n  editMessage: StreamChat<StreamChatGenerics>['updateMessage'];\n\n  /**\n   * Custom UI component for FileUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/FileUploadPreview.tsx\n   */\n  FileUploadPreview: React.ComponentType<FileUploadPreviewProps<StreamChatGenerics>>;\n\n  /** When false, CommandsButton will be hidden */\n  hasCommands: boolean;\n  /** When false, FileSelectorIcon will be hidden */\n  hasFilePicker: boolean;\n  /** When false, ImageSelectorIcon will be hidden */\n  hasImagePicker: boolean;\n  /**\n   * Custom UI component for ImageUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/ImageUploadPreview.tsx\n   */\n  ImageUploadPreview: React.ComponentType<ImageUploadPreviewProps<StreamChatGenerics>>;\n  InputEditingStateHeader: React.ComponentType<InputEditingStateHeaderProps<StreamChatGenerics>>;\n  InputGiphySearch: React.ComponentType<InputGiphySearchProps<StreamChatGenerics>>;\n  InputReplyStateHeader: React.ComponentType<InputReplyStateHeaderProps<StreamChatGenerics>>;\n  /** Limit on allowed number of files to attach at a time. */\n  maxNumberOfFiles: number;\n  /**\n   * Custom UI component for more options button.\n   *\n   * Defaults to and accepts same props as: [MoreOptionsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/more-options-button/)\n   */\n  MoreOptionsButton: React.ComponentType<MoreOptionsButtonProps<StreamChatGenerics>>;\n  /** Limit on the number of lines in the text input before scrolling */\n  numberOfLines: number;\n  quotedMessage: boolean | MessageType<StreamChatGenerics>;\n  /**\n   * Custom UI component for send button.\n   *\n   * Defaults to and accepts same props as: [SendButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/send-button/)\n   */\n  SendButton: React.ComponentType<SendButtonProps<StreamChatGenerics>>;\n  sendImageAsync: boolean;\n  sendMessage: (message: Partial<StreamMessage<StreamChatGenerics>>) => Promise<void>;\n  setQuotedMessageState: (message: MessageType<StreamChatGenerics>) => void;\n  /**\n   * Custom UI component to render checkbox with text (\"Also send to channel\") in Thread's input box.\n   * When ticked, message will also be sent in parent channel.\n   */\n  ShowThreadMessageInChannelButton: React.ComponentType<{\n    threadList?: boolean;\n  }>;\n  /**\n   * Custom UI component to render upload progress indicator on attachment preview.\n   *\n   * **Default** [UploadProgressIndicator](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/UploadProgressIndicator.tsx)\n   */\n  UploadProgressIndicator: React.ComponentType<UploadProgressIndicatorProps>;\n  /**\n   * Additional props for underlying TextInput component. These props will be forwarded as it is to TextInput component.\n   *\n   * @see See https://reactnative.dev/docs/textinput#reference\n   */\n  additionalTextInputProps?: TextInputProps;\n  /** Max number of suggestions to display in autocomplete list. Defaults to 10. */\n  autoCompleteSuggestionsLimit?: number;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  autoCompleteTriggerSettings?: (\n    settings: ACITriggerSettingsParams<StreamChatGenerics>,\n  ) => TriggerSettings<StreamChatGenerics>;\n  /**\n   * Compress image with quality (from 0 to 1, where 1 is best quality).\n   * On iOS, values larger than 0.8 don't produce a noticeable quality increase in most images,\n   * while a value of 0.8 will reduce the file size by about half or less compared to a value of 1.\n   * Image picker defaults to 0.8 for iOS and 1 for Android\n   */\n  compressImageQuality?: number;\n  /**\n   * Override file upload request\n   *\n   * @param file    File object - { uri: '', name: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doDocUploadRequest?: (\n    file: File,\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n  /**\n   * Override image upload request\n   *\n   * @param file    File object - { uri: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doImageUploadRequest?: (\n    file: {\n      name?: string;\n      uri?: string;\n    },\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n\n  /** Initial value to set on input */\n  initialValue?: string;\n  /**\n   * Custom UI component for AutoCompleteInput.\n   * Has access to all of [MessageInputContext](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/contexts/messageInputContext/MessageInputContext.tsx)\n   */\n  Input?: React.ComponentType<\n    Omit<MessageInputProps<StreamChatGenerics>, 'Input'> &\n      InputButtonsProps<StreamChatGenerics> & {\n        getUsers: () => UserResponse<StreamChatGenerics>[];\n      }\n  >;\n  /**\n   * Custom UI component to override buttons on left side of input box\n   * Defaults to [InputButtons](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/InputButtons.tsx),\n   * which contain following components/buttons:\n   *\n   *  - AttachButton\n   *  - CommandsButtom\n   *\n   * You have access to following prop functions:\n   *\n   * - closeAttachmentPicker\n   * - openAttachmentPicker\n   * - openCommandsPicker\n   * - toggleAttachmentPicker\n   */\n  InputButtons?: React.ComponentType<InputButtonsProps<StreamChatGenerics>>;\n  maxMessageLength?: number;\n  mentionAllAppUsersEnabled?: boolean;\n  /** Object containing filters/sort/options overrides for an @mention user query */\n  mentionAllAppUsersQuery?: MentionAllAppUsersQuery<StreamChatGenerics>;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as a single string argument to the callback handler.\n   */\n  onChangeText?: (newText: string) => void;\n  SendMessageDisallowedIndicator?: React.ComponentType;\n  /**\n   * ref for input setter function\n   *\n   * @param ref [Ref object](https://reactjs.org/docs/refs-and-the-dom.html) for underling `TextInput` component.\n   *\n   * @overrideType Function\n   */\n  setInputRef?: (ref: TextInput | null) => void;\n};\n\nexport type MessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = LocalMessageInputContext<StreamChatGenerics> &\n  Omit<InputMessageInputContextValue<StreamChatGenerics>, 'sendMessage'>;\n\nexport const MessageInputContext = React.createContext(\n  DEFAULT_BASE_CONTEXT_VALUE as MessageInputContextValue,\n);\n\nexport const MessageInputProvider = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  children,\n  value,\n}: PropsWithChildren<{\n  value: InputMessageInputContextValue<StreamChatGenerics>;\n}>) => {\n  const { closePicker, openPicker, selectedPicker, setSelectedPicker } =\n    useAttachmentPickerContext();\n  const { appSettings, client, enableOfflineSupport } = useChatContext<StreamChatGenerics>();\n\n  const getFileUploadConfig = () => {\n    const fileConfig = appSettings?.app?.file_upload_config;\n    if (fileConfig !== null || fileConfig !== undefined) {\n      return fileConfig;\n    } else {\n      return {};\n    }\n  };\n\n  const blockedFileExtensionTypes = getFileUploadConfig()?.blocked_file_extensions;\n  const blockedFileMimeTypes = getFileUploadConfig()?.blocked_mime_types;\n\n  const getImageUploadConfig = () => {\n    const imageConfig = appSettings?.app?.image_upload_config;\n    if (imageConfig !== null || imageConfig !== undefined) {\n      return imageConfig;\n    }\n    return {};\n  };\n\n  const blockedImageExtensionTypes = getImageUploadConfig()?.blocked_file_extensions;\n  const blockedImageMimeTypes = getImageUploadConfig()?.blocked_mime_types;\n\n  const channelCapabities = useOwnCapabilitiesContext();\n\n  const { channel, giphyEnabled } = useChannelContext<StreamChatGenerics>();\n  const { thread } = useThreadContext<StreamChatGenerics>();\n  const { t } = useTranslationContext();\n  const inputBoxRef = useRef<TextInput | null>(null);\n  const sending = useRef(false);\n\n  const [asyncIds, setAsyncIds] = useState<string[]>([]);\n  const [asyncUploads, setAsyncUploads] = useState<{\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  }>({});\n  const [giphyActive, setGiphyActive] = useState(false);\n  const [sendThreadMessageInChannel, setSendThreadMessageInChannel] = useState(false);\n  const { editing, hasFilePicker, hasImagePicker, initialValue } = value;\n  const {\n    fileUploads,\n    imageUploads,\n    mentionedUsers,\n    numberOfUploads,\n    setFileUploads,\n    setImageUploads,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n  } = useMessageDetailsForState<StreamChatGenerics>(editing, initialValue);\n  const { endsAt: cooldownEndsAt, start: startCooldown } = useCooldown<StreamChatGenerics>();\n\n  const threadId = thread?.id;\n  useEffect(() => {\n    setSendThreadMessageInChannel(false);\n  }, [threadId]);\n\n  const appendText = (newText: string) => {\n    setText((prevText) => `${prevText}${newText}`);\n  };\n\n  /** Checks if the message is valid or not. Accordingly we can enable/disable send button */\n  const isValidMessage = () => {\n    if (text && text.trim()) {\n      return true;\n    }\n\n    const imagesAndFiles = [...imageUploads, ...fileUploads];\n    if (imagesAndFiles.length === 0) return false;\n\n    if (enableOfflineSupport) {\n      // Allow only if none of the attachments have unsupported status\n      for (const file of imagesAndFiles) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    for (const file of imagesAndFiles) {\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  const onChange = (newText: string) => {\n    if (sending.current) {\n      return;\n    }\n    setText(newText);\n\n    if (newText && channel && channelCapabities.sendTypingEvents) {\n      logChatPromiseExecution(channel.keystroke(thread?.id), 'start typing event');\n    }\n\n    if (value.onChangeText) {\n      value.onChangeText(newText);\n    }\n  };\n\n  const openCommandsPicker = () => {\n    appendText('/');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openMentionsPicker = () => {\n    appendText('@');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openAttachmentPicker = () => {\n    if (hasImagePicker) {\n      Keyboard.dismiss();\n      setSelectedPicker('images');\n      openPicker();\n    } else if (hasFilePicker) {\n      pickFile();\n    }\n  };\n\n  const closeAttachmentPicker = () => {\n    setSelectedPicker(undefined);\n    closePicker();\n  };\n\n  const toggleAttachmentPicker = () => {\n    if (selectedPicker) {\n      closeAttachmentPicker();\n    } else {\n      openAttachmentPicker();\n    }\n  };\n\n  const onSelectItem = (item: UserResponse<StreamChatGenerics>) => {\n    setMentionedUsers((prevMentionedUsers) => [...prevMentionedUsers, item.id]);\n  };\n\n  const pickFile = async () => {\n    if (pickDocument === null) {\n      console.log(\n        'The file picker is not installed. Check our Getting Started documentation to install it.',\n      );\n      return;\n    }\n\n    if (numberOfUploads >= value.maxNumberOfFiles) {\n      Alert.alert('Maximum number of files reached');\n      return;\n    }\n\n    const result = await pickDocument({\n      maxNumberOfFiles: value.maxNumberOfFiles - numberOfUploads,\n    });\n\n    const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n    const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;\n\n    if (!result.cancelled && result.assets) {\n      const totalFileSize = result.assets.reduce((acc, asset) => acc + Number(asset.size), 0);\n      if (totalFileSize / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload files below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n      } else {\n        result.assets.forEach((asset) => {\n          /**\n           * TODO: The current tight coupling of images to the image\n           * picker does not allow images picked from the file picker\n           * to be rendered in a preview via the uploadNewImage call.\n           * This should be updated alongside allowing image a file\n           * uploads together.\n           */\n          uploadNewFile(asset);\n        });\n      }\n    }\n  };\n\n  const removeFile = (id: string) => {\n    if (fileUploads.some((file) => file.id === id)) {\n      setFileUploads((prevFileUploads) => prevFileUploads.filter((file) => file.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const removeImage = (id: string) => {\n    if (imageUploads.some((image) => image.id === id)) {\n      setImageUploads((prevImageUploads) => prevImageUploads.filter((image) => image.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const resetInput = (pendingAttachments: Attachment<StreamChatGenerics>[] = []) => {\n    setFileUploads([]);\n    setGiphyActive(false);\n    setShowMoreOptions(true);\n    setImageUploads([]);\n    setMentionedUsers([]);\n    setNumberOfUploads(\n      (prevNumberOfUploads) => prevNumberOfUploads - (pendingAttachments?.length || 0),\n    );\n    setText('');\n  };\n\n  const mapImageUploadToAttachment = (image: ImageUpload) => {\n    const mime_type: string | boolean = lookup(image.file.filename as string);\n    return {\n      fallback: image.file.name,\n      image_url: image.url,\n      mime_type: mime_type ? mime_type : undefined,\n      original_height: image.height,\n      original_width: image.width,\n      originalFile: image.file,\n      type: 'image',\n    } as Attachment;\n  };\n\n  const mapFileUploadToAttachment = (file: FileUpload) => {\n    if (file.file.mimeType?.startsWith('image/')) {\n      return {\n        fallback: file.file.name,\n        image_url: file.url,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        type: 'image',\n      };\n    } else if (file.file.mimeType?.startsWith('audio/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'audio',\n      };\n    } else if (file.file.mimeType?.startsWith('video/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        thumb_url: file.thumb_url,\n        title: file.file.name,\n        type: 'video',\n      };\n    } else {\n      return {\n        asset_url: file.url || file.file.uri,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'file',\n      };\n    }\n  };\n\n  // TODO: Figure out why this is async, as it doesn't await any promise.\n  // eslint-disable-next-line require-await\n  const sendMessage = async () => {\n    if (sending.current) {\n      return;\n    }\n\n    if (!channelCapabities.sendLinks && !!text.match(urlRegex)) {\n      Alert.alert(t('Links are disabled'), t('Sending links is not allowed in this conversation'));\n\n      return;\n    }\n\n    sending.current = true;\n\n    startCooldown();\n\n    const prevText = giphyEnabled && giphyActive ? `/giphy ${text}` : text;\n    setText('');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.clear();\n    }\n\n    const attachments = [] as Attachment<StreamChatGenerics>[];\n    for (const image of imageUploads) {\n      if (enableOfflineSupport) {\n        if (image.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapImageUploadToAttachment(image));\n        continue;\n      }\n\n      if ((!image || image.state === FileState.UPLOAD_FAILED) && !enableOfflineSupport) {\n        continue;\n      }\n\n      if (image.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        if (value.sendImageAsync) {\n          /**\n           * If user hit send before image uploaded, push ID into a queue to later\n           * be matched with the successful CDN response\n           */\n          setAsyncIds((prevAsyncIds) => [...prevAsyncIds, image.id]);\n        } else {\n          sending.current = false;\n          return setText(prevText);\n        }\n      }\n\n      // To get the mime type of the image from the file name and send it as an response for an image\n      if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n        attachments.push(mapImageUploadToAttachment(image));\n      }\n    }\n\n    for (const file of fileUploads) {\n      if (enableOfflineSupport) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapFileUploadToAttachment(file));\n        continue;\n      }\n\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        sending.current = false;\n        return;\n      }\n\n      if (file.state === FileState.UPLOADED || file.state === FileState.FINISHED) {\n        attachments.push(mapFileUploadToAttachment(file));\n      }\n    }\n\n    // Disallow sending message if its empty.\n    if (!prevText && attachments.length === 0) {\n      sending.current = false;\n      return;\n    }\n\n    if (value.editing && !isEditingBoolean(value.editing)) {\n      const updatedMessage = {\n        ...value.editing,\n        attachments,\n        mentioned_users: mentionedUsers,\n        quoted_message: undefined,\n        text: prevText,\n      } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0];\n\n      // TODO: Remove this line and show an error when submit fails\n      value.clearEditingState();\n\n      const updateMessagePromise = value\n        .editMessage(\n          // @ts-ignore\n          removeReservedFields(updatedMessage),\n        )\n        .then(value.clearEditingState);\n      resetInput(attachments);\n      logChatPromiseExecution(updateMessagePromise, 'update message');\n\n      sending.current = false;\n    } else {\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: uniq(mentionedUsers),\n          /** Parent message id - in case of thread */\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: prevText,\n        } as unknown as StreamMessage<StreamChatGenerics>);\n\n        value.clearQuotedMessageState();\n        sending.current = false;\n        resetInput(attachments);\n      } catch (_error) {\n        sending.current = false;\n        if (value.quotedMessage && typeof value.quotedMessage !== 'boolean') {\n          value.setQuotedMessageState(value.quotedMessage);\n        }\n        setText(prevText.slice(giphyEnabled && giphyActive ? 7 : 0)); // 7 because of '/giphy ' length\n        console.log('Failed to send message');\n      }\n    }\n  };\n\n  const sendMessageAsync = (id: string) => {\n    const image = asyncUploads[id];\n    if (!image || image.state === FileState.UPLOAD_FAILED) {\n      return;\n    }\n\n    if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n      const attachments = [\n        {\n          image_url: image.url,\n          type: 'image',\n        },\n      ] as StreamMessage<StreamChatGenerics>['attachments'];\n\n      startCooldown();\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: [],\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: '',\n        } as unknown as Partial<StreamMessage<StreamChatGenerics>>);\n\n        setAsyncIds((prevAsyncIds) => prevAsyncIds.splice(prevAsyncIds.indexOf(id), 1));\n        setAsyncUploads((prevAsyncUploads) => {\n          delete prevAsyncUploads[id];\n          return prevAsyncUploads;\n        });\n\n        setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      } catch (_error) {\n        console.log('Failed');\n      }\n    }\n  };\n\n  const setInputBoxRef = (ref: TextInput | null) => {\n    inputBoxRef.current = ref;\n    if (value.setInputRef) {\n      value.setInputRef(ref);\n    }\n  };\n\n  const getTriggerSettings = () => {\n    let triggerSettings: TriggerSettings<StreamChatGenerics> = {};\n    if (channel) {\n      if (value.autoCompleteTriggerSettings) {\n        triggerSettings = value.autoCompleteTriggerSettings({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      } else {\n        triggerSettings = ACITriggerSettings<StreamChatGenerics>({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      }\n    }\n    return triggerSettings;\n  };\n\n  const triggerSettings = getTriggerSettings();\n\n  const updateMessage = async () => {\n    try {\n      if (!isEditingBoolean(value.editing)) {\n        await client.updateMessage({\n          ...value.editing,\n          quoted_message: undefined,\n          text: giphyEnabled && giphyActive ? `/giphy ${text}` : text,\n        } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0]);\n      }\n\n      resetInput();\n      value.clearEditingState();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const regexCondition = /File (extension \\.\\w{2,4}|type \\S+) is not supported/;\n\n  const getUploadSetStateAction =\n    <UploadType extends ImageUpload | FileUpload>(\n      id: string,\n      fileState: FileStateValue,\n      extraData: Partial<UploadType> = {},\n    ): React.SetStateAction<UploadType[]> =>\n    (prevUploads: UploadType[]) =>\n      prevUploads.map((prevUpload) => {\n        if (prevUpload.id === id) {\n          return {\n            ...prevUpload,\n            ...extraData,\n            state: fileState,\n          };\n        }\n        return prevUpload;\n      });\n\n  const handleFileOrImageUploadError = (error: unknown, isImageError: boolean, id: string) => {\n    if (isImageError) {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setImageUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n\n        return setImageUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    } else {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setFileUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n        return setFileUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    }\n  };\n\n  const uploadFile = async ({ newFile }: { newFile: FileUpload }) => {\n    const { file, id } = newFile;\n\n    setFileUploads(getUploadSetStateAction(id, FileState.UPLOADING));\n\n    let response: Partial<SendFileAPIResponse> = {};\n    try {\n      if (value.doDocUploadRequest) {\n        response = await value.doDocUploadRequest(file, channel);\n      } else if (channel && file.uri) {\n        response = await channel.sendFile(file.uri, file.name, file.mimeType);\n      }\n      const extraData: Partial<FileUpload> = { thumb_url: response.thumb_url, url: response.file };\n      setFileUploads(getUploadSetStateAction(id, FileState.UPLOADED, extraData));\n    } catch (error: unknown) {\n      handleFileOrImageUploadError(error, false, id);\n    }\n  };\n\n  const uploadImage = async ({ newImage }: { newImage: ImageUpload }) => {\n    const { file, id } = newImage || {};\n\n    if (!file) {\n      return;\n    }\n\n    let response = {} as SendFileAPIResponse;\n\n    try {\n      const uri = file.uri || '';\n      /**\n       * We skip compression if:\n       * - the file is from the camera as that should already be compressed\n       * - the file has no height/width value to maintain for compression\n       * - the compressImageQuality number is not present or is 1 (meaning no compression)\n       */\n      const compressedUri = await (file.source === 'camera' ||\n      !file.height ||\n      !file.width ||\n      typeof value.compressImageQuality !== 'number' ||\n      value.compressImageQuality === 1\n        ? uri\n        : compressImage({\n            compressImageQuality: value.compressImageQuality,\n            height: file.height,\n            uri,\n            width: file.width,\n          }));\n      const filename = file.filename ?? uri.replace(/^(file:\\/\\/|content:\\/\\/)/, '');\n      const contentType = lookup(filename) || 'multipart/form-data';\n      if (value.doImageUploadRequest) {\n        response = await value.doImageUploadRequest(file, channel);\n      } else if (compressedUri && channel) {\n        if (value.sendImageAsync) {\n          channel.sendImage(compressedUri, filename, contentType).then((res) => {\n            if (asyncIds.includes(id)) {\n              // Evaluates to true if user hit send before image successfully uploaded\n              setAsyncUploads((prevAsyncUploads) => {\n                prevAsyncUploads[id] = {\n                  ...prevAsyncUploads[id],\n                  state: FileState.UPLOADED,\n                  url: res.file,\n                };\n                return prevAsyncUploads;\n              });\n            } else {\n              const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n                url: res.file,\n              });\n              setImageUploads(newImageUploads);\n            }\n          });\n        } else {\n          response = await channel.sendImage(compressedUri, filename, contentType);\n        }\n      }\n\n      if (Object.keys(response).length) {\n        const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n          height: file.height,\n          url: response.file,\n          width: file.width,\n        });\n        setImageUploads(newImageUploads);\n      }\n    } catch (error) {\n      handleFileOrImageUploadError(error, true, id);\n    }\n  };\n\n  const uploadNewFile = async (file: File) => {\n    const id: string = generateRandomId();\n\n    const isBlockedFileExtension: boolean | undefined = blockedFileExtensionTypes?.some(\n      (fileExtensionType: string) => file.name?.includes(fileExtensionType),\n    );\n    const isBlockedFileMimeType: boolean | undefined = blockedFileMimeTypes?.some(\n      (mimeType: string) => file.name?.includes(mimeType),\n    );\n\n    const fileState =\n      isBlockedFileExtension || isBlockedFileMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newFile: FileUpload = {\n      duration: 0,\n      file,\n      id: file.id || id,\n      paused: true,\n      progress: 0,\n      state: fileState,\n    };\n\n    await Promise.all([\n      setFileUploads((prevFileUploads) => prevFileUploads.concat([newFile])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedFileExtension) {\n      uploadFile({ newFile });\n    }\n  };\n\n  const uploadNewImage = async (image: Partial<Asset>) => {\n    const id = generateRandomId();\n\n    const isBlockedImageMimeType = blockedImageMimeTypes?.some((mimeType: string) =>\n      image.uri?.includes(mimeType),\n    );\n\n    const isBlockedImageExtension = blockedImageExtensionTypes?.some((imageExtensionType: string) =>\n      image.uri?.includes(imageExtensionType),\n    );\n\n    const imageState =\n      isBlockedImageExtension || isBlockedImageMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newImage: ImageUpload = {\n      file: image,\n      height: image.height,\n      id,\n      state: imageState,\n      url: image.uri,\n      width: image.width,\n    };\n\n    await Promise.all([\n      setImageUploads((prevImageUploads) => prevImageUploads.concat([newImage])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedImageExtension) {\n      uploadImage({ newImage });\n    }\n  };\n\n  const messageInputContext = useCreateMessageInputContext({\n    appendText,\n    asyncIds,\n    asyncUploads,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    fileUploads,\n    giphyActive,\n    imageUploads,\n    inputBoxRef,\n    isValidMessage,\n    mentionedUsers,\n    numberOfUploads,\n    onChange,\n    onSelectItem,\n    openAttachmentPicker,\n    openCommandsPicker,\n    openFilePicker: pickFile,\n    openMentionsPicker,\n    pickFile,\n    removeFile,\n    removeImage,\n    resetInput,\n    selectedPicker,\n    sending,\n    sendMessageAsync,\n    sendThreadMessageInChannel,\n    setAsyncIds,\n    setAsyncUploads,\n    setFileUploads,\n    setGiphyActive,\n    setImageUploads,\n    setInputBoxRef,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setSendThreadMessageInChannel,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n    thread,\n    toggleAttachmentPicker,\n    triggerSettings,\n    updateMessage,\n    uploadFile,\n    uploadImage,\n    uploadNewFile,\n    uploadNewImage,\n    ...value,\n    sendMessage, // overriding the originally passed in sendMessage\n  });\n\n  return (\n    <MessageInputContext.Provider\n      value={messageInputContext as unknown as MessageInputContextValue}\n    >\n      {children}\n    </MessageInputContext.Provider>\n  );\n};\n\nexport const useMessageInputContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const contextValue = useContext(\n    MessageInputContext,\n  ) as unknown as MessageInputContextValue<StreamChatGenerics>;\n\n  if (contextValue === DEFAULT_BASE_CONTEXT_VALUE && !isTestEnvironment()) {\n    throw new Error(\n      `The useMessageInputContext hook was called outside of the MessageInputContext provider. Make sure you have configured Channel component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#channel`,\n    );\n  }\n\n  return contextValue;\n};\n\n/**\n * Typescript currently does not support partial inference so if MessageInputContext\n * typing is desired while using the HOC withMessageInputContext the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withMessageInputContext = <\n  P extends UnknownType,\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>> => {\n  const WithMessageInputContextComponent = (\n    props: Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>,\n  ) => {\n    const messageInputContext = useMessageInputContext<StreamChatGenerics>();\n\n    return <Component {...(props as P)} {...messageInputContext} />;\n  };\n  WithMessageInputContextComponent.displayName = `WithMessageInputContext${getDisplayName(\n    Component,\n  )}`;\n  return WithMessageInputContextComponent;\n};\n"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_uniq","_interopRequireDefault","_mimeTypes","_streamChat","_useCreateMessageInputContext","_useMessageDetailsForState","_useCooldown2","_native","_removeReservedFields","_utils","_AttachmentPickerContext","_ChannelContext","_ChatContext","_OwnCapabilitiesContext","_ThreadContext","_TranslationContext","_defaultBaseContextValue","_getDisplayName","_isTestEnvironment","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof3","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","MessageInputContext","React","createContext","DEFAULT_BASE_CONTEXT_VALUE","exports","MessageInputProvider","_ref","_getFileUploadConfig","_getFileUploadConfig2","_getImageUploadConfig","_getImageUploadConfig2","children","_useAttachmentPickerC","useAttachmentPickerContext","closePicker","openPicker","selectedPicker","setSelectedPicker","_useChatContext","useChatContext","appSettings","client","enableOfflineSupport","getFileUploadConfig","_appSettings$app","fileConfig","app","file_upload_config","undefined","blockedFileExtensionTypes","blocked_file_extensions","blockedFileMimeTypes","blocked_mime_types","getImageUploadConfig","_appSettings$app2","imageConfig","image_upload_config","blockedImageExtensionTypes","blockedImageMimeTypes","channelCapabities","useOwnCapabilitiesContext","_useChannelContext","useChannelContext","channel","giphyEnabled","_useThreadContext","useThreadContext","thread","_useTranslationContex","useTranslationContext","t","inputBoxRef","useRef","sending","_useState","useState","_useState2","_slicedToArray2","asyncIds","setAsyncIds","_useState3","_useState4","asyncUploads","setAsyncUploads","_useState5","_useState6","giphyActive","setGiphyActive","_useState7","_useState8","sendThreadMessageInChannel","setSendThreadMessageInChannel","editing","hasFilePicker","hasImagePicker","initialValue","_useMessageDetailsFor","useMessageDetailsForState","fileUploads","imageUploads","mentionedUsers","numberOfUploads","setFileUploads","setImageUploads","setMentionedUsers","setNumberOfUploads","setShowMoreOptions","setText","showMoreOptions","text","_useCooldown","useCooldown","cooldownEndsAt","endsAt","startCooldown","start","threadId","id","useEffect","appendText","newText","prevText","isValidMessage","trim","imagesAndFiles","concat","_toConsumableArray2","_iterator","_step","file","state","FileState","NOT_SUPPORTED","_iterator2","_step2","UPLOAD_FAILED","UPLOADING","onChange","current","sendTypingEvents","logChatPromiseExecution","keystroke","onChangeText","openCommandsPicker","focus","openMentionsPicker","openAttachmentPicker","Keyboard","dismiss","pickFile","closeAttachmentPicker","toggleAttachmentPicker","onSelectItem","item","prevMentionedUsers","_ref2","_asyncToGenerator2","_regenerator","mark","_callee","result","MEGA_BYTES_TO_BYTES","MAX_FILE_SIZE_TO_UPLOAD_IN_MB","totalFileSize","wrap","_callee$","_context","prev","pickDocument","console","log","abrupt","maxNumberOfFiles","Alert","alert","sent","cancelled","assets","reduce","acc","asset","Number","size","forEach","uploadNewFile","stop","apply","arguments","removeFile","some","prevFileUploads","filter","prevNumberOfUploads","removeImage","image","prevImageUploads","resetInput","pendingAttachments","mapImageUploadToAttachment","mime_type","lookup","filename","fallback","image_url","url","original_height","height","original_width","width","originalFile","type","mapFileUploadToAttachment","_file$file$mimeType","_file$file$mimeType2","_file$file$mimeType3","mimeType","startsWith","asset_url","uri","duration","file_size","title","thumb_url","sendMessage","_ref3","_callee3","attachments","_loop","_iterator3","_step3","_image","_ret","_iterator4","_step4","_file3","updatedMessage","updateMessagePromise","_callee3$","_context3","sendLinks","match","urlRegex","clear","_callee2","_callee2$","_context2","v","push","sendImageAsync","prevAsyncIds","UPLOADED","FINISHED","delegateYield","t0","_typeof2","isEditingBoolean","_extends2","mentioned_users","quoted_message","clearEditingState","editMessage","removeReservedFields","then","uniq","parent_id","quoted_message_id","quotedMessage","show_in_channel","clearQuotedMessageState","_error","setQuotedMessageState","sendMessageAsync","splice","indexOf","prevAsyncUploads","setInputBoxRef","ref","setInputRef","getTriggerSettings","triggerSettings","autoCompleteTriggerSettings","onMentionSelectItem","ACITriggerSettings","updateMessage","_ref4","_callee4","_callee4$","_context4","regexCondition","getUploadSetStateAction","fileState","extraData","prevUploads","map","prevUpload","handleFileOrImageUploadError","error","isImageError","Error","message","uploadFile","_ref6","_callee5","_ref5","newFile","response","_callee5$","_context5","doDocUploadRequest","sendFile","_x","uploadImage","_ref8","_callee6","_ref7","newImage","_ref9","_file$filename","compressedUri","contentType","newImageUploads","_callee6$","_context6","source","compressImageQuality","compressImage","replace","doImageUploadRequest","sendImage","res","includes","keys","_x2","_ref10","_callee7","isBlockedFileExtension","isBlockedFileMimeType","_callee7$","_context7","generateRandomId","fileExtensionType","_file$name","_file$name2","paused","progress","Promise","all","_x3","uploadNewImage","_ref11","_callee8","isBlockedImageMimeType","isBlockedImageExtension","imageState","_callee8$","_context8","_image$uri","imageExtensionType","_image$uri2","_x4","messageInputContext","useCreateMessageInputContext","openFilePicker","createElement","Provider","__self","__source","fileName","lineNumber","columnNumber","useMessageInputContext","contextValue","useContext","isTestEnvironment","withMessageInputContext","Component","WithMessageInputContextComponent","props","displayName","getDisplayName"],"sources":["MessageInputContext.tsx"],"sourcesContent":["import type { LegacyRef } from 'react';\nimport React, { PropsWithChildren, useContext, useEffect, useRef, useState } from 'react';\nimport type { TextInput, TextInputProps } from 'react-native';\nimport { Alert, Keyboard } from 'react-native';\n\nimport uniq from 'lodash/uniq';\nimport { lookup } from 'mime-types';\nimport {\n  Attachment,\n  logChatPromiseExecution,\n  SendFileAPIResponse,\n  StreamChat,\n  Message as StreamMessage,\n  UserFilters,\n  UserOptions,\n  UserResponse,\n  UserSort,\n} from 'stream-chat';\n\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { isEditingBoolean, useMessageDetailsForState } from './hooks/useMessageDetailsForState';\n\nimport type { AttachButtonProps } from '../../components/MessageInput/AttachButton';\nimport type { CommandsButtonProps } from '../../components/MessageInput/CommandsButton';\nimport type { InputEditingStateHeaderProps } from '../../components/MessageInput/components/InputEditingStateHeader';\nimport type { InputGiphySearchProps } from '../../components/MessageInput/components/InputGiphySearch';\nimport type { InputReplyStateHeaderProps } from '../../components/MessageInput/components/InputReplyStateHeader';\nimport type { CooldownTimerProps } from '../../components/MessageInput/CooldownTimer';\nimport type { FileUploadPreviewProps } from '../../components/MessageInput/FileUploadPreview';\nimport { useCooldown } from '../../components/MessageInput/hooks/useCooldown';\nimport type { ImageUploadPreviewProps } from '../../components/MessageInput/ImageUploadPreview';\nimport type { InputButtonsProps } from '../../components/MessageInput/InputButtons';\nimport type { MessageInputProps } from '../../components/MessageInput/MessageInput';\nimport type { MoreOptionsButtonProps } from '../../components/MessageInput/MoreOptionsButton';\nimport type { SendButtonProps } from '../../components/MessageInput/SendButton';\nimport type { UploadProgressIndicatorProps } from '../../components/MessageInput/UploadProgressIndicator';\nimport type { MessageType } from '../../components/MessageList/hooks/useMessageList';\nimport { compressImage, pickDocument } from '../../native';\nimport type { Asset, DefaultStreamChatGenerics, File, UnknownType } from '../../types/types';\nimport { removeReservedFields } from '../../utils/removeReservedFields';\nimport {\n  ACITriggerSettings,\n  ACITriggerSettingsParams,\n  FileState,\n  FileStateValue,\n  generateRandomId,\n  TriggerSettings,\n  urlRegex,\n} from '../../utils/utils';\nimport { useAttachmentPickerContext } from '../attachmentPickerContext/AttachmentPickerContext';\nimport { ChannelContextValue, useChannelContext } from '../channelContext/ChannelContext';\nimport { useChatContext } from '../chatContext/ChatContext';\nimport { useOwnCapabilitiesContext } from '../ownCapabilitiesContext/OwnCapabilitiesContext';\nimport { useThreadContext } from '../threadContext/ThreadContext';\nimport { useTranslationContext } from '../translationContext/TranslationContext';\nimport { DEFAULT_BASE_CONTEXT_VALUE } from '../utils/defaultBaseContextValue';\n\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { isTestEnvironment } from '../utils/isTestEnvironment';\n\nexport type FileUpload = {\n  file: File;\n  id: string;\n  state: FileStateValue;\n  duration?: number;\n  paused?: boolean;\n  progress?: number;\n  thumb_url?: string;\n  url?: string;\n};\n\nexport type ImageUpload = {\n  file: Partial<Asset> & {\n    name?: string;\n  };\n  id: string;\n  state: FileStateValue;\n  height?: number;\n  url?: string;\n  width?: number;\n};\n\nexport type MentionAllAppUsersQuery<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  filters?: UserFilters<StreamChatGenerics>;\n  options?: UserOptions;\n  sort?: UserSort<StreamChatGenerics>;\n};\n\nexport type LocalMessageInputContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  appendText: (newText: string) => void;\n  asyncIds: string[];\n  asyncUploads: {\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  };\n  closeAttachmentPicker: () => void;\n  /** The time at which the active cooldown will end */\n  cooldownEndsAt: Date;\n  /**\n   * An array of file objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *      \"url\": \"https://url1.com\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  fileUploads: FileUpload[];\n  giphyActive: boolean;\n  /**\n   * An array of image objects which are set for upload. It has the following structure:\n   *\n   * ```json\n   *  [\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_1\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *    {\n   *      \"file\": // File object,\n   *      \"id\": \"randomly_generated_temp_id_2\",\n   *      \"state\": \"uploading\" // or \"finished\",\n   *    },\n   *  ]\n   * ```\n   *\n   */\n  imageUploads: ImageUpload[];\n  inputBoxRef: React.MutableRefObject<TextInput | null>;\n  isValidMessage: () => boolean;\n  mentionedUsers: string[];\n  numberOfUploads: number;\n  onChange: (newText: string) => void;\n  onSelectItem: (item: UserResponse<StreamChatGenerics>) => void;\n  openAttachmentPicker: () => void;\n  openCommandsPicker: () => void;\n  openFilePicker: () => void;\n  openMentionsPicker: () => void;\n  pickFile: () => Promise<void>;\n  /**\n   * Function for removing a file from the upload preview\n   *\n   * @param id string ID of file in `fileUploads` object in state of MessageInput\n   */\n  removeFile: (id: string) => void;\n  /**\n   * Function for removing an image from the upload preview\n   *\n   * @param id string ID of image in `imageUploads` object in state of MessageInput\n   */\n  removeImage: (id: string) => void;\n  resetInput: (pendingAttachments?: Attachment<StreamChatGenerics>[]) => void;\n  selectedPicker: string | undefined;\n  sending: React.MutableRefObject<boolean>;\n  sendMessage: () => Promise<void>;\n  sendMessageAsync: (id: string) => void;\n  sendThreadMessageInChannel: boolean;\n  setAsyncIds: React.Dispatch<React.SetStateAction<string[]>>;\n  setAsyncUploads: React.Dispatch<\n    React.SetStateAction<{\n      [key: string]: {\n        state: string;\n        url: string;\n      };\n    }>\n  >;\n  setFileUploads: React.Dispatch<React.SetStateAction<FileUpload[]>>;\n  setGiphyActive: React.Dispatch<React.SetStateAction<boolean>>;\n  setImageUploads: React.Dispatch<React.SetStateAction<ImageUpload[]>>;\n  /**\n   * Ref callback to set reference on input box\n   */\n  setInputBoxRef: LegacyRef<TextInput> | undefined;\n  setMentionedUsers: React.Dispatch<React.SetStateAction<string[]>>;\n  setNumberOfUploads: React.Dispatch<React.SetStateAction<number>>;\n  setSendThreadMessageInChannel: React.Dispatch<React.SetStateAction<boolean>>;\n  setShowMoreOptions: React.Dispatch<React.SetStateAction<boolean>>;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  showMoreOptions: boolean;\n  /**\n   * Text value of the TextInput\n   */\n  text: string;\n  toggleAttachmentPicker: () => void;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  triggerSettings: TriggerSettings<StreamChatGenerics>;\n  updateMessage: () => Promise<void>;\n  /** Function for attempting to upload a file */\n  uploadFile: ({ newFile }: { newFile: FileUpload }) => Promise<void>;\n  /** Function for attempting to upload an image */\n  uploadImage: ({ newImage }: { newImage: ImageUpload }) => Promise<void>;\n  uploadNewFile: (file: File) => Promise<void>;\n  uploadNewImage: (image: Partial<Asset>) => Promise<void>;\n};\n\nexport type InputMessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = {\n  /**\n   * Custom UI component for attach button.\n   *\n   * Defaults to and accepts same props as: [AttachButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/attach-button/)\n   */\n  AttachButton: React.ComponentType<AttachButtonProps<StreamChatGenerics>>;\n\n  clearEditingState: () => void;\n  clearQuotedMessageState: () => void;\n  /**\n   * Custom UI component for commands button.\n   *\n   * Defaults to and accepts same props as: [CommandsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/commands-button/)\n   */\n  CommandsButton: React.ComponentType<CommandsButtonProps<StreamChatGenerics>>;\n  /**\n   * Custom UI component to display the remaining cooldown a user will have to wait before\n   * being allowed to send another message. This component is displayed in place of the\n   * send button for the MessageInput component.\n   *\n   * **default** [CooldownTimer](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/CooldownTimer.tsx)\n   */\n  CooldownTimer: React.ComponentType<CooldownTimerProps>;\n  editing: boolean | MessageType<StreamChatGenerics>;\n  editMessage: StreamChat<StreamChatGenerics>['updateMessage'];\n\n  /**\n   * Custom UI component for FileUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/FileUploadPreview.tsx\n   */\n  FileUploadPreview: React.ComponentType<FileUploadPreviewProps<StreamChatGenerics>>;\n\n  /** When false, CommandsButton will be hidden */\n  hasCommands: boolean;\n  /** When false, FileSelectorIcon will be hidden */\n  hasFilePicker: boolean;\n  /** When false, ImageSelectorIcon will be hidden */\n  hasImagePicker: boolean;\n  /**\n   * Custom UI component for ImageUploadPreview.\n   * Defaults to and accepts same props as: https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/ImageUploadPreview.tsx\n   */\n  ImageUploadPreview: React.ComponentType<ImageUploadPreviewProps<StreamChatGenerics>>;\n  InputEditingStateHeader: React.ComponentType<InputEditingStateHeaderProps<StreamChatGenerics>>;\n  InputGiphySearch: React.ComponentType<InputGiphySearchProps<StreamChatGenerics>>;\n  InputReplyStateHeader: React.ComponentType<InputReplyStateHeaderProps<StreamChatGenerics>>;\n  /** Limit on allowed number of files to attach at a time. */\n  maxNumberOfFiles: number;\n  /**\n   * Custom UI component for more options button.\n   *\n   * Defaults to and accepts same props as: [MoreOptionsButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/more-options-button/)\n   */\n  MoreOptionsButton: React.ComponentType<MoreOptionsButtonProps<StreamChatGenerics>>;\n  /** Limit on the number of lines in the text input before scrolling */\n  numberOfLines: number;\n  quotedMessage: boolean | MessageType<StreamChatGenerics>;\n  /**\n   * Custom UI component for send button.\n   *\n   * Defaults to and accepts same props as: [SendButton](https://getstream.io/chat/docs/sdk/reactnative/ui-components/send-button/)\n   */\n  SendButton: React.ComponentType<SendButtonProps<StreamChatGenerics>>;\n  sendImageAsync: boolean;\n  sendMessage: (message: Partial<StreamMessage<StreamChatGenerics>>) => Promise<void>;\n  setQuotedMessageState: (message: MessageType<StreamChatGenerics>) => void;\n  /**\n   * Custom UI component to render checkbox with text (\"Also send to channel\") in Thread's input box.\n   * When ticked, message will also be sent in parent channel.\n   */\n  ShowThreadMessageInChannelButton: React.ComponentType<{\n    threadList?: boolean;\n  }>;\n  /**\n   * Custom UI component to render upload progress indicator on attachment preview.\n   *\n   * **Default** [UploadProgressIndicator](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/UploadProgressIndicator.tsx)\n   */\n  UploadProgressIndicator: React.ComponentType<UploadProgressIndicatorProps>;\n  /**\n   * Additional props for underlying TextInput component. These props will be forwarded as it is to TextInput component.\n   *\n   * @see See https://reactnative.dev/docs/textinput#reference\n   */\n  additionalTextInputProps?: TextInputProps;\n  /** Max number of suggestions to display in autocomplete list. Defaults to 10. */\n  autoCompleteSuggestionsLimit?: number;\n  /**\n   * Mapping of input triggers to the outputs to be displayed by the AutoCompleteInput\n   */\n  autoCompleteTriggerSettings?: (\n    settings: ACITriggerSettingsParams<StreamChatGenerics>,\n  ) => TriggerSettings<StreamChatGenerics>;\n  /**\n   * Compress image with quality (from 0 to 1, where 1 is best quality).\n   * On iOS, values larger than 0.8 don't produce a noticeable quality increase in most images,\n   * while a value of 0.8 will reduce the file size by about half or less compared to a value of 1.\n   * Image picker defaults to 0.8 for iOS and 1 for Android\n   */\n  compressImageQuality?: number;\n  /**\n   * Override file upload request\n   *\n   * @param file    File object - { uri: '', name: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doDocUploadRequest?: (\n    file: File,\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n  /**\n   * Override image upload request\n   *\n   * @param file    File object - { uri: '' }\n   * @param channel Current channel object\n   *\n   * @overrideType Function\n   */\n  doImageUploadRequest?: (\n    file: {\n      name?: string;\n      uri?: string;\n    },\n    channel: ChannelContextValue<StreamChatGenerics>['channel'],\n  ) => Promise<SendFileAPIResponse>;\n\n  /** Initial value to set on input */\n  initialValue?: string;\n  /**\n   * Custom UI component for AutoCompleteInput.\n   * Has access to all of [MessageInputContext](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/contexts/messageInputContext/MessageInputContext.tsx)\n   */\n  Input?: React.ComponentType<\n    Omit<MessageInputProps<StreamChatGenerics>, 'Input'> &\n      InputButtonsProps<StreamChatGenerics> & {\n        getUsers: () => UserResponse<StreamChatGenerics>[];\n      }\n  >;\n  /**\n   * Custom UI component to override buttons on left side of input box\n   * Defaults to [InputButtons](https://github.com/GetStream/stream-chat-react-native/blob/main/package/src/components/MessageInput/InputButtons.tsx),\n   * which contain following components/buttons:\n   *\n   *  - AttachButton\n   *  - CommandsButtom\n   *\n   * You have access to following prop functions:\n   *\n   * - closeAttachmentPicker\n   * - openAttachmentPicker\n   * - openCommandsPicker\n   * - toggleAttachmentPicker\n   */\n  InputButtons?: React.ComponentType<InputButtonsProps<StreamChatGenerics>>;\n  maxMessageLength?: number;\n  mentionAllAppUsersEnabled?: boolean;\n  /** Object containing filters/sort/options overrides for an @mention user query */\n  mentionAllAppUsersQuery?: MentionAllAppUsersQuery<StreamChatGenerics>;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as a single string argument to the callback handler.\n   */\n  onChangeText?: (newText: string) => void;\n  SendMessageDisallowedIndicator?: React.ComponentType;\n  /**\n   * ref for input setter function\n   *\n   * @param ref [Ref object](https://reactjs.org/docs/refs-and-the-dom.html) for underling `TextInput` component.\n   *\n   * @overrideType Function\n   */\n  setInputRef?: (ref: TextInput | null) => void;\n};\n\nexport type MessageInputContextValue<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = LocalMessageInputContext<StreamChatGenerics> &\n  Omit<InputMessageInputContextValue<StreamChatGenerics>, 'sendMessage'>;\n\nexport const MessageInputContext = React.createContext(\n  DEFAULT_BASE_CONTEXT_VALUE as MessageInputContextValue,\n);\n\nexport const MessageInputProvider = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>({\n  children,\n  value,\n}: PropsWithChildren<{\n  value: InputMessageInputContextValue<StreamChatGenerics>;\n}>) => {\n  const { closePicker, openPicker, selectedPicker, setSelectedPicker } =\n    useAttachmentPickerContext();\n  const { appSettings, client, enableOfflineSupport } = useChatContext<StreamChatGenerics>();\n\n  const getFileUploadConfig = () => {\n    const fileConfig = appSettings?.app?.file_upload_config;\n    if (fileConfig !== null || fileConfig !== undefined) {\n      return fileConfig;\n    } else {\n      return {};\n    }\n  };\n\n  const blockedFileExtensionTypes = getFileUploadConfig()?.blocked_file_extensions;\n  const blockedFileMimeTypes = getFileUploadConfig()?.blocked_mime_types;\n\n  const getImageUploadConfig = () => {\n    const imageConfig = appSettings?.app?.image_upload_config;\n    if (imageConfig !== null || imageConfig !== undefined) {\n      return imageConfig;\n    }\n    return {};\n  };\n\n  const blockedImageExtensionTypes = getImageUploadConfig()?.blocked_file_extensions;\n  const blockedImageMimeTypes = getImageUploadConfig()?.blocked_mime_types;\n\n  const channelCapabities = useOwnCapabilitiesContext();\n\n  const { channel, giphyEnabled } = useChannelContext<StreamChatGenerics>();\n  const { thread } = useThreadContext<StreamChatGenerics>();\n  const { t } = useTranslationContext();\n  const inputBoxRef = useRef<TextInput | null>(null);\n  const sending = useRef(false);\n\n  const [asyncIds, setAsyncIds] = useState<string[]>([]);\n  const [asyncUploads, setAsyncUploads] = useState<{\n    [key: string]: {\n      state: string;\n      url: string;\n    };\n  }>({});\n  const [giphyActive, setGiphyActive] = useState(false);\n  const [sendThreadMessageInChannel, setSendThreadMessageInChannel] = useState(false);\n  const { editing, hasFilePicker, hasImagePicker, initialValue } = value;\n  const {\n    fileUploads,\n    imageUploads,\n    mentionedUsers,\n    numberOfUploads,\n    setFileUploads,\n    setImageUploads,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n  } = useMessageDetailsForState<StreamChatGenerics>(editing, initialValue);\n  const { endsAt: cooldownEndsAt, start: startCooldown } = useCooldown<StreamChatGenerics>();\n\n  const threadId = thread?.id;\n  useEffect(() => {\n    setSendThreadMessageInChannel(false);\n  }, [threadId]);\n\n  const appendText = (newText: string) => {\n    setText((prevText) => `${prevText}${newText}`);\n  };\n\n  /** Checks if the message is valid or not. Accordingly we can enable/disable send button */\n  const isValidMessage = () => {\n    if (text && text.trim()) {\n      return true;\n    }\n\n    const imagesAndFiles = [...imageUploads, ...fileUploads];\n    if (imagesAndFiles.length === 0) return false;\n\n    if (enableOfflineSupport) {\n      // Allow only if none of the attachments have unsupported status\n      for (const file of imagesAndFiles) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    for (const file of imagesAndFiles) {\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  const onChange = (newText: string) => {\n    if (sending.current) {\n      return;\n    }\n    setText(newText);\n\n    if (newText && channel && channelCapabities.sendTypingEvents) {\n      logChatPromiseExecution(channel.keystroke(thread?.id), 'start typing event');\n    }\n\n    if (value.onChangeText) {\n      value.onChangeText(newText);\n    }\n  };\n\n  const openCommandsPicker = () => {\n    appendText('/');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openMentionsPicker = () => {\n    appendText('@');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n  };\n\n  const openAttachmentPicker = () => {\n    if (hasImagePicker) {\n      Keyboard.dismiss();\n      setSelectedPicker('images');\n      openPicker();\n    } else if (hasFilePicker) {\n      pickFile();\n    }\n  };\n\n  const closeAttachmentPicker = () => {\n    setSelectedPicker(undefined);\n    closePicker();\n  };\n\n  const toggleAttachmentPicker = () => {\n    if (selectedPicker) {\n      closeAttachmentPicker();\n    } else {\n      openAttachmentPicker();\n    }\n  };\n\n  const onSelectItem = (item: UserResponse<StreamChatGenerics>) => {\n    setMentionedUsers((prevMentionedUsers) => [...prevMentionedUsers, item.id]);\n  };\n\n  const pickFile = async () => {\n    if (pickDocument === null) {\n      console.log(\n        'The file picker is not installed. Check our Getting Started documentation to install it.',\n      );\n      return;\n    }\n\n    if (numberOfUploads >= value.maxNumberOfFiles) {\n      Alert.alert('Maximum number of files reached');\n      return;\n    }\n\n    const result = await pickDocument({\n      maxNumberOfFiles: value.maxNumberOfFiles - numberOfUploads,\n    });\n\n    const MEGA_BYTES_TO_BYTES = 1024 * 1024;\n    const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;\n\n    if (!result.cancelled && result.assets) {\n      const totalFileSize = result.assets.reduce((acc, asset) => acc + Number(asset.size), 0);\n      if (totalFileSize / MEGA_BYTES_TO_BYTES > MAX_FILE_SIZE_TO_UPLOAD_IN_MB) {\n        Alert.alert(\n          `Maximum file size upload limit reached, please upload files below ${MAX_FILE_SIZE_TO_UPLOAD_IN_MB}MB.`,\n        );\n      } else {\n        result.assets.forEach((asset) => {\n          /**\n           * TODO: The current tight coupling of images to the image\n           * picker does not allow images picked from the file picker\n           * to be rendered in a preview via the uploadNewImage call.\n           * This should be updated alongside allowing image a file\n           * uploads together.\n           */\n          uploadNewFile(asset);\n        });\n      }\n    }\n  };\n\n  const removeFile = (id: string) => {\n    if (fileUploads.some((file) => file.id === id)) {\n      setFileUploads((prevFileUploads) => prevFileUploads.filter((file) => file.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const removeImage = (id: string) => {\n    if (imageUploads.some((image) => image.id === id)) {\n      setImageUploads((prevImageUploads) => prevImageUploads.filter((image) => image.id !== id));\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n    }\n  };\n\n  const resetInput = (pendingAttachments: Attachment<StreamChatGenerics>[] = []) => {\n    setFileUploads([]);\n    setGiphyActive(false);\n    setShowMoreOptions(true);\n    setImageUploads([]);\n    setMentionedUsers([]);\n    setNumberOfUploads(\n      (prevNumberOfUploads) => prevNumberOfUploads - (pendingAttachments?.length || 0),\n    );\n    setText('');\n  };\n\n  const mapImageUploadToAttachment = (image: ImageUpload) => {\n    const mime_type: string | boolean = lookup(image.file.filename as string);\n    return {\n      fallback: image.file.name,\n      image_url: image.url,\n      mime_type: mime_type ? mime_type : undefined,\n      original_height: image.height,\n      original_width: image.width,\n      originalFile: image.file,\n      type: 'image',\n    } as Attachment;\n  };\n\n  const mapFileUploadToAttachment = (file: FileUpload) => {\n    if (file.file.mimeType?.startsWith('image/')) {\n      return {\n        fallback: file.file.name,\n        image_url: file.url,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        type: 'image',\n      };\n    } else if (file.file.mimeType?.startsWith('audio/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'audio',\n      };\n    } else if (file.file.mimeType?.startsWith('video/')) {\n      return {\n        asset_url: file.url || file.file.uri,\n        duration: file.file.duration,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        thumb_url: file.thumb_url,\n        title: file.file.name,\n        type: 'video',\n      };\n    } else {\n      return {\n        asset_url: file.url || file.file.uri,\n        file_size: file.file.size,\n        mime_type: file.file.mimeType,\n        originalFile: file.file,\n        title: file.file.name,\n        type: 'file',\n      };\n    }\n  };\n\n  // TODO: Figure out why this is async, as it doesn't await any promise.\n  // eslint-disable-next-line require-await\n  const sendMessage = async () => {\n    if (sending.current) {\n      return;\n    }\n\n    if (!channelCapabities.sendLinks && !!text.match(urlRegex)) {\n      Alert.alert(t('Links are disabled'), t('Sending links is not allowed in this conversation'));\n\n      return;\n    }\n\n    sending.current = true;\n\n    startCooldown();\n\n    const prevText = giphyEnabled && giphyActive ? `/giphy ${text}` : text;\n    setText('');\n    if (inputBoxRef.current) {\n      inputBoxRef.current.clear();\n    }\n\n    const attachments = [] as Attachment<StreamChatGenerics>[];\n    for (const image of imageUploads) {\n      if (enableOfflineSupport) {\n        if (image.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapImageUploadToAttachment(image));\n        continue;\n      }\n\n      if ((!image || image.state === FileState.UPLOAD_FAILED) && !enableOfflineSupport) {\n        continue;\n      }\n\n      if (image.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        if (value.sendImageAsync) {\n          /**\n           * If user hit send before image uploaded, push ID into a queue to later\n           * be matched with the successful CDN response\n           */\n          setAsyncIds((prevAsyncIds) => [...prevAsyncIds, image.id]);\n        } else {\n          sending.current = false;\n          return setText(prevText);\n        }\n      }\n\n      // To get the mime type of the image from the file name and send it as an response for an image\n      if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n        attachments.push(mapImageUploadToAttachment(image));\n      }\n    }\n\n    for (const file of fileUploads) {\n      if (enableOfflineSupport) {\n        if (file.state === FileState.NOT_SUPPORTED) {\n          return;\n        }\n        attachments.push(mapFileUploadToAttachment(file));\n        continue;\n      }\n\n      if (!file || file.state === FileState.UPLOAD_FAILED) {\n        continue;\n      }\n\n      if (file.state === FileState.UPLOADING) {\n        // TODO: show error to user that they should wait until image is uploaded\n        sending.current = false;\n        return;\n      }\n\n      if (file.state === FileState.UPLOADED || file.state === FileState.FINISHED) {\n        attachments.push(mapFileUploadToAttachment(file));\n      }\n    }\n\n    // Disallow sending message if its empty.\n    if (!prevText && attachments.length === 0) {\n      sending.current = false;\n      return;\n    }\n\n    if (value.editing && !isEditingBoolean(value.editing)) {\n      const updatedMessage = {\n        ...value.editing,\n        attachments,\n        mentioned_users: mentionedUsers,\n        quoted_message: undefined,\n        text: prevText,\n      } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0];\n\n      // TODO: Remove this line and show an error when submit fails\n      value.clearEditingState();\n\n      const updateMessagePromise = value\n        .editMessage(\n          // @ts-ignore\n          removeReservedFields(updatedMessage),\n        )\n        .then(value.clearEditingState);\n      resetInput(attachments);\n      logChatPromiseExecution(updateMessagePromise, 'update message');\n\n      sending.current = false;\n    } else {\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: uniq(mentionedUsers),\n          /** Parent message id - in case of thread */\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: prevText,\n        } as unknown as StreamMessage<StreamChatGenerics>);\n\n        value.clearQuotedMessageState();\n        sending.current = false;\n        resetInput(attachments);\n      } catch (_error) {\n        sending.current = false;\n        if (value.quotedMessage && typeof value.quotedMessage !== 'boolean') {\n          value.setQuotedMessageState(value.quotedMessage);\n        }\n        setText(prevText.slice(giphyEnabled && giphyActive ? 7 : 0)); // 7 because of '/giphy ' length\n        console.log('Failed to send message');\n      }\n    }\n  };\n\n  const sendMessageAsync = (id: string) => {\n    const image = asyncUploads[id];\n    if (!image || image.state === FileState.UPLOAD_FAILED) {\n      return;\n    }\n\n    if (image.state === FileState.UPLOADED || image.state === FileState.FINISHED) {\n      const attachments = [\n        {\n          image_url: image.url,\n          type: 'image',\n        },\n      ] as StreamMessage<StreamChatGenerics>['attachments'];\n\n      startCooldown();\n      try {\n        value.sendMessage({\n          attachments,\n          mentioned_users: [],\n          parent_id: thread?.id,\n          quoted_message_id:\n            typeof value.quotedMessage === 'boolean' ? undefined : value.quotedMessage.id,\n          show_in_channel: sendThreadMessageInChannel || undefined,\n          text: '',\n        } as unknown as Partial<StreamMessage<StreamChatGenerics>>);\n\n        setAsyncIds((prevAsyncIds) => prevAsyncIds.splice(prevAsyncIds.indexOf(id), 1));\n        setAsyncUploads((prevAsyncUploads) => {\n          delete prevAsyncUploads[id];\n          return prevAsyncUploads;\n        });\n\n        setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      } catch (_error) {\n        console.log('Failed');\n      }\n    }\n  };\n\n  const setInputBoxRef = (ref: TextInput | null) => {\n    inputBoxRef.current = ref;\n    if (value.setInputRef) {\n      value.setInputRef(ref);\n    }\n  };\n\n  const getTriggerSettings = () => {\n    let triggerSettings: TriggerSettings<StreamChatGenerics> = {};\n    if (channel) {\n      if (value.autoCompleteTriggerSettings) {\n        triggerSettings = value.autoCompleteTriggerSettings({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      } else {\n        triggerSettings = ACITriggerSettings<StreamChatGenerics>({\n          channel,\n          client,\n          onMentionSelectItem: onSelectItem,\n        });\n      }\n    }\n    return triggerSettings;\n  };\n\n  const triggerSettings = getTriggerSettings();\n\n  const updateMessage = async () => {\n    try {\n      if (!isEditingBoolean(value.editing)) {\n        await client.updateMessage({\n          ...value.editing,\n          quoted_message: undefined,\n          text: giphyEnabled && giphyActive ? `/giphy ${text}` : text,\n        } as Parameters<StreamChat<StreamChatGenerics>['updateMessage']>[0]);\n      }\n\n      resetInput();\n      value.clearEditingState();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const regexCondition = /File (extension \\.\\w{2,4}|type \\S+) is not supported/;\n\n  const getUploadSetStateAction =\n    <UploadType extends ImageUpload | FileUpload>(\n      id: string,\n      fileState: FileStateValue,\n      extraData: Partial<UploadType> = {},\n    ): React.SetStateAction<UploadType[]> =>\n    (prevUploads: UploadType[]) =>\n      prevUploads.map((prevUpload) => {\n        if (prevUpload.id === id) {\n          return {\n            ...prevUpload,\n            ...extraData,\n            state: fileState,\n          };\n        }\n        return prevUpload;\n      });\n\n  const handleFileOrImageUploadError = (error: unknown, isImageError: boolean, id: string) => {\n    if (isImageError) {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setImageUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n\n        return setImageUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    } else {\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads - 1);\n\n      if (error instanceof Error) {\n        if (regexCondition.test(error.message)) {\n          return setFileUploads(getUploadSetStateAction(id, FileState.NOT_SUPPORTED));\n        }\n        return setFileUploads(getUploadSetStateAction(id, FileState.UPLOAD_FAILED));\n      }\n    }\n  };\n\n  const uploadFile = async ({ newFile }: { newFile: FileUpload }) => {\n    const { file, id } = newFile;\n\n    setFileUploads(getUploadSetStateAction(id, FileState.UPLOADING));\n\n    let response: Partial<SendFileAPIResponse> = {};\n    try {\n      if (value.doDocUploadRequest) {\n        response = await value.doDocUploadRequest(file, channel);\n      } else if (channel && file.uri) {\n        response = await channel.sendFile(file.uri, file.name, file.mimeType);\n      }\n      const extraData: Partial<FileUpload> = { thumb_url: response.thumb_url, url: response.file };\n      setFileUploads(getUploadSetStateAction(id, FileState.UPLOADED, extraData));\n    } catch (error: unknown) {\n      handleFileOrImageUploadError(error, false, id);\n    }\n  };\n\n  const uploadImage = async ({ newImage }: { newImage: ImageUpload }) => {\n    const { file, id } = newImage || {};\n\n    if (!file) {\n      return;\n    }\n\n    let response = {} as SendFileAPIResponse;\n\n    try {\n      const uri = file.uri || '';\n      /**\n       * We skip compression if:\n       * - the file is from the camera as that should already be compressed\n       * - the file has no height/width value to maintain for compression\n       * - the compressImageQuality number is not present or is 1 (meaning no compression)\n       */\n      const compressedUri = await (file.source === 'camera' ||\n      !file.height ||\n      !file.width ||\n      typeof value.compressImageQuality !== 'number' ||\n      value.compressImageQuality === 1\n        ? uri\n        : compressImage({\n            compressImageQuality: value.compressImageQuality,\n            height: file.height,\n            uri,\n            width: file.width,\n          }));\n      const filename = file.filename ?? uri.replace(/^(file:\\/\\/|content:\\/\\/)/, '');\n      const contentType = lookup(filename) || 'multipart/form-data';\n      if (value.doImageUploadRequest) {\n        response = await value.doImageUploadRequest(file, channel);\n      } else if (compressedUri && channel) {\n        if (value.sendImageAsync) {\n          channel.sendImage(compressedUri, filename, contentType).then((res) => {\n            if (asyncIds.includes(id)) {\n              // Evaluates to true if user hit send before image successfully uploaded\n              setAsyncUploads((prevAsyncUploads) => {\n                prevAsyncUploads[id] = {\n                  ...prevAsyncUploads[id],\n                  state: FileState.UPLOADED,\n                  url: res.file,\n                };\n                return prevAsyncUploads;\n              });\n            } else {\n              const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n                url: res.file,\n              });\n              setImageUploads(newImageUploads);\n            }\n          });\n        } else {\n          response = await channel.sendImage(compressedUri, filename, contentType);\n        }\n      }\n\n      if (Object.keys(response).length) {\n        const newImageUploads = getUploadSetStateAction<ImageUpload>(id, FileState.UPLOADED, {\n          height: file.height,\n          url: response.file,\n          width: file.width,\n        });\n        setImageUploads(newImageUploads);\n      }\n    } catch (error) {\n      handleFileOrImageUploadError(error, true, id);\n    }\n  };\n\n  const uploadNewFile = async (file: File) => {\n    const id: string = generateRandomId();\n\n    const isBlockedFileExtension: boolean | undefined = blockedFileExtensionTypes?.some(\n      (fileExtensionType: string) => file.name?.includes(fileExtensionType),\n    );\n    const isBlockedFileMimeType: boolean | undefined = blockedFileMimeTypes?.some(\n      (mimeType: string) => file.name?.includes(mimeType),\n    );\n\n    const fileState =\n      isBlockedFileExtension || isBlockedFileMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newFile: FileUpload = {\n      duration: 0,\n      file,\n      id: file.id || id,\n      paused: true,\n      progress: 0,\n      state: fileState,\n    };\n\n    await Promise.all([\n      setFileUploads((prevFileUploads) => prevFileUploads.concat([newFile])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedFileExtension) {\n      uploadFile({ newFile });\n    }\n  };\n\n  const uploadNewImage = async (image: Partial<Asset>) => {\n    const id = generateRandomId();\n\n    const isBlockedImageMimeType = blockedImageMimeTypes?.some((mimeType: string) =>\n      image.uri?.includes(mimeType),\n    );\n\n    const isBlockedImageExtension = blockedImageExtensionTypes?.some((imageExtensionType: string) =>\n      image.uri?.includes(imageExtensionType),\n    );\n\n    const imageState =\n      isBlockedImageExtension || isBlockedImageMimeType\n        ? FileState.NOT_SUPPORTED\n        : FileState.UPLOADING;\n\n    const newImage: ImageUpload = {\n      file: image,\n      height: image.height,\n      id,\n      state: imageState,\n      url: image.uri,\n      width: image.width,\n    };\n\n    await Promise.all([\n      setImageUploads((prevImageUploads) => prevImageUploads.concat([newImage])),\n      setNumberOfUploads((prevNumberOfUploads) => prevNumberOfUploads + 1),\n    ]);\n\n    if (!isBlockedImageExtension) {\n      uploadImage({ newImage });\n    }\n  };\n\n  const messageInputContext = useCreateMessageInputContext({\n    appendText,\n    asyncIds,\n    asyncUploads,\n    closeAttachmentPicker,\n    cooldownEndsAt,\n    fileUploads,\n    giphyActive,\n    imageUploads,\n    inputBoxRef,\n    isValidMessage,\n    mentionedUsers,\n    numberOfUploads,\n    onChange,\n    onSelectItem,\n    openAttachmentPicker,\n    openCommandsPicker,\n    openFilePicker: pickFile,\n    openMentionsPicker,\n    pickFile,\n    removeFile,\n    removeImage,\n    resetInput,\n    selectedPicker,\n    sending,\n    sendMessageAsync,\n    sendThreadMessageInChannel,\n    setAsyncIds,\n    setAsyncUploads,\n    setFileUploads,\n    setGiphyActive,\n    setImageUploads,\n    setInputBoxRef,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setSendThreadMessageInChannel,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n    thread,\n    toggleAttachmentPicker,\n    triggerSettings,\n    updateMessage,\n    uploadFile,\n    uploadImage,\n    uploadNewFile,\n    uploadNewImage,\n    ...value,\n    sendMessage, // overriding the originally passed in sendMessage\n  });\n\n  return (\n    <MessageInputContext.Provider\n      value={messageInputContext as unknown as MessageInputContextValue}\n    >\n      {children}\n    </MessageInputContext.Provider>\n  );\n};\n\nexport const useMessageInputContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>() => {\n  const contextValue = useContext(\n    MessageInputContext,\n  ) as unknown as MessageInputContextValue<StreamChatGenerics>;\n\n  if (contextValue === DEFAULT_BASE_CONTEXT_VALUE && !isTestEnvironment()) {\n    throw new Error(\n      `The useMessageInputContext hook was called outside of the MessageInputContext provider. Make sure you have configured Channel component correctly - https://getstream.io/chat/docs/sdk/reactnative/basics/hello_stream_chat/#channel`,\n    );\n  }\n\n  return contextValue;\n};\n\n/**\n * Typescript currently does not support partial inference so if MessageInputContext\n * typing is desired while using the HOC withMessageInputContext the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withMessageInputContext = <\n  P extends UnknownType,\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  Component: React.ComponentType<P>,\n): React.FC<Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>> => {\n  const WithMessageInputContextComponent = (\n    props: Omit<P, keyof MessageInputContextValue<StreamChatGenerics>>,\n  ) => {\n    const messageInputContext = useMessageInputContext<StreamChatGenerics>();\n\n    return <Component {...(props as P)} {...messageInputContext} />;\n  };\n  WithMessageInputContextComponent.displayName = `WithMessageInputContext${getDisplayName(\n    Component,\n  )}`;\n  return WithMessageInputContextComponent;\n};\n"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/stream-chat-react-native-core/src/components/MessageInput/MessageInput.tsx b/node_modules/stream-chat-react-native-core/src/components/MessageInput/MessageInput.tsx
index c222ac0..55ca37a 100644
--- a/node_modules/stream-chat-react-native-core/src/components/MessageInput/MessageInput.tsx
+++ b/node_modules/stream-chat-react-native-core/src/components/MessageInput/MessageInput.tsx
@@ -274,7 +274,7 @@ const MessageInputWithContext = <
   }, [imagesForInput]);
 
   const MEGA_BYTES_TO_BYTES = 1024 * 1024;
-  const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;
+  const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;
 
   const uploadImagesHandler = () => {
     const imageToUpload = selectedImages.find((selectedImage) => {
diff --git a/node_modules/stream-chat-react-native-core/src/contexts/messageInputContext/MessageInputContext.tsx b/node_modules/stream-chat-react-native-core/src/contexts/messageInputContext/MessageInputContext.tsx
index 98dda2a..10ead17 100644
--- a/node_modules/stream-chat-react-native-core/src/contexts/messageInputContext/MessageInputContext.tsx
+++ b/node_modules/stream-chat-react-native-core/src/contexts/messageInputContext/MessageInputContext.tsx
@@ -588,7 +588,7 @@ export const MessageInputProvider = <
     });
 
     const MEGA_BYTES_TO_BYTES = 1024 * 1024;
-    const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 100;
+    const MAX_FILE_SIZE_TO_UPLOAD_IN_MB = 1000;
 
     if (!result.cancelled && result.assets) {
       const totalFileSize = result.assets.reduce((acc, asset) => acc + Number(asset.size), 0);
